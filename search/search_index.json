{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Principal En esta web estar\u00e1n todas nuestras pr\u00e1cticas grupales.","title":"Principal"},{"location":"#principal","text":"En esta web estar\u00e1n todas nuestras pr\u00e1cticas grupales.","title":"Principal"},{"location":"p1-servidores-clientes/intro/","text":"Introducci\u00f3n En esta pr\u00e1ctica se instalan y configuran distintos servidores y clientes de bases de datos. Este trabajo ha sido realizado por: Adri\u00e1n Jaramillo Rodr\u00edguez (capit\u00e1n) Jos\u00e9 Juan Herv\u00e1s Carrasco (secretario) Arantxa Fern\u00e1ndez Morat\u00f3 (facilitadora) Antonio March\u00e1n Posada (portavoz) Puedes empezar a navegar por la documentaci\u00f3n utilizando el navbar a tu izquierda. Esperamos que esta documentaci\u00f3n sea clara, y de utilidad.","title":"Introducci\u00f3n"},{"location":"p1-servidores-clientes/intro/#introduccion","text":"En esta pr\u00e1ctica se instalan y configuran distintos servidores y clientes de bases de datos. Este trabajo ha sido realizado por: Adri\u00e1n Jaramillo Rodr\u00edguez (capit\u00e1n) Jos\u00e9 Juan Herv\u00e1s Carrasco (secretario) Arantxa Fern\u00e1ndez Morat\u00f3 (facilitadora) Antonio March\u00e1n Posada (portavoz) Puedes empezar a navegar por la documentaci\u00f3n utilizando el navbar a tu izquierda. Esperamos que esta documentaci\u00f3n sea clara, y de utilidad.","title":"Introducci\u00f3n"},{"location":"p1-servidores-clientes/rg/herramienta-mongodb/","text":"Herramienta web MongoDB MongoDB-PHP-GUI https://github.com/SamuelTallet/MongoDB-PHP-GUI 1. Configuraci\u00f3n previa Antes de instalar el contenedor vamos a instalar docker con los siguientes pasos. curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null Actualizar los repositorios e instalar docker. sudo apt update sudo apt install docker-ce docker-ce-cli containerd.io Comprobar si est\u00e1n activados los servicios. systemctl status docker containerd 2. Instalaci\u00f3n MongoDB-PHP-GUI Descargamos el contenedor docker. sudo docker pull samueltallet/mongodb-php-gui 3. Conexi\u00f3n Correr el docker con el siguiente comando: sudo docker run --add-host localhost:192.168.122.98 --publish 5000:5000 --rm samueltallet/mongodb-php-gui Nos aparece una direcci\u00f3n que tendremos que escribir en el navegador. En mi caso es \"http://0.0.0.0:5000/\". Escribimos \"mongodb://admin:admin@192.168.122.98:27017\" y hacemos click en \"Login\". Nos aparecer\u00e1n las bases de datos que tenemos en MongoDB. Seleccionamos la base de datos maravilla y se nos abre un desplegable con las colecciones. Selecciono la colecci\u00f3n pel\u00edcula. Tenemos opciones para insertar, borrar, contar o buscar por filtro, y las opciones limit, sort y order. Tambi\u00e9n tenemos arriba pesta\u00f1as con diferentes opciones. Entre ellas, tenemos la posibilidad de administrar los usuarios de las bases de datos. 4. Conexi\u00f3n remota Para conectarnos desde un cliente remotamente solo tendremos que seguir los pasos anteriores y podremos acceder sin ning\u00fan problema. En la siguiente captura vemos la ip del cliente desde el que estamos accediendo y al correr docker nos conectamos a la ip del servidor MongoDB. Copiamos la direcci\u00f3n en el navegador. Hacemos \"Login\" y ya habremos entrado de forma remota al servidor MongoDB.","title":"MongoDB-PHP-GUI"},{"location":"p1-servidores-clientes/rg/herramienta-mongodb/#herramienta-web-mongodb","text":"","title":"Herramienta web MongoDB"},{"location":"p1-servidores-clientes/rg/herramienta-mongodb/#mongodb-php-gui","text":"https://github.com/SamuelTallet/MongoDB-PHP-GUI","title":"MongoDB-PHP-GUI"},{"location":"p1-servidores-clientes/rg/herramienta-mongodb/#1-configuracion-previa","text":"Antes de instalar el contenedor vamos a instalar docker con los siguientes pasos. curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null Actualizar los repositorios e instalar docker. sudo apt update sudo apt install docker-ce docker-ce-cli containerd.io Comprobar si est\u00e1n activados los servicios. systemctl status docker containerd","title":"1. Configuraci\u00f3n previa"},{"location":"p1-servidores-clientes/rg/herramienta-mongodb/#2-instalacion-mongodb-php-gui","text":"Descargamos el contenedor docker. sudo docker pull samueltallet/mongodb-php-gui","title":"2. Instalaci\u00f3n MongoDB-PHP-GUI"},{"location":"p1-servidores-clientes/rg/herramienta-mongodb/#3-conexion","text":"Correr el docker con el siguiente comando: sudo docker run --add-host localhost:192.168.122.98 --publish 5000:5000 --rm samueltallet/mongodb-php-gui Nos aparece una direcci\u00f3n que tendremos que escribir en el navegador. En mi caso es \"http://0.0.0.0:5000/\". Escribimos \"mongodb://admin:admin@192.168.122.98:27017\" y hacemos click en \"Login\". Nos aparecer\u00e1n las bases de datos que tenemos en MongoDB. Seleccionamos la base de datos maravilla y se nos abre un desplegable con las colecciones. Selecciono la colecci\u00f3n pel\u00edcula. Tenemos opciones para insertar, borrar, contar o buscar por filtro, y las opciones limit, sort y order. Tambi\u00e9n tenemos arriba pesta\u00f1as con diferentes opciones. Entre ellas, tenemos la posibilidad de administrar los usuarios de las bases de datos.","title":"3. Conexi\u00f3n"},{"location":"p1-servidores-clientes/rg/herramienta-mongodb/#4-conexion-remota","text":"Para conectarnos desde un cliente remotamente solo tendremos que seguir los pasos anteriores y podremos acceder sin ning\u00fan problema. En la siguiente captura vemos la ip del cliente desde el que estamos accediendo y al correr docker nos conectamos a la ip del servidor MongoDB. Copiamos la direcci\u00f3n en el navegador. Hacemos \"Login\" y ya habremos entrado de forma remota al servidor MongoDB.","title":"4. Conexi\u00f3n remota"},{"location":"p1-servidores-clientes/rg/herramienta-postgresql/","text":"Herramienta web PostgreSQL La herramienta web que he elegido para configurar postgres se llama phpPgAdmin. Para poder instalar phpPgAdmin primero debemos realizar la instalaci\u00f3n y configuraci\u00f3n postgres al igual que la instalaci\u00f3n y configuraci\u00f3n de apache2. Instalacion phpPgAdmin y configuraci\u00f3n Primero Instalamos apache2 sudo apt install apache2 Seguidamente, instalamos phppgadmin: sudo apt install phppgadmin php-pgsql Una vez instalado, editamos el fichero de configuraci\u00f3n phppgadmin.conf y comentamos la l\u00ednea Require local: Ahora en el fichero de configuraci\u00f3n de config.inc.php, cambiamos el valor true por false en la siguiente l\u00ednea: Ahora definimos las siguientes l\u00edneas dentro de config.inc.php: Reiniciamos apache y accedemos a phppgmyadmin: Introducimos nuestras credenciales que configuramos en la instalaci\u00f3n y configuraci\u00f3n de postgres y accedemos a la configuraci\u00f3n web: Introduzco los datos: Accedo al sistema:","title":"phpPgAdmin"},{"location":"p1-servidores-clientes/rg/herramienta-postgresql/#herramienta-web-postgresql","text":"La herramienta web que he elegido para configurar postgres se llama phpPgAdmin. Para poder instalar phpPgAdmin primero debemos realizar la instalaci\u00f3n y configuraci\u00f3n postgres al igual que la instalaci\u00f3n y configuraci\u00f3n de apache2.","title":"Herramienta web PostgreSQL"},{"location":"p1-servidores-clientes/rg/herramienta-postgresql/#instalacion-phppgadmin-y-configuracion","text":"Primero Instalamos apache2 sudo apt install apache2 Seguidamente, instalamos phppgadmin: sudo apt install phppgadmin php-pgsql Una vez instalado, editamos el fichero de configuraci\u00f3n phppgadmin.conf y comentamos la l\u00ednea Require local: Ahora en el fichero de configuraci\u00f3n de config.inc.php, cambiamos el valor true por false en la siguiente l\u00ednea: Ahora definimos las siguientes l\u00edneas dentro de config.inc.php: Reiniciamos apache y accedemos a phppgmyadmin: Introducimos nuestras credenciales que configuramos en la instalaci\u00f3n y configuraci\u00f3n de postgres y accedemos a la configuraci\u00f3n web: Introduzco los datos: Accedo al sistema:","title":"Instalacion phpPgAdmin y configuraci\u00f3n"},{"location":"p1-servidores-clientes/rg/oracle-enterprise-manager/","text":"Oracle Enterprise Manager Primero comenzaremos mirando el puerto por el cual podremos acceder a Oracle Enterprise, para ello tenemos que conectarnos a trav\u00e9s de sys: Puede ocurrir que no tengamos el puerto activo, lo cual se mostrar\u00eda con un 0, ingresaremos el siguiente comando: exec dbms_xdb_config.sethttpsport(5500) Ahora vamos a sqlplus y vamos a especificar una contrase\u00f1a al usuario sys, de lo contrario no podremos conectarnos: alter user sys identified by sys; Ahora especificando la ip y el puerto https://192.168.122.20:5500/em, podemos acceder al login. Tenemos acceso a Oracle Enterprise y podremos ver todos los recursos que se est\u00e1n utilizando en el sistema. El enlace es en la red local con lo cual podemos acceder a Oracle enterprise desde cualquier web de nuestr \u00e1rea local.","title":"Oracle Enterprise Manager"},{"location":"p1-servidores-clientes/rg/oracle-enterprise-manager/#oracle-enterprise-manager","text":"Primero comenzaremos mirando el puerto por el cual podremos acceder a Oracle Enterprise, para ello tenemos que conectarnos a trav\u00e9s de sys: Puede ocurrir que no tengamos el puerto activo, lo cual se mostrar\u00eda con un 0, ingresaremos el siguiente comando: exec dbms_xdb_config.sethttpsport(5500) Ahora vamos a sqlplus y vamos a especificar una contrase\u00f1a al usuario sys, de lo contrario no podremos conectarnos: alter user sys identified by sys; Ahora especificando la ip y el puerto https://192.168.122.20:5500/em, podemos acceder al login. Tenemos acceso a Oracle Enterprise y podremos ver todos los recursos que se est\u00e1n utilizando en el sistema. El enlace es en la red local con lo cual podemos acceder a Oracle enterprise desde cualquier web de nuestr \u00e1rea local.","title":"Oracle Enterprise Manager"},{"location":"p1-servidores-clientes/rg/phpmyadmin/","text":"phpMyAdmin Apache Instalo: sudo apt install apache2 Compruebo que funciona: vagrant@servidormariadb:~$ sudo systemctl status apache2 \u25cf apache2.service - The Apache HTTP Server Loaded: loaded ( /lib/systemd/system/apache2.service ; enabled ; vendor preset: enabled ) Active: active ( running ) since Mon 2022 -10-24 12 :17:52 UTC ; 16s ago Docs: https://httpd.apache.org/docs/2.4/ Main PID: 1584 ( apache2 ) Tasks: 55 ( limit: 1128 ) Memory: 8 .8M CPU: 23ms CGroup: /system.slice/apache2.service \u251c\u25001584 /usr/sbin/apache2 -k start \u251c\u25001586 /usr/sbin/apache2 -k start \u2514\u25001587 /usr/sbin/apache2 -k start Oct 24 12 :17:52 servidormariadb systemd [ 1 ] : Starting The Apache HTTP Server... Oct 24 12 :17:52 servidormariadb apachectl [ 1583 ] : AH00558: apache2: Could not reliably determine the server 's fully qualified domain name, using 127.0.1.1. Set the ' ServerNam> Oct 24 12 :17:52 servidormariadb systemd [ 1 ] : Started The Apache HTTP Server. PHP Instalo los paquetes que necesitaremos: sudo apt install wget php php-cgi php-mysqli php-pear php-mbstring libapache2-mod-php php-common php-phpseclib php-mysql En MariaDB Login como root: sudo mariadb Creo el usuario: CREATE USER 'pma-admin' @localhost IDENTIFIED BY '1234' ; Le doy privilegios: GRANT ALL PRIVILEGES ON *.* TO 'pma-admin' @localhost IDENTIFIED BY '1234' ; FLUSH PRIVILEGES ; Descarga wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz tar xvf phpMyAdmin-latest-all-languages.tar.gz Instalaci\u00f3n Paso la aplicaci\u00f3n al DocumentRoot por defecto: sudo mv phpMyAdmin-5.2.0-all-languages /var/www/html/phpmyadmin Creo el fichero de configuraci\u00f3n: cd /var/www/html cp phpmyadmin/config.sample.inc.php phpmyadmin/config.inc.php Creo el directorio tmp: mkdir /var/www/html/phpmyadmin/tmp Genero la clave que usaremos para phpMyadmin: vagrant@servidormariadb:/var/www/html$ openssl rand -base64 32 knLvNBNeqZDIoJxYS4v+RnLqj8mzNxmZWdJSr1aClPk = Modifico la siguiente l\u00ednea en /var/www/html/phpmyadmin/config.inc.php con la clave generada, recortada por el final para que sea exactamente de 32 caracteres: $cfg [ 'blowfish_secret' ] = 'knLvNBNeqZDIoJxYS4v+RnLqj8mzNxmZ' ; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */ A\u00f1ado tambi\u00e9n la siguiente l\u00ednea en /var/www/html/phpmyadmin/config.inc.php : $cfg [ 'TempDir' ] = '/var/www/html/phpmyadmin/tmp' ; Cambio los propietarios: sudo chown -R www-data:www-data /var/www/html/phpmyadmin Creo el siguiente fichero conf: sudo touch /etc/apache2/conf-available/phpmyadmin.conf Le a\u00f1ado el siguiente contenido: Alias /phpmyadmin /var/www/html/phpmyadmin <Directory /var/www/html/phpmyadmin/> AddDefaultCharset UTF-8 <IfModule mod_authz_core.c> <RequireAny> Require all granted </RequireAny> </IfModule> </Directory> <Directory /var/www/html/phpmyadmin/setup/> <IfModule mod_authz_core.c> <RequireAny> Require all granted </RequireAny> </IfModule> </Directory> Lo habilito: sudo a2enconf phpmyadmin.conf Reinicio Apache: sudo systemctl restart apache2 Acceso Entro y accedo con el usuario que creamos anteriormente: Al principio tendremos este warning, clicamos en \"Find out why\": Tenemos que clicar \"Create\" para crear la base de datos que necesita phpMyAdmin: Vemos que todas las salidas son \"OK\" y que la base de datos se ha creado: Uso A partir de ahora ya podr\u00edamos administrar nuestras bases de datos con esta herramienta. Por ejemplo, podemos ver las tablas que tiene bibliofilos : Podemos ver tambi\u00e9n todos los registros que tiene cada tabla: Y como es l\u00f3gico, a partir de ahora podr\u00edamos hacer todas las operaciones de administraci\u00f3n sobre MariaDB que quisi\u00e9ramos. Prueba desde clientemariadb Bibliograf\u00eda https://www.how2shout.com/linux/how-to-install-phpmyadmin-on-debian-11-bullseye-apache/","title":"phpMyAdmin"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#phpmyadmin","text":"","title":"phpMyAdmin"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#apache","text":"Instalo: sudo apt install apache2 Compruebo que funciona: vagrant@servidormariadb:~$ sudo systemctl status apache2 \u25cf apache2.service - The Apache HTTP Server Loaded: loaded ( /lib/systemd/system/apache2.service ; enabled ; vendor preset: enabled ) Active: active ( running ) since Mon 2022 -10-24 12 :17:52 UTC ; 16s ago Docs: https://httpd.apache.org/docs/2.4/ Main PID: 1584 ( apache2 ) Tasks: 55 ( limit: 1128 ) Memory: 8 .8M CPU: 23ms CGroup: /system.slice/apache2.service \u251c\u25001584 /usr/sbin/apache2 -k start \u251c\u25001586 /usr/sbin/apache2 -k start \u2514\u25001587 /usr/sbin/apache2 -k start Oct 24 12 :17:52 servidormariadb systemd [ 1 ] : Starting The Apache HTTP Server... Oct 24 12 :17:52 servidormariadb apachectl [ 1583 ] : AH00558: apache2: Could not reliably determine the server 's fully qualified domain name, using 127.0.1.1. Set the ' ServerNam> Oct 24 12 :17:52 servidormariadb systemd [ 1 ] : Started The Apache HTTP Server.","title":"Apache"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#php","text":"Instalo los paquetes que necesitaremos: sudo apt install wget php php-cgi php-mysqli php-pear php-mbstring libapache2-mod-php php-common php-phpseclib php-mysql","title":"PHP"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#en-mariadb","text":"Login como root: sudo mariadb Creo el usuario: CREATE USER 'pma-admin' @localhost IDENTIFIED BY '1234' ; Le doy privilegios: GRANT ALL PRIVILEGES ON *.* TO 'pma-admin' @localhost IDENTIFIED BY '1234' ; FLUSH PRIVILEGES ;","title":"En MariaDB"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#descarga","text":"wget https://www.phpmyadmin.net/downloads/phpMyAdmin-latest-all-languages.tar.gz tar xvf phpMyAdmin-latest-all-languages.tar.gz","title":"Descarga"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#instalacion","text":"Paso la aplicaci\u00f3n al DocumentRoot por defecto: sudo mv phpMyAdmin-5.2.0-all-languages /var/www/html/phpmyadmin Creo el fichero de configuraci\u00f3n: cd /var/www/html cp phpmyadmin/config.sample.inc.php phpmyadmin/config.inc.php Creo el directorio tmp: mkdir /var/www/html/phpmyadmin/tmp Genero la clave que usaremos para phpMyadmin: vagrant@servidormariadb:/var/www/html$ openssl rand -base64 32 knLvNBNeqZDIoJxYS4v+RnLqj8mzNxmZWdJSr1aClPk = Modifico la siguiente l\u00ednea en /var/www/html/phpmyadmin/config.inc.php con la clave generada, recortada por el final para que sea exactamente de 32 caracteres: $cfg [ 'blowfish_secret' ] = 'knLvNBNeqZDIoJxYS4v+RnLqj8mzNxmZ' ; /* YOU MUST FILL IN THIS FOR COOKIE AUTH! */ A\u00f1ado tambi\u00e9n la siguiente l\u00ednea en /var/www/html/phpmyadmin/config.inc.php : $cfg [ 'TempDir' ] = '/var/www/html/phpmyadmin/tmp' ; Cambio los propietarios: sudo chown -R www-data:www-data /var/www/html/phpmyadmin Creo el siguiente fichero conf: sudo touch /etc/apache2/conf-available/phpmyadmin.conf Le a\u00f1ado el siguiente contenido: Alias /phpmyadmin /var/www/html/phpmyadmin <Directory /var/www/html/phpmyadmin/> AddDefaultCharset UTF-8 <IfModule mod_authz_core.c> <RequireAny> Require all granted </RequireAny> </IfModule> </Directory> <Directory /var/www/html/phpmyadmin/setup/> <IfModule mod_authz_core.c> <RequireAny> Require all granted </RequireAny> </IfModule> </Directory> Lo habilito: sudo a2enconf phpmyadmin.conf Reinicio Apache: sudo systemctl restart apache2","title":"Instalaci\u00f3n"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#acceso","text":"Entro y accedo con el usuario que creamos anteriormente: Al principio tendremos este warning, clicamos en \"Find out why\": Tenemos que clicar \"Create\" para crear la base de datos que necesita phpMyAdmin: Vemos que todas las salidas son \"OK\" y que la base de datos se ha creado:","title":"Acceso"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#uso","text":"A partir de ahora ya podr\u00edamos administrar nuestras bases de datos con esta herramienta. Por ejemplo, podemos ver las tablas que tiene bibliofilos : Podemos ver tambi\u00e9n todos los registros que tiene cada tabla: Y como es l\u00f3gico, a partir de ahora podr\u00edamos hacer todas las operaciones de administraci\u00f3n sobre MariaDB que quisi\u00e9ramos.","title":"Uso"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#prueba-desde-clientemariadb","text":"","title":"Prueba desde clientemariadb"},{"location":"p1-servidores-clientes/rg/phpmyadmin/#bibliografia","text":"https://www.how2shout.com/linux/how-to-install-phpmyadmin-on-debian-11-bullseye-apache/","title":"Bibliograf\u00eda"},{"location":"p1-servidores-clientes/rg/sql-developer/","text":"SQL Developer 1. Instalaci\u00f3n En mi m\u00e1quina Windows 10 descargo SQL Developer de la p\u00e1gina oficial de Oracle. https://www.oracle.com/database/sqldeveloper/technologies/download/ Una vez descargado, se descomprime el .zip y en la carpeta creada hacemos click en sqldeveloper . Nos aparecer\u00e1 el siguiente recuadro, en el que se nos preguntar\u00e1 si queremos importar las preferencias de una instalaci\u00f3n anterior. Como en nuestro caso no ten\u00edamos instalaci\u00f3n hacemos click en \"No\" . Podemos crear un acceso directo en el escritorio para que nos sea m\u00e1s f\u00e1cil acceder a sqldeveloper la pr\u00f3xima vez que encendamos el ordenador. Ya nos aparecer\u00e1 la ventana del programa. 2. Conexi\u00f3n a base de datos La conexi\u00f3n a la base de datos se puede hacer de dos formas, de forma manual o cargando un archivo TNS Names. Con TNS Names habr\u00eda que dejar el contenido de tnsnames.ora de la siguiente manera, para que se conecte a nuestro servidor Oracle: ORCLCDB= (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.122.98)(PORT = 1521)) ) (CONNECT_DATA = (SERVICE_NAME = ORCLCDB) ) ) Nosotros lo vamos a hacer de forma manual. En SQL Developer presionamos en \"Crear una conexi\u00f3n manualmente\" o le damos al s\u00edmbolo de + . Nos aparecer\u00e1 una ventana para crear nuevas conexiones. En esta ventana habr\u00e1n diferentes valores que tendremos que rellenar. Name: escribiremos el nombre que le queremos dar a la conexi\u00f3n creada. Nosotros la hemos llamado \"Conexion-Oracle19c-Debian\" . Usuario: escribimos el nombre de usuario de la base de datos con el que nos conectaremos, en mi caso \"admin\" . Contrase\u00f1a: la contrase\u00f1a del usuario con el que accederemos. Rol: esta opci\u00f3n la dejamos por defecto si vamos a entrar con un usuario normal. Tipo de conexi\u00f3n: dejamos la opci\u00f3n b\u00e1sica. Nombre del Host: escribimos la ip del servidor de base de datos. En nuestro caso es \"192.168.122.98\" . Puerto: ponemos el puerto del servidor. Por defecto suele ser 1521 , si en el servidor se ha cambiado el puerto habr\u00e1 que tenerlo en cuenta. SID: escribimos nuestro SID, que en nuestro caso es \"ORCLCDB\" . Quedar\u00eda de la siguiente manera. Clickamos en la opci\u00f3n Probar y en Estado debr\u00eda poner \"Correcto\". Si aparece error ser\u00e1 porque no tenemos bien configurado algo en el servidor o nos hemos equivocado en alg\u00fan dato. Le damos a Conectar y ya nos aparecer\u00e1 a la izquierda la base de datos con sus tablas. Si seleccionamos una tabla podremos ver sus columnas. Con SQL Developer podremos modificar todos los valores de la base de datos, crear nuevas tablas, modificar columnas, a\u00f1adir o borrar datos, etc. de una forma gr\u00e1fica.","title":"SQL Developer"},{"location":"p1-servidores-clientes/rg/sql-developer/#sql-developer","text":"","title":"SQL Developer"},{"location":"p1-servidores-clientes/rg/sql-developer/#1-instalacion","text":"En mi m\u00e1quina Windows 10 descargo SQL Developer de la p\u00e1gina oficial de Oracle. https://www.oracle.com/database/sqldeveloper/technologies/download/ Una vez descargado, se descomprime el .zip y en la carpeta creada hacemos click en sqldeveloper . Nos aparecer\u00e1 el siguiente recuadro, en el que se nos preguntar\u00e1 si queremos importar las preferencias de una instalaci\u00f3n anterior. Como en nuestro caso no ten\u00edamos instalaci\u00f3n hacemos click en \"No\" . Podemos crear un acceso directo en el escritorio para que nos sea m\u00e1s f\u00e1cil acceder a sqldeveloper la pr\u00f3xima vez que encendamos el ordenador. Ya nos aparecer\u00e1 la ventana del programa.","title":"1. Instalaci\u00f3n"},{"location":"p1-servidores-clientes/rg/sql-developer/#2-conexion-a-base-de-datos","text":"La conexi\u00f3n a la base de datos se puede hacer de dos formas, de forma manual o cargando un archivo TNS Names. Con TNS Names habr\u00eda que dejar el contenido de tnsnames.ora de la siguiente manera, para que se conecte a nuestro servidor Oracle: ORCLCDB= (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.122.98)(PORT = 1521)) ) (CONNECT_DATA = (SERVICE_NAME = ORCLCDB) ) ) Nosotros lo vamos a hacer de forma manual. En SQL Developer presionamos en \"Crear una conexi\u00f3n manualmente\" o le damos al s\u00edmbolo de + . Nos aparecer\u00e1 una ventana para crear nuevas conexiones. En esta ventana habr\u00e1n diferentes valores que tendremos que rellenar. Name: escribiremos el nombre que le queremos dar a la conexi\u00f3n creada. Nosotros la hemos llamado \"Conexion-Oracle19c-Debian\" . Usuario: escribimos el nombre de usuario de la base de datos con el que nos conectaremos, en mi caso \"admin\" . Contrase\u00f1a: la contrase\u00f1a del usuario con el que accederemos. Rol: esta opci\u00f3n la dejamos por defecto si vamos a entrar con un usuario normal. Tipo de conexi\u00f3n: dejamos la opci\u00f3n b\u00e1sica. Nombre del Host: escribimos la ip del servidor de base de datos. En nuestro caso es \"192.168.122.98\" . Puerto: ponemos el puerto del servidor. Por defecto suele ser 1521 , si en el servidor se ha cambiado el puerto habr\u00e1 que tenerlo en cuenta. SID: escribimos nuestro SID, que en nuestro caso es \"ORCLCDB\" . Quedar\u00eda de la siguiente manera. Clickamos en la opci\u00f3n Probar y en Estado debr\u00eda poner \"Correcto\". Si aparece error ser\u00e1 porque no tenemos bien configurado algo en el servidor o nos hemos equivocado en alg\u00fan dato. Le damos a Conectar y ya nos aparecer\u00e1 a la izquierda la base de datos con sus tablas. Si seleccionamos una tabla podremos ver sus columnas. Con SQL Developer podremos modificar todos los valores de la base de datos, crear nuevas tablas, modificar columnas, a\u00f1adir o borrar datos, etc. de una forma gr\u00e1fica.","title":"2. Conexi\u00f3n a base de datos"},{"location":"p1-servidores-clientes/ri/alumno1/","text":"Alumno 1 Escenario Vagrant.configure ( \"2\" ) do | config | config.vm.synced_folder \".\" , \"/vagrant\" , disabled: true config.vm.provider :libvirt do | libvirt | libvirt.cpus = 2 libvirt.memory = 1024 end config.vm.define :servidororacle do | servidororacle | servidororacle.vm.box = \"debian/bullseye64\" servidororacle.vm.provider :libvirt do | servidororacle | servidororacle.memory = 4096 servidororacle.cpus = 6 end servidororacle.vm.hostname = \"servidororacle\" servidororacle.vm.network :private_network, :libvirt__network_name = > \"red-oracle\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.0.2\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :clienteoracle do | clienteoracle | clienteoracle.vm.box = \"debian/bullseye64\" clienteoracle.vm.hostname = \"clienteoracle\" clienteoracle.vm.network :private_network, :libvirt__network_name = > \"red-oracle\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.0.3\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :servidorpostgresql do | servidorpostgresql | servidorpostgresql.vm.box = \"debian/bullseye64\" servidorpostgresql.vm.hostname = \"servidorpostgresql\" servidorpostgresql.vm.network :private_network, :libvirt__network_name = > \"red-postgresql\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.1.2\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :clientepostgresql do | clientepostgresql | clientepostgresql.vm.box = \"debian/bullseye64\" clientepostgresql.vm.hostname = \"clientepostgresql\" clientepostgresql.vm.network :private_network, :libvirt__network_name = > \"red-postgresql\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.1.3\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :servidormariadb do | servidormariadb | servidormariadb.vm.box = \"debian/bullseye64\" servidormariadb.vm.hostname = \"servidormariadb\" servidormariadb.vm.network :private_network, :libvirt__network_name = > \"red-mariadb\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.2.2\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :clientemariadb do | clientemariadb | clientemariadb.vm.box = \"debian/bullseye64\" clientemariadb.vm.hostname = \"clientemariadb\" clientemariadb.vm.network :private_network, :libvirt__network_name = > \"red-mariadb\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.2.3\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :servidormongodb do | servidormongodb | servidormongodb.vm.box = \"debian/bullseye64\" servidormongodb.vm.hostname = \"servidormongodb\" servidormongodb.vm.network :private_network, :libvirt__network_name = > \"red-mongodb\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.3.2\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :clientemongodb do | clientemongodb | clientemongodb.vm.box = \"debian/bullseye64\" clientemongodb.vm.hostname = \"clientemongodb\" clientemongodb.vm.network :private_network, :libvirt__network_name = > \"red-mongodb\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.3.3\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end end 1. Oracle 19c 1.1 Redimensi\u00f3n de disco Tenemos que tener suficiente espacio para instalar Oracle Paro la VM: vagrant halt servidororacle Redimensiono el fichero de disco: virsh -c qemu:///system vol-resize p1-bd-alumno1_servidororacle.img 50G --pool default Dentro de la VM redimensiono la partici\u00f3n y el sistema de ficheros: echo \", +\" | sudo sfdisk -N 1 /dev/vda --no-reread sudo apt update sudo apt install parted sudo partprobe sudo resize2fs /dev/vda1 1.2 Instalaci\u00f3n del servidor 1.2.1 Descargo el rpm en mi host desde la p\u00e1gina oficial de Oracle: 1.2.2 Lo paso a la VM servidororacle : scp Downloads/oracle-database-ee-19c-1.0-1.x86_64.rpm vagrant@192.168.121.159:/home/vagrant 1.2.3 Instalo los paquetes requeridos: sudo apt install alien libaio1 unixodbc net-tools 1.2.4 Convierto el rpm a deb: sudo alien --scripts -d oracle-database-ee-19c-1.0-1.x86_64.rpm Como resultado tendremos el paquete oracle-database-ee-19c_1.0-2_amd64.deb 1.2.5 Creo el siguiente script: sudo pico /sbin/chkconfig Con el siguiente contenido: #!/bin/bash # Oracle 19c installer chkconfig hack file = /etc/init.d/oracle-19c if [[ ! ` tail -n1 $file | grep INIT ` ]] ; then echo >> $file echo '### BEGIN INIT INFO' >> $file echo '# Provides: Oracle 19c' >> $file echo '# Required-Start: $remote_fs $syslog' >> $file echo '# Required-Stop: $remote_fs $syslog' >> $file echo '# Default-Start: 2 3 4 5' >> $file echo '# Default-Stop: 0 1 6' >> $file echo '# Short-Description: Oracle 19c' >> $file echo '### END INIT INFO' >> $file fi update-rc.d oracle-19c defaults 80 01 Le doy permisos: sudo chmod 777 /sbin/chkconfig 1.2.6 Creo el siguiente fichero para los par\u00e1metros de Kernel de Oracle: sudo touch /etc/sysctl.d/60-oracle.conf Con el siguiente contenido: # Oracle 19c kernel parameters fs.file-max = 6815744 net.ipv4.ip_local_port_range = 9000 65000 kernel.sem = 250 32000 100 128 kernel.shmmax = 536870912 1.2.7 Arranco el siguiente servicio: sudo systemctl start procps 1.2.8 Creo el siguiente fichero para configurar el punto de montaje /dev/shm de Oracle: sudo touch /etc/rc2.d/S01shm_load Con el siguiente contenido: #!/bin/sh case \" $1 \" in start ) mkdir /var/lock/subsys 2 >/dev/null touch /var/lock/subsys/listener rm /dev/shm 2 >/dev/null mkdir /dev/shm 2 >/dev/null mount -t tmpfs shmfs -o size = 2048m /dev/shm ;; * ) echo error exit 1 ;; esac Le doy permisos: sudo chmod 777 /etc/rc2.d/S01shm_load Hago un reinicio: sudo reboot 1.2.9 Instalo el paquete: sudo dpkg --install oracle-database-ee-19c_1.0-2_amd64.deb 1.2.10 A\u00f1ado el par\u00e1metro -J-Doracle.assistants.dbca.validate.ConfigurationParams=false al final de la siguiente l\u00ednea en /etc/init.d/oracledb_ORCLCDB-19c : Quedar\u00eda de la siguiente manera la l\u00ednea al modificarla: $SU -s /bin/bash $ORACLE_OWNER -c \" $DBCA -silent -createDatabase -gdbName $ORACLE_SID -templateName $TEMPLATE_NAME -characterSet $CHARSET -createAsContainerDatabase $CREATE_AS_CDB -numberOfPDBs $NUMBER_OF_PDBS -pdbName $PDB_NAME -createListener $LISTENER_NAME : $LISTENER_PORT -datafileDestination $ORACLE_DATA_LOCATION -sid $ORACLE_SID -autoGeneratePasswords -emConfiguration DBEXPRESS -emExpressPort $EM_EXPRESS_PORT -J-Doracle.assistants.dbca.validate.ConfigurationParams=false\" 1.2.11 A\u00f1ado la siguiente l\u00ednea a /etc/hosts : 192 .168.121.159 servidororacle servidororacle 1.2.12 Ejecuto el script de configuraci\u00f3n de Oracle: sudo /etc/init.d/oracledb_ORCLCDB-19c configure 1.2.13 Edito el siguiente fichero: pico ~/.bashrc A\u00f1ado las siguientes variables de entorno al final del fichero: # Oracle environment variables export ORACLE_HOME = /opt/oracle/product/19c/dbhome_1 export ORACLE_SID = ORCLCDB export NLS_LANG = ` $ORACLE_HOME /bin/nls_lang.sh ` export ORACLE_BASE = /opt/oracle export LD_LIBRARY_PATH = $ORACLE_HOME /lib: $LD_LIBRARY_PATH export PATH = $ORACLE_HOME /bin: $PATH Aplico los cambios: . ~/.profile Hago un reinicio: sudo reboot 1.2.14 Inicio el servicio de Oracle: sudo systemctl start oracledb_ORCLCDB-19c 1.2.15 A\u00f1ado la contrase\u00f1a oracle al usuario oracle : sudo passwd oracle Cambio su shell: sudo usermod --shell /bin/bash oracle Creo su home: sudo mkdir /home/oracle Cambio los propietarios: sudo chown -R oracle:oinstall /home/oracle A\u00f1ado el siguiente fichero: touch ~/.profile Con el siguiente contenido: # ~/.profile: executed by the command interpreter for login shells. # This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login # exists. # see /usr/share/doc/bash/examples/startup-files for examples. # the files are located in the bash-doc package. # the default umask is set in /etc/profile; for setting the umask # for ssh logins, install and configure the libpam-umask package. #umask 022 # if running bash if [ -n \" $BASH_VERSION \" ] ; then # include .bashrc if it exists if [ -f \" $HOME /.bashrc\" ] ; then . \" $HOME /.bashrc\" fi fi # set PATH so it includes user's private bin if it exists if [ -d \" $HOME /bin\" ] ; then PATH = \" $HOME /bin: $PATH \" fi # set PATH so it includes user's private bin if it exists if [ -d \" $HOME /.local/bin\" ] ; then PATH = \" $HOME /.local/bin: $PATH \" fi Le a\u00f1ado a este usuario tambi\u00e9n las variables de entorno: pico ~/.bashrc # Oracle environment variables export ORACLE_HOME = /opt/oracle/product/19c/dbhome_1 export ORACLE_SID = ORCLCDB export NLS_LANG = ` $ORACLE_HOME /bin/nls_lang.sh ` export ORACLE_BASE = /opt/oracle export LD_LIBRARY_PATH = $ORACLE_HOME /lib: $LD_LIBRARY_PATH export PATH = $ORACLE_HOME /bin: $PATH Aplico los cambios: . ~/.profile Le hago admin: sudo usermod -aG sudo oracle A partir de ahora, para controlar Oracle correctamente, tendremos que estar logeados siempre con este usuario. 1.2.16 A\u00f1ado el usuario vagrant al grupo dba por si en alg\u00fan momento quiero acceder a sqlplus de manera r\u00e1pida: sudo usermod -a -G dba vagrant 1.3 Acceso local privilegiado oracle@servidororacle:~$ sqlplus / as sysdba SQL*Plus: Release 19 .0.0.0.0 - Production on Fri Oct 28 14 :13:53 2022 Version 19 .3.0.0.0 Copyright ( c ) 1982 , 2019 , Oracle. All rights reserved. Connected to: Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Version 19 .3.0.0.0 SELECT banner FROM v $version ; BANNER -------------------------------------------------------------------------------- Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Cuando en futuras ocasiones al conectarnos a Oracle nos aparezca el mensaje Connected to an idle instance , tenemos que ejecutar en sqlplus el comando startup . 1.4 Creaci\u00f3n de usuario alter session set \"_ORACLE_SCRIPT\" = true ; create user bibliofilos_admin identified by 1234 ; grant all privileges to bibliofilos_admin ; Pruebo que funciona el acceso: oracle@servidororacle:~$ sqlplus bibliofilos_admin/1234 SQL*Plus: Release 19 .0.0.0.0 - Production on Fri Oct 28 14 :18:26 2022 Version 19 .3.0.0.0 Copyright ( c ) 1982 , 2019 , Oracle. All rights reserved. Last Successful login time: Fri Oct 28 2022 13 :52:49 +00:00 Connected to: Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Version 19 .3.0.0.0 SQL> Pruebo que los privilegios se han aplicado correctamente con la siguiente consulta: select * from dba_sys_privs where grantee = 'BIBLIOFILOS_ADMIN' ; El output de esta consulta es demasiado largo, as\u00ed que entra en este gist para verlo. 1.5 Creaci\u00f3n de tablas CREATE TABLE bibliotecas ( id NUMBER ( 10 ) NOT NULL , ciudad VARCHAR2 ( 50 ) NOT NULL , calle VARCHAR2 ( 50 ) NOT NULL , CONSTRAINT bibliotecas_pk PRIMARY KEY ( id ) ); CREATE TABLE libros ( id NUMBER ( 10 ) NOT NULL , id_biblioteca NUMBER ( 10 ) NOT NULL , n_paginas NUMBER ( 10 ) NOT NULL , autor VARCHAR2 ( 50 ) NOT NULL , CONSTRAINT libros_pk PRIMARY KEY ( id ), CONSTRAINT id_biblioteca_fk_libros FOREIGN KEY ( id_biblioteca ) REFERENCES bibliotecas ( id ) ); CREATE TABLE trabajadores ( id NUMBER ( 10 ) NOT NULL , id_biblioteca NUMBER ( 10 ) NOT NULL , nombre VARCHAR2 ( 50 ) NOT NULL , apellido VARCHAR2 ( 50 ) NOT NULL , CONSTRAINT trabajadores_pk PRIMARY KEY ( id ), CONSTRAINT id_biblioteca_fk_trabajadores FOREIGN KEY ( id_biblioteca ) REFERENCES bibliotecas ( id ) ); Compruebo que se han creado con la siguiente consulta: SELECT table_name , owner FROM all_tables WHERE owner = 'BIBLIOFILOS_ADMIN' ORDER BY owner , table_name ; Devuelve lo siguiente: TABLE_NAME OWNER -------------------------------------------------------------------------------------------------------------------------------- -------------------------------------------------------------------------------------------------------------------------------- BIBLIOTECAS BIBLIOFILOS_ADMIN LIBROS BIBLIOFILOS_ADMIN TRABAJADORES BIBLIOFILOS_ADMIN 1.6 Inserci\u00f3n de registros INSERT INTO bibliotecas ( id , ciudad , calle ) VALUES ( 1 , 'Utrera' , 'Alvarez Quintero' ); INSERT INTO bibliotecas ( id , ciudad , calle ) VALUES ( 2 , 'Dos Hermanas' , 'Plaza Huerta Palacios' ); INSERT INTO libros ( id , id_biblioteca , n_paginas , autor ) VALUES ( 1 , 1 , 320 , 'Dale Carnegie' ); INSERT INTO libros ( id , id_biblioteca , n_paginas , autor ) VALUES ( 2 , 2 , 714 , 'Anne Frank' ); INSERT INTO trabajadores ( id , id_biblioteca , nombre , apellido ) VALUES ( 1 , 1 , 'Pepe' , 'Pepito' ); INSERT INTO trabajadores ( id , id_biblioteca , nombre , apellido ) VALUES ( 2 , 2 , 'Jose' , 'Joselito' ); Compruebo que se han a\u00f1adido: select * from bibliotecas ; ID CIUDAD CALLE ---------- -------------------------------------------------- -------------------------------------------------- 1 Utrera Alvarez Quintero 2 Dos Hermanas Plaza Huerta Palacios select * from libros ; ID ID_BIBLIOTECA N_PAGINAS AUTOR ---------- ------------- ---------- -------------------------------------------------- 1 1 320 Dale Carnegie 2 2 714 Anne Frank select * from trabajadores ; ID ID_BIBLIOTECA NOMBRE APELLIDO ---------- ------------- -------------------------------------------------- -------------------------------------------------- 1 1 Pepe Pepito 2 2 Jose Joselito 1.7 Configuraci\u00f3n del acceso remoto Dejo /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora de la siguiente manera: # listener.ora Network Configuration File: /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora # Generated by Oracle configuration tools. LISTENER = ( DESCRIPTION_LIST = ( DESCRIPTION = ( ADDRESS = ( PROTOCOL = TCP )( HOST = 0 .0.0.0 )( PORT = 1521 )) ( ADDRESS = ( PROTOCOL = IPC )( KEY = EXTPROC1521 )) ) ) SID_LIST_LISTENER = ( SID_LIST = ( SID_DESC = ( GLOBAL_DBNAME = ORCLCDB ) ( ORACLE_HOME = /opt/oracle/product/19c/dbhome_1 ) ( SID_NAME = ORCLCDB ) ) ) Dejo /opt/oracle/product/19c/dbhome_1/network/admin/tnsnames.ora de la siguiente manera: # tnsnames.ora Network Configuration File: /opt/oracle/product/19c/dbhome_1/network/admin/tnsnames.ora # Generated by Oracle configuration tools. ORCLCDB = ( DESCRIPTION = ( ADDRESS_LIST = ( ADDRESS = ( PROTOCOL = TCP )( HOST = servidororacle )( PORT = 1521 )) ) ( CONNECT_DATA = ( SERVICE_NAME = ORCLCDB ) ) ) LISTENER_ORCLCDB = ( ADDRESS = ( PROTOCOL = TCP )( HOST = servidororacle )( PORT = 1521 )) Muestro el estado del listener: oracle@servidororacle:~$ lsnrctl status LSNRCTL for Linux: Version 19 .0.0.0.0 - Production on 28 -OCT-2022 13 :43:38 Copyright ( c ) 1991 , 2019 , Oracle. All rights reserved. Connecting to ( DESCRIPTION =( ADDRESS =( PROTOCOL = TCP )( HOST = 0 .0.0.0 )( PORT = 1521 ))) TNS-12541: TNS:no listener TNS-12560: TNS:protocol adapter error TNS-00511: No listener Linux Error: 111 : Connection refused Connecting to ( DESCRIPTION =( ADDRESS =( PROTOCOL = IPC )( KEY = EXTPROC1521 ))) TNS-12541: TNS:no listener TNS-12560: TNS:protocol adapter error TNS-00511: No listener Linux Error: 2 : No such file or directory Estos errores significan que est\u00e1 parado, y adem\u00e1s podemos comprobar que efectivamente no tenemos procesos esperando peticiones en el puerto 1521: oracle@servidororacle:~$ sudo ss -tulpn Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process udp UNCONN 0 0 0 .0.0.0:68 0 .0.0.0:* users: (( \"dhclient\" ,pid = 314 ,fd = 9 )) udp UNCONN 0 0 127 .0.0.1:323 0 .0.0.0:* users: (( \"chronyd\" ,pid = 413 ,fd = 5 )) udp UNCONN 0 0 [ ::1 ] :21455 [ :: ] :* users: (( \"ora_lreg_orclcd\" ,pid = 774 ,fd = 10 )) udp UNCONN 0 0 [ ::1 ] :48386 [ :: ] :* users: (( \"ora_d000_orclcd\" ,pid = 786 ,fd = 7 )) udp UNCONN 0 0 [ ::1 ] :323 [ :: ] :* users: (( \"chronyd\" ,pid = 413 ,fd = 6 )) udp UNCONN 0 0 [ ::1 ] :51821 [ :: ] :* users: (( \"ora_s000_orclcd\" ,pid = 788 ,fd = 7 )) tcp LISTEN 0 128 0 .0.0.0:22 0 .0.0.0:* users: (( \"sshd\" ,pid = 411 ,fd = 3 )) tcp LISTEN 0 128 *:19393 *:* users: (( \"ora_d000_orclcd\" ,pid = 786 ,fd = 8 )) tcp LISTEN 0 128 [ :: ] :22 [ :: ] :* users: (( \"sshd\" ,pid = 411 ,fd = 4 )) Inicio el listener: oracle@servidororacle:~$ lsnrctl start LSNRCTL for Linux: Version 19 .0.0.0.0 - Production on 28 -OCT-2022 13 :48:46 Copyright ( c ) 1991 , 2019 , Oracle. All rights reserved. Starting /opt/oracle/product/19c/dbhome_1/bin/tnslsnr: please wait... TNSLSNR for Linux: Version 19 .0.0.0.0 - Production System parameter file is /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora Log messages written to /opt/oracle/diag/tnslsnr/servidororacle/listener/alert/log.xml Listening on: ( DESCRIPTION =( ADDRESS =( PROTOCOL = tcp )( HOST = 0 .0.0.0 )( PORT = 1521 ))) Listening on: ( DESCRIPTION =( ADDRESS =( PROTOCOL = ipc )( KEY = EXTPROC1521 ))) Connecting to ( DESCRIPTION =( ADDRESS =( PROTOCOL = TCP )( HOST = 0 .0.0.0 )( PORT = 1521 ))) STATUS of the LISTENER ------------------------ Alias LISTENER Version TNSLSNR for Linux: Version 19 .0.0.0.0 - Production Start Date 28 -OCT-2022 13 :48:46 Uptime 0 days 0 hr. 0 min. 0 sec Trace Level off Security ON: Local OS Authentication SNMP OFF Listener Parameter File /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora Listener Log File /opt/oracle/diag/tnslsnr/servidororacle/listener/alert/log.xml Listening Endpoints Summary... ( DESCRIPTION =( ADDRESS =( PROTOCOL = tcp )( HOST = 0 .0.0.0 )( PORT = 1521 ))) ( DESCRIPTION =( ADDRESS =( PROTOCOL = ipc )( KEY = EXTPROC1521 ))) Services Summary... Service \"ORCLCDB\" has 1 instance ( s ) . Instance \"ORCLCDB\" , status UNKNOWN, has 1 handler ( s ) for this service... The command completed successfully Muestro que ahora s\u00ed tenemos un proceso esperando peticiones en el puerto 1521: Pruebo a hacer un acceso usando tnsnames localmente para comprobar que funciona: Cuando usamos el @ estamos forzando las conexiones por tnsnames aunque sean locales. 1.8 Instalaci\u00f3n del cliente Se har\u00e1 sobre clienteoracle . Descargo estos 2 archivos: wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-basic-linux.x64-21.8.0.0.0dbru.zip wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-sqlplus-linux.x64-21.8.0.0.0dbru.zip Creo el siguiente directorio: sudo mkdir /opt/oracle Descargo unzip : sudo apt update sudo apt install unzip Descomprimo: sudo unzip -d /opt/oracle instantclient-basic-linux.x64-21.8.0.0.0dbru.zip sudo unzip -d /opt/oracle instantclient-sqlplus-linux.x64-21.8.0.0.0dbru.zip A\u00f1ado las siguientes variables de entorno a .bashrc : export LD_LIBRARY_PATH = /opt/oracle/instantclient_21_8: $LD_LIBRARY_PATH export PATH = $LD_LIBRARY_PATH : $PATH Aplico los cambios: source ~/.bashrc Compruebo que ya funciona sqlplus : vagrant@clienteoracle:~$ sqlplus -V SQL*Plus: Release 21 .0.0.0.0 - Production Version 21 .8.0.0.0 Creo el fichero /opt/oracle/instantclient_21_8/network/admin/tnsnames.ora : sudo touch /opt/oracle/instantclient_21_8/network/admin/tnsnames.ora Con el siguiente contenido: ORCLCDB = ( DESCRIPTION = ( ADDRESS_LIST = ( ADDRESS = ( PROTOCOL = TCP )( HOST = 10 .0.0.2 )( PORT = 1521 )) ) ( CONNECT_DATA = ( SERVICE_NAME = ORCLCDB ) ) ) 1.9 Prueba de acceso remoto vagrant@clienteoracle:~$ sqlplus bibliofilos_admin/1234@ORCLCDB SQL*Plus: Release 21 .0.0.0.0 - Production on Fri Oct 28 12 :23:58 2022 Version 21 .8.0.0.0 Copyright ( c ) 1982 , 2022 , Oracle. All rights reserved. Last Successful login time: Fri Oct 28 2022 12 :23:47 +00:00 Connected to: Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Version 19 .3.0.0.0 SQL> set linesize 32000 SQL> set pagesize 400 SQL> select * from bibliotecas ; ID CIUDAD CALLE ---------- -------------------------------------------------- -------------------------------------------------- 1 Utrera Alvarez Quintero 2 Dos Hermanas Plaza Huerta Palacios 1.10 Mejoras de sqlplus 1.10.1 Para tener un formateado correcto del output permanente , tenemos que editar el fichero /opt/oracle/product/19c/dbhome_1/sqlplus/admin/glogin.sql . Lo podemos definir como queramos, en mi caso lo dejar\u00e9 de la siguiente manera: -- -- Copyright (c) 1988, 2005, Oracle. All Rights Reserved. -- -- NAME -- glogin.sql -- -- DESCRIPTION -- SQL*Plus global login \"site profile\" file -- -- Add any SQL*Plus commands here that are to be executed when a -- user starts SQL*Plus, or uses the SQL*Plus CONNECT command. -- -- USAGE -- This script is automatically run -- set linesize 32000 set pagesize 400 Me conecto y hago una select para comprobar que funciona: oracle@servidororacle:~$ sqlplus bibliofilos_admin/1234@ORCLCDB SQL*Plus: Release 19 .0.0.0.0 - Production on Fri Oct 28 12 :39:06 2022 Version 19 .3.0.0.0 Copyright ( c ) 1982 , 2019 , Oracle. All rights reserved. Last Successful login time: Fri Oct 28 2022 12 :23:58 +00:00 Connected to: Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Version 19 .3.0.0.0 SQL> select * from bibliotecas ; ID CIUDAD CALLE ---------- -------------------------------------------------- -------------------------------------------------- 1 Utrera Alvarez Quintero 2 Dos Hermanas Plaza Huerta Palacios 1.10.2 Por defecto sqlplus no trae la funcionalidad de historial de comandos y uso de las flechas para mover el cursor en los comandos. Si lo intentamos, nos sucede lo siguiente: Para arreglarlo, tenemos que instalar: sudo apt install rlwrap A partir de ahora, tenemos que ejecutar sqlplus de la siguiente manera: rlwrap sqlplus bibliofilos_admin/1234@ORCLCDB B\u00e1sicamente a\u00f1adiendo rlwrap al principio de cualquier comando de conexi\u00f3n sqlplus que queramos hacer. Hacer esto siempre es tedioso, as\u00ed que podemos crear un alias en ~/.bashrc : alias sqlplus = 'rlwrap sqlplus' Aplico los cambios: source ~/.bashrc Muestro el funcionamiento correcto: 2. PostgreSQL 2.1 Instalaci\u00f3n del servidor sudo apt update sudo apt install postgresql postgresql-contrib Compruebo que funciona: vagrant@servidorpostgresql:~$ sudo systemctl status postgresql \u25cf postgresql.service - PostgreSQL RDBMS Loaded: loaded ( /lib/systemd/system/postgresql.service ; enabled ; vendor preset: enabled ) Active: active ( exited ) since Tue 2022 -10-18 10 :12:46 UTC ; 2min 50s ago Main PID: 2772 ( code = exited, status = 0 /SUCCESS ) Tasks: 0 ( limit: 527 ) Memory: 0B CPU: 0 CGroup: /system.slice/postgresql.service Oct 18 10 :12:46 servidorpostgresql systemd [ 1 ] : Starting PostgreSQL RDBMS... Oct 18 10 :12:46 servidorpostgresql systemd [ 1 ] : Finished PostgreSQL RDBMS. 2.2 Acceso local privilegiado A\u00f1ado la contrase\u00f1a 1234 a postgres para habilitarlo: sudo passwd postgres Pruebo el acceso con postgres : vagrant@servidorpostgresql:~$ su - postgres Password: postgres@servidorpostgresql:~$ psql psql ( 13 .8 ( Debian 13 .8-0+deb11u1 )) Type \"help\" for help. postgres = # 2.3 Creaci\u00f3n de la base de datos CREATE DATABASE bibliofilos ; Compruebo que se ha creado: postgres = # \\l List of databases Name | Owner | Encoding | Collate | Ctype | Access privileges -------------+----------+----------+---------+---------+----------------------- bibliofilos | postgres | UTF8 | C.UTF-8 | C.UTF-8 | postgres | postgres | UTF8 | C.UTF-8 | C.UTF-8 | template0 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres template1 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres ( 4 rows ) Me conecto: postgres = # \\connect bibliofilos You are now connected to database \"bibliofilos\" as user \"postgres\" . bibliofilos = # 2.4 Creaci\u00f3n de tablas CREATE TABLE bibliotecas ( id serial PRIMARY KEY, ciudad VARCHAR ( 50 ) NOT NULL, calle VARCHAR ( 50 ) NOT NULL ) ; CREATE TABLE libros ( id serial PRIMARY KEY, id_biblioteca serial NOT NULL, n_paginas int NOT NULL, autor VARCHAR ( 50 ) NOT NULL, FOREIGN KEY ( id_biblioteca ) REFERENCES Bibliotecas ( id ) ) ; CREATE TABLE trabajadores ( id serial PRIMARY KEY, id_biblioteca serial NOT NULL, nombre VARCHAR ( 50 ) NOT NULL, apellido VARCHAR ( 50 ) NOT NULL, FOREIGN KEY ( id_biblioteca ) REFERENCES Bibliotecas ( id ) ) ; Compruebo que se han creado: bibliofilos = # \\dt List of relations Schema | Name | Type | Owner --------+--------------+-------+---------- public | bibliotecas | table | postgres public | libros | table | postgres public | trabajadores | table | postgres ( 3 rows ) 2.5 Inserci\u00f3n de registros INSERT INTO bibliotecas ( ciudad , calle ) VALUES ( 'Utrera' , 'Alvarez Quintero' ); INSERT INTO bibliotecas ( ciudad , calle ) VALUES ( 'Dos Hermanas' , 'Plaza Huerta Palacios' ); INSERT INTO libros ( id_biblioteca , n_paginas , autor ) VALUES ( 1 , 320 , 'Dale Carnegie' ); INSERT INTO libros ( id_biblioteca , n_paginas , autor ) VALUES ( 2 , 714 , 'Anne Frank' ); INSERT INTO trabajadores ( id_biblioteca , nombre , apellido ) VALUES ( 1 , 'Pepe' , 'Pepito' ); INSERT INTO trabajadores ( id_biblioteca , nombre , apellido ) VALUES ( 2 , 'Jose' , 'Joselito' ); Compruebo que se han a\u00f1adido: bibliofilos = # select * from bibliotecas; id | ciudad | calle ----+--------------+----------------------- 1 | Utrera | Alvarez Quintero 2 | Dos Hermanas | Plaza Huerta Palacios ( 2 rows ) bibliofilos = # select * from libros; id | id_biblioteca | n_paginas | autor ----+---------------+-----------+--------------- 1 | 1 | 320 | Dale Carnegie 2 | 2 | 714 | Anne Frank ( 2 rows ) bibliofilos = # select * from trabajadores; id | id_biblioteca | nombre | apellido ----+---------------+--------+---------- 1 | 1 | Pepe | Pepito 2 | 2 | Jose | Joselito ( 2 rows ) 2.6 Creaci\u00f3n de usuarios En debian: sudo adduser bibliofilos_admin En PostgreSQL: create user bibliofilos_admin with encrypted password '1234' ; Compruebo que se ha creado: postgres = # \\du List of roles Role name | Attributes | Member of -------------------+------------------------------------------------------------+----------- bibliofilos_admin | | {} postgres | Superuser, Create role, Create DB, Replication, Bypass RLS | {} Le doy privilegios sobre la base de datos: GRANT all privileges ON DATABASE bibliofilos TO bibliofilos_admin ; Al listar las bases de datos podemos ver los privilegios de acceso: postgres = # \\l List of databases Name | Owner | Encoding | Collate | Ctype | Access privileges -------------+----------+----------+---------+---------+-------------------------------- bibliofilos | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = Tc/postgres + | | | | | postgres = CTc/postgres + | | | | | bibliofilos_admin = CTc/postgres postgres | postgres | UTF8 | C.UTF-8 | C.UTF-8 | template0 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres template1 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres ( 4 rows ) Le doy privilegios sobre las tablas: GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO bibliofilos_admin ; Muestro que se han aplicado los privilegios: bibliofilos =# SELECT * from information_schema . table_privileges WHERE grantee = 'bibliofilos_admin' ; grantor | grantee | table_catalog | table_schema | table_name | privilege_type | is_grantable | with_hierarchy ----------+-------------------+---------------+--------------+--------------+----------------+--------------+---------------- postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | INSERT | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | SELECT | NO | YES postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | UPDATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | DELETE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | TRUNCATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | REFERENCES | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | TRIGGER | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | INSERT | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | SELECT | NO | YES postgres | bibliofilos_admin | bibliofilos | public | libros | UPDATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | DELETE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | TRUNCATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | REFERENCES | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | TRIGGER | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | INSERT | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | SELECT | NO | YES postgres | bibliofilos_admin | bibliofilos | public | trabajadores | UPDATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | DELETE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | TRUNCATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | REFERENCES | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | TRIGGER | NO | NO ( 21 rows ) 2.7 Configuraci\u00f3n del acceso remoto Modifico la siguiente l\u00ednea en /etc/postgresql/13/main/postgresql.conf : listen_addresses = '*' A\u00f1ado las siguientes l\u00edneas a /etc/postgresql/13/main/pg_hba.conf : # Remote connections host all all 0 .0.0.0/0 md5 Reinicio: sudo systemctl restart postgresql 2.8 Instalaci\u00f3n del cliente Se har\u00e1 sobre clientepostgresql . sudo apt update sudo apt install postgresql-client 2.9 Prueba de acceso remoto vagrant@clientepostgresql:~$ psql -U bibliofilos_admin -h 10 .0.1.2 -p 5432 bibliofilos Password for user bibliofilos_admin: psql ( 13 .8 ( Debian 13 .8-0+deb11u1 )) SSL connection ( protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256 , compression: off ) Type \"help\" for help. bibliofilos = > \\l List of databases Name | Owner | Encoding | Collate | Ctype | Access privileges -------------+----------+----------+---------+---------+-------------------------------- bibliofilos | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = Tc/postgres + | | | | | postgres = CTc/postgres + | | | | | bibliofilos_admin = CTc/postgres postgres | postgres | UTF8 | C.UTF-8 | C.UTF-8 | template0 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres template1 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres ( 4 rows ) bibliofilos = > \\d t List of relations Schema | Name | Type | Owner --------+--------------+-------+---------- public | bibliotecas | table | postgres public | libros | table | postgres public | trabajadores | table | postgres ( 3 rows ) bibliofilos = > select * from bibliotecas ; id | ciudad | calle ----+--------------+----------------------- 1 | Utrera | Alvarez Quintero 2 | Dos Hermanas | Plaza Huerta Palacios ( 2 rows ) 3. MariaDB 3.1 Instalaci\u00f3n del servidor sudo apt update sudo apt install mariadb-server Compruebo que funciona: vagrant@servidormariadb:~$ sudo systemctl status mariadb \u25cf mariadb.service - MariaDB 10 .5.15 database server Loaded: loaded ( /lib/systemd/system/mariadb.service ; enabled ; vendor preset: enabled ) Active: active ( running ) since Wed 2022 -10-19 11 :01:36 UTC ; 11min ago Docs: man:mariadbd ( 8 ) https://mariadb.com/kb/en/library/systemd/ Process: 2111 ExecStartPre = /usr/bin/install -m 755 -o mysql -g root -d /var/run/mysqld ( code = exited, status = 0 /SUCCESS ) Process: 2112 ExecStartPre = /bin/sh -c systemctl unset-environment _WSREP_START_POSITION ( code = exited, status = 0 /SUCCESS ) Process: 2114 ExecStartPre = /bin/sh -c [ ! -e /usr/bin/galera_recovery ] && VAR = || VAR = ` cd /usr/bin/.. ; /usr/bin/galera_recovery ` ; [ $? -eq 0 ] && systemctl set-envi> Process: 2174 ExecStartPost = /bin/sh -c systemctl unset-environment _WSREP_START_POSITION ( code = exited, status = 0 /SUCCESS ) Process: 2176 ExecStartPost = /etc/mysql/debian-start ( code = exited, status = 0 /SUCCESS ) Main PID: 2161 ( mariadbd ) Status: \"Taking your SQL requests now...\" Tasks: 8 ( limit: 527 ) Memory: 61 .7M CPU: 425ms CGroup: /system.slice/mariadb.service \u2514\u25002161 /usr/sbin/mariadbd Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] Server socket created on IP: '127.0.0.1' . Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] InnoDB: Buffer pool ( s ) load completed at 221019 11 :01:36 Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] Reading of all Master_info entries succeeded Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] Added new Master_info '' to hash table Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] /usr/sbin/mariadbd: ready for connections. Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : Version: '10.5.15-MariaDB-0+deb11u1' socket: '/run/mysqld/mysqld.sock' port: 3306 Debian 11 Oct 19 11 :01:36 servidormariadb systemd [ 1 ] : Started MariaDB 10 .5.15 database server. Oct 19 11 :01:36 servidormariadb /etc/mysql/debian-start [ 2178 ] : Upgrading MySQL tables if necessary. Oct 19 11 :01:36 servidormariadb /etc/mysql/debian-start [ 2189 ] : Checking for insecure root accounts. Oct 19 11 :01:36 servidormariadb /etc/mysql/debian-start [ 2193 ] : Triggering myisam-recover for all MyISAM tables and aria-recover for all Aria tables 3.2 Acceso local privilegiado vagrant@servidormariadb:~$ sudo mariadb Welcome to the MariaDB monitor. Commands end with ; or \\g . Your MariaDB connection id is 31 Server version: 10 .5.15-MariaDB-0+deb11u1 Debian 11 Copyright ( c ) 2000 , 2018 , Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. MariaDB [( none )] > 3.3 Creaci\u00f3n de la base de datos create database bibliofilos ; Compruebo que se ha creado: MariaDB [( none )] > show databases ; +--------------------+ | Database | +--------------------+ | bibliofilos | | information_schema | | mysql | | performance_schema | +--------------------+ 4 rows in set ( 0 .000 sec ) Me conecto: MariaDB [( none )] > use bibliofilos ; Database changed MariaDB [ bibliofilos ] > 3.4 Creaci\u00f3n de tablas create table bibliotecas ( id int auto_increment , ciudad varchar ( 50 ) not null , calle varchar ( 50 ) not null , primary key ( id ) ); create table libros ( id int auto_increment , id_biblioteca int not null , n_paginas int not null , autor varchar ( 50 ) not null , primary key ( id ), foreign key ( id_biblioteca ) references bibliotecas ( id ) ); create table trabajadores ( id int auto_increment , id_biblioteca int not null , nombre varchar ( 50 ) not null , apellido varchar ( 50 ) not null , primary key ( id ), foreign key ( id_biblioteca ) references bibliotecas ( id ) ); Compruebo que se han creado: MariaDB [ bibliofilos ] > show tables ; +-----------------------+ | Tables_in_bibliofilos | +-----------------------+ | bibliotecas | | libros | | trabajadores | +-----------------------+ 3 rows in set ( 0 .001 sec ) 3.5 Inserci\u00f3n de registros INSERT INTO bibliotecas ( ciudad , calle ) VALUES ( 'Utrera' , 'Alvarez Quintero' ); INSERT INTO bibliotecas ( ciudad , calle ) VALUES ( 'Dos Hermanas' , 'Plaza Huerta Palacios' ); INSERT INTO libros ( id_biblioteca , n_paginas , autor ) VALUES ( 1 , 320 , 'Dale Carnegie' ); INSERT INTO libros ( id_biblioteca , n_paginas , autor ) VALUES ( 2 , 714 , 'Anne Frank' ); INSERT INTO trabajadores ( id_biblioteca , nombre , apellido ) VALUES ( 1 , 'Pepe' , 'Pepito' ); INSERT INTO trabajadores ( id_biblioteca , nombre , apellido ) VALUES ( 2 , 'Jose' , 'Joselito' ); Compruebo que se han a\u00f1adido: MariaDB [ bibliofilos ] > select * from bibliotecas ; +----+--------------+-----------------------+ | id | ciudad | calle | +----+--------------+-----------------------+ | 1 | Utrera | Alvarez Quintero | | 2 | Dos Hermanas | Plaza Huerta Palacios | +----+--------------+-----------------------+ 2 rows in set ( 0 .001 sec ) MariaDB [ bibliofilos ] > select * from libros ; +----+---------------+-----------+---------------+ | id | id_biblioteca | n_paginas | autor | +----+---------------+-----------+---------------+ | 1 | 1 | 320 | Dale Carnegie | | 2 | 2 | 714 | Anne Frank | +----+---------------+-----------+---------------+ 2 rows in set ( 0 .001 sec ) MariaDB [ bibliofilos ] > select * from trabajadores ; +----+---------------+--------+----------+ | id | id_biblioteca | nombre | apellido | +----+---------------+--------+----------+ | 1 | 1 | Pepe | Pepito | | 2 | 2 | Jose | Joselito | +----+---------------+--------+----------+ 2 rows in set ( 0 .001 sec ) 3.6 Creaci\u00f3n de usuarios CREATE USER 'bibliofilos_admin' @ 'localhost' IDENTIFIED BY '1234' ; CREATE USER 'bibliofilos_admin' @ '%' IDENTIFIED BY '1234' ; Compruebo que se han creado: MariaDB [( none )] > SELECT user, host FROM mysql.user ; +-------------------+-----------+ | User | Host | +-------------------+-----------+ | bibliofilos_admin | % | | bibliofilos_admin | localhost | | mariadb.sys | localhost | | mysql | localhost | | root | localhost | +-------------------+-----------+ 5 rows in set ( 0 .002 sec ) Les doy privilegios: GRANT ALL ON bibliofilos . * TO 'bibliofilos_admin' @ 'localhost' ; GRANT ALL ON bibliofilos . * TO 'bibliofilos_admin' @ '%' ; FLUSH PRIVILEGES ; Muestro que se han aplicado: MariaDB [( none )] > SHOW GRANTS FOR 'bibliofilos_admin' ; + ------------------------------------------------------------------------------------------------------------------+ | Grants for bibliofilos_admin @% | + ------------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON * . * TO ` bibliofilos_admin `@`%` IDENTIFIED BY PASSWORD '*A4B6157319038724E3560894F7F932C8886EBFCF' | | GRANT ALL PRIVILEGES ON ` bibliofilos ` . * TO ` bibliofilos_admin `@`%` | + ------------------------------------------------------------------------------------------------------------------+ 2 rows in set ( 0 . 000 sec ) MariaDB [( none )] > SHOW GRANTS FOR 'bibliofilos_admin' @ 'localhost' ; + --------------------------------------------------------------------------------------------------------------------------+ | Grants for bibliofilos_admin @ localhost | + --------------------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON * . * TO ` bibliofilos_admin `@` localhost ` IDENTIFIED BY PASSWORD '*A4B6157319038724E3560894F7F932C8886EBFCF' | | GRANT ALL PRIVILEGES ON ` bibliofilos ` . * TO ` bibliofilos_admin `@` localhost ` | + --------------------------------------------------------------------------------------------------------------------------+ 2 rows in set ( 0 . 000 sec ) 3.7 Configuraci\u00f3n del acceso remoto Modifico la siguiente l\u00ednea en /etc/mysql/mariadb.conf.d/50-server.cnf : bind-address = 0 .0.0.0 Reinicio: sudo systemctl restart mariadb Pruebo que el cambio se aplic\u00f3: vagrant@servidormariadb:~$ netstat -ant | grep 3306 tcp 0 0 0 .0.0.0:3306 0 .0.0.0:* LISTEN 3.8 Instalaci\u00f3n del cliente Se har\u00e1 sobre clientemariadb . sudo apt update sudo apt install mariadb-client 3.9 Prueba de acceso remoto vagrant@clientemariadb:~$ mariadb -u bibliofilos_admin -h 10 .0.2.2 -p bibliofilos Enter password: Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Welcome to the MariaDB monitor. Commands end with ; or \\g . Your MariaDB connection id is 35 Server version: 10 .5.15-MariaDB-0+deb11u1 Debian 11 Copyright ( c ) 2000 , 2018 , Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. MariaDB [ bibliofilos ] > show databases ; +--------------------+ | Database | +--------------------+ | bibliofilos | | information_schema | +--------------------+ 2 rows in set ( 0 .002 sec ) MariaDB [ bibliofilos ] > show tables ; +-----------------------+ | Tables_in_bibliofilos | +-----------------------+ | bibliotecas | | libros | | trabajadores | +-----------------------+ 3 rows in set ( 0 .001 sec ) MariaDB [ bibliofilos ] > select * from bibliotecas ; +----+--------------+-----------------------+ | id | ciudad | calle | +----+--------------+-----------------------+ | 1 | Utrera | Alvarez Quintero | | 2 | Dos Hermanas | Plaza Huerta Palacios | +----+--------------+-----------------------+ 2 rows in set ( 0 .002 sec ) 4. MongoDB 4.1 Instalaci\u00f3n del servidor A\u00f1ado el repositorio: echo \"deb http://repo.mongodb.org/apt/debian bullseye/mongodb-org/5.0 main\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list A\u00f1ado la clave GPG: curl -sSL https://www.mongodb.org/static/pgp/server-5.0.asc -o mongoserver.asc gpg --no-default-keyring --keyring ./mongo_key_temp.gpg --import ./mongoserver.asc gpg --no-default-keyring --keyring ./mongo_key_temp.gpg --export > ./mongoserver_key.gpg sudo mv mongoserver_key.gpg /etc/apt/trusted.gpg.d/ Actualizo: sudo apt update Instalo: sudo apt install mongodb-org Inicio el servidor: sudo systemctl enable --now mongod Compruebo que funciona: vagrant@servidormongodb:~$ sudo systemctl status mongod \u25cf mongod.service - MongoDB Database Server Loaded: loaded ( /lib/systemd/system/mongod.service ; enabled ; vendor preset: enabled ) Active: active ( running ) since Thu 2022 -10-20 08 :20:59 UTC ; 2min 26s ago Docs: https://docs.mongodb.org/manual Main PID: 2695 ( mongod ) Memory: 120 .9M CPU: 1 .866s CGroup: /system.slice/mongod.service \u2514\u25002695 /usr/bin/mongod --config /etc/mongod.conf Oct 20 08 :20:59 servidormongodb systemd [ 1 ] : Started MongoDB Database Server. 4.2 Acceso local privilegiado vagrant@servidormongodb:~$ mongosh Current Mongosh Log ID:63510a480bb54d2af15cd761 Connecting to: mongodb://127.0.0.1:27017/?directConnection = true & serverSelectionTimeoutMS = 2000 & appName = mongosh+1.6.0 Using MongoDB: 5 .0.13 Using Mongosh: 1 .6.0 For mongosh info see: https://docs.mongodb.com/mongodb-shell/ ------ The server generated these startup warnings when booting 2022 -10-20T08:21:00.034+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem 2022 -10-20T08:21:00.617+00:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted ------ ------ Enable MongoDB ' s free cloud-based monitoring service, which will then receive and display metrics about your deployment ( disk utilization, CPU, operation statistics, etc ) . The monitoring data will be available on a MongoDB website with a unique URL accessible to you and anyone you share the URL with. MongoDB may use this information to make product improvements and to suggest MongoDB products and deployment options to you. To enable free monitoring, run the following command: db.enableFreeMonitoring () To permanently disable this reminder, run the following command: db.disableFreeMonitoring () ------ Warning: Found ~/.mongorc.js, but not ~/.mongoshrc.js. ~/.mongorc.js will not be loaded. You may want to copy or rename ~/.mongorc.js to ~/.mongoshrc.js. test> 4.3 Creaci\u00f3n de la base de datos Si no existe la bd con el nombre que le digamos, la crear\u00e1: test > use bibliofilos switched to db bibliofilos bibliofilos > Compruebo que se ha creado: bibliofilos> show dbs admin 40 .00 KiB config 108 .00 KiB local 40 .00 KiB La bd no aparece listada por ahora porque necesita contener datos para aparecer. 4.4 Creaci\u00f3n de colecciones db . createCollection ( \"bibliotecas\" ) db . createCollection ( \"libros\" ) db . createCollection ( \"trabajadores\" ) Compruebo que se han creado: bibliofilos> show collections bibliotecas libros trabajadores 4.5 Inserci\u00f3n de documentos db . bibliotecas . insertMany ( [ { ciudad : \"Utrera\" , calle : \"Alvarez Quintero\" } , { ciudad : \"Dos Hermanas\" , calle : \"Plaza Huerta Palacios\" } ] ) db . libros . insertMany ( [ { n_paginas : 320 , autor : \"Dale Carnegie\" } , { n_paginas : 714 , autor : \"Anne Frank\" } ] ) db . trabajadores . insertMany ( [ { nombre : \"Pepe\" , apellido : \"Pepito\" } , { nombre : \"Jose\" , apellido : \"Joselito\" } ] ) Compruebo que se han insertado: bibliofilos> db.bibliotecas.find () [ { _id: ObjectId ( \"635126caf4c5855bf45547d3\" ) , ciudad: 'Utrera' , calle: 'Alvarez Quintero' } , { _id: ObjectId ( \"635126caf4c5855bf45547d4\" ) , ciudad: 'Dos Hermanas' , calle: 'Plaza Huerta Palacios' } ] bibliofilos> db.libros.find () [ { _id: ObjectId ( \"63512712f4c5855bf45547d5\" ) , n_paginas: 320 , autor: 'Dale Carnegie' } , { _id: ObjectId ( \"63512712f4c5855bf45547d6\" ) , n_paginas: 714 , autor: 'Anne Frank' } ] bibliofilos> db.trabajadores.find () [ { _id: ObjectId ( \"6351271cf4c5855bf45547d7\" ) , nombre: 'Pepe' , apellido: 'Pepito' } , { _id: ObjectId ( \"6351271cf4c5855bf45547d8\" ) , nombre: 'Jose' , apellido: 'Joselito' } ] 4.6 Creaci\u00f3n de usuarios Usuario con permisos sobre bibliofilos : use bibliofilos db . createUser ( { user : \"bibliofilos_admin\" , pwd : \"1234\" , roles : [ \"dbOwner\" ] } ) Compruebo que se ha creado: bibliofilos> db.getUsers () { users: [ { _id: 'bibliofilos.bibliofilos_admin' , userId: new UUID ( \"e420bea0-b85f-4914-a395-2f2b20b3aa48\" ) , user: 'bibliofilos_admin' , db: 'bibliofilos' , roles: [ { role: 'dbOwner' , db: 'bibliofilos' } ] , mechanisms: [ 'SCRAM-SHA-1' , 'SCRAM-SHA-256' ] } ] , ok: 1 } Usuario administrador: use admin db . createUser ( { user : \"admin\" , pwd : \"1234\" , roles : [ { role : \"userAdminAnyDatabase\" , db : \"admin\" } , { role : \"readWriteAnyDatabase\" , db : \"admin\" } ] } ) Compruebo que se ha creado: admin> db.getUsers () { users: [ { _id: 'admin.admin' , userId: new UUID ( \"022fafb9-953b-4e5e-985f-6634d0ed954c\" ) , user: 'admin' , db: 'admin' , roles: [ { role: 'userAdminAnyDatabase' , db: 'admin' } , { role: 'readWriteAnyDatabase' , db: 'admin' } ] , mechanisms: [ 'SCRAM-SHA-1' , 'SCRAM-SHA-256' ] } ] , ok: 1 } 4.7 Configuraci\u00f3n del acceso remoto Modifico la siguiente l\u00ednea en /etc/mongod.conf : bindIp: 0 .0.0.0 A\u00f1ado las siguientes l\u00edneas en /etc/mongod.conf : security: authorization: enabled Reinicio: sudo systemctl restart mongod Pruebo que el cambio se aplic\u00f3: vagrant@servidormongodb:~$ netstat -ant | grep 27017 tcp 0 0 0 .0.0.0:27017 0 .0.0.0:* LISTEN 4.8 Instalaci\u00f3n del cliente Se har\u00e1 sobre clientemongodb . A\u00f1ado el repositorio: echo \"deb http://repo.mongodb.org/apt/debian bullseye/mongodb-org/5.0 main\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list A\u00f1ado la clave GPG: curl -sSL https://www.mongodb.org/static/pgp/server-5.0.asc -o mongoserver.asc gpg --no-default-keyring --keyring ./mongo_key_temp.gpg --import ./mongoserver.asc gpg --no-default-keyring --keyring ./mongo_key_temp.gpg --export > ./mongoserver_key.gpg sudo mv mongoserver_key.gpg /etc/apt/trusted.gpg.d/ Actualizo: sudo apt update Instalo: sudo apt install mongodb-org-shell mongodb-mongosh 4.9 Prueba de acceso remoto vagrant@clientemongodb:~$ mongosh -u bibliofilos_admin -p 1234 10 .0.3.2/bibliofilos Current Mongosh Log ID:6351bcb93f3b38d91c3c973b Connecting to: mongodb://<credentials>@10.0.3.2:27017/bibliofilos?directConnection = true & appName = mongosh+1.6.0 Using MongoDB: 5 .0.13 Using Mongosh: 1 .6.0 For mongosh info see: https://docs.mongodb.com/mongodb-shell/ Warning: Found ~/.mongorc.js, but not ~/.mongoshrc.js. ~/.mongorc.js will not be loaded. You may want to copy or rename ~/.mongorc.js to ~/.mongoshrc.js. bibliofilos> show dbs bibliofilos 120 .00 KiB bibliofilos> show collections bibliotecas libros trabajadores bibliofilos> db.bibliotecas.find () [ { _id: ObjectId ( \"635126caf4c5855bf45547d3\" ) , ciudad: 'Utrera' , calle: 'Alvarez Quintero' } , { _id: ObjectId ( \"635126caf4c5855bf45547d4\" ) , ciudad: 'Dos Hermanas' , calle: 'Plaza Huerta Palacios' } ] 5. App Flask con MongoDB En este repositorio se encuentran tanto el c\u00f3digo de la aplicaci\u00f3n como su gu\u00eda de uso y pruebas de funcionamiento.","title":"Alumno 1: Adri\u00e1n"},{"location":"p1-servidores-clientes/ri/alumno1/#alumno-1","text":"","title":"Alumno 1"},{"location":"p1-servidores-clientes/ri/alumno1/#escenario","text":"Vagrant.configure ( \"2\" ) do | config | config.vm.synced_folder \".\" , \"/vagrant\" , disabled: true config.vm.provider :libvirt do | libvirt | libvirt.cpus = 2 libvirt.memory = 1024 end config.vm.define :servidororacle do | servidororacle | servidororacle.vm.box = \"debian/bullseye64\" servidororacle.vm.provider :libvirt do | servidororacle | servidororacle.memory = 4096 servidororacle.cpus = 6 end servidororacle.vm.hostname = \"servidororacle\" servidororacle.vm.network :private_network, :libvirt__network_name = > \"red-oracle\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.0.2\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :clienteoracle do | clienteoracle | clienteoracle.vm.box = \"debian/bullseye64\" clienteoracle.vm.hostname = \"clienteoracle\" clienteoracle.vm.network :private_network, :libvirt__network_name = > \"red-oracle\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.0.3\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :servidorpostgresql do | servidorpostgresql | servidorpostgresql.vm.box = \"debian/bullseye64\" servidorpostgresql.vm.hostname = \"servidorpostgresql\" servidorpostgresql.vm.network :private_network, :libvirt__network_name = > \"red-postgresql\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.1.2\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :clientepostgresql do | clientepostgresql | clientepostgresql.vm.box = \"debian/bullseye64\" clientepostgresql.vm.hostname = \"clientepostgresql\" clientepostgresql.vm.network :private_network, :libvirt__network_name = > \"red-postgresql\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.1.3\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :servidormariadb do | servidormariadb | servidormariadb.vm.box = \"debian/bullseye64\" servidormariadb.vm.hostname = \"servidormariadb\" servidormariadb.vm.network :private_network, :libvirt__network_name = > \"red-mariadb\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.2.2\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :clientemariadb do | clientemariadb | clientemariadb.vm.box = \"debian/bullseye64\" clientemariadb.vm.hostname = \"clientemariadb\" clientemariadb.vm.network :private_network, :libvirt__network_name = > \"red-mariadb\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.2.3\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :servidormongodb do | servidormongodb | servidormongodb.vm.box = \"debian/bullseye64\" servidormongodb.vm.hostname = \"servidormongodb\" servidormongodb.vm.network :private_network, :libvirt__network_name = > \"red-mongodb\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.3.2\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end config.vm.define :clientemongodb do | clientemongodb | clientemongodb.vm.box = \"debian/bullseye64\" clientemongodb.vm.hostname = \"clientemongodb\" clientemongodb.vm.network :private_network, :libvirt__network_name = > \"red-mongodb\" , :libvirt__dhcp_enabled = > false, :ip = > \"10.0.3.3\" , :libvirt__netmask = > '255.255.255.0' , :libvirt__forward_mode = > \"veryisolated\" end end","title":"Escenario"},{"location":"p1-servidores-clientes/ri/alumno1/#1-oracle-19c","text":"","title":"1. Oracle 19c"},{"location":"p1-servidores-clientes/ri/alumno1/#11-redimension-de-disco","text":"Tenemos que tener suficiente espacio para instalar Oracle Paro la VM: vagrant halt servidororacle Redimensiono el fichero de disco: virsh -c qemu:///system vol-resize p1-bd-alumno1_servidororacle.img 50G --pool default Dentro de la VM redimensiono la partici\u00f3n y el sistema de ficheros: echo \", +\" | sudo sfdisk -N 1 /dev/vda --no-reread sudo apt update sudo apt install parted sudo partprobe sudo resize2fs /dev/vda1","title":"1.1 Redimensi\u00f3n de disco"},{"location":"p1-servidores-clientes/ri/alumno1/#12-instalacion-del-servidor","text":"","title":"1.2 Instalaci\u00f3n del servidor"},{"location":"p1-servidores-clientes/ri/alumno1/#121","text":"Descargo el rpm en mi host desde la p\u00e1gina oficial de Oracle:","title":"1.2.1"},{"location":"p1-servidores-clientes/ri/alumno1/#122","text":"Lo paso a la VM servidororacle : scp Downloads/oracle-database-ee-19c-1.0-1.x86_64.rpm vagrant@192.168.121.159:/home/vagrant","title":"1.2.2"},{"location":"p1-servidores-clientes/ri/alumno1/#123","text":"Instalo los paquetes requeridos: sudo apt install alien libaio1 unixodbc net-tools","title":"1.2.3"},{"location":"p1-servidores-clientes/ri/alumno1/#124","text":"Convierto el rpm a deb: sudo alien --scripts -d oracle-database-ee-19c-1.0-1.x86_64.rpm Como resultado tendremos el paquete oracle-database-ee-19c_1.0-2_amd64.deb","title":"1.2.4"},{"location":"p1-servidores-clientes/ri/alumno1/#125","text":"Creo el siguiente script: sudo pico /sbin/chkconfig Con el siguiente contenido: #!/bin/bash # Oracle 19c installer chkconfig hack file = /etc/init.d/oracle-19c if [[ ! ` tail -n1 $file | grep INIT ` ]] ; then echo >> $file echo '### BEGIN INIT INFO' >> $file echo '# Provides: Oracle 19c' >> $file echo '# Required-Start: $remote_fs $syslog' >> $file echo '# Required-Stop: $remote_fs $syslog' >> $file echo '# Default-Start: 2 3 4 5' >> $file echo '# Default-Stop: 0 1 6' >> $file echo '# Short-Description: Oracle 19c' >> $file echo '### END INIT INFO' >> $file fi update-rc.d oracle-19c defaults 80 01 Le doy permisos: sudo chmod 777 /sbin/chkconfig","title":"1.2.5"},{"location":"p1-servidores-clientes/ri/alumno1/#126","text":"Creo el siguiente fichero para los par\u00e1metros de Kernel de Oracle: sudo touch /etc/sysctl.d/60-oracle.conf Con el siguiente contenido: # Oracle 19c kernel parameters fs.file-max = 6815744 net.ipv4.ip_local_port_range = 9000 65000 kernel.sem = 250 32000 100 128 kernel.shmmax = 536870912","title":"1.2.6"},{"location":"p1-servidores-clientes/ri/alumno1/#127","text":"Arranco el siguiente servicio: sudo systemctl start procps","title":"1.2.7"},{"location":"p1-servidores-clientes/ri/alumno1/#128","text":"Creo el siguiente fichero para configurar el punto de montaje /dev/shm de Oracle: sudo touch /etc/rc2.d/S01shm_load Con el siguiente contenido: #!/bin/sh case \" $1 \" in start ) mkdir /var/lock/subsys 2 >/dev/null touch /var/lock/subsys/listener rm /dev/shm 2 >/dev/null mkdir /dev/shm 2 >/dev/null mount -t tmpfs shmfs -o size = 2048m /dev/shm ;; * ) echo error exit 1 ;; esac Le doy permisos: sudo chmod 777 /etc/rc2.d/S01shm_load Hago un reinicio: sudo reboot","title":"1.2.8"},{"location":"p1-servidores-clientes/ri/alumno1/#129","text":"Instalo el paquete: sudo dpkg --install oracle-database-ee-19c_1.0-2_amd64.deb","title":"1.2.9"},{"location":"p1-servidores-clientes/ri/alumno1/#1210","text":"A\u00f1ado el par\u00e1metro -J-Doracle.assistants.dbca.validate.ConfigurationParams=false al final de la siguiente l\u00ednea en /etc/init.d/oracledb_ORCLCDB-19c : Quedar\u00eda de la siguiente manera la l\u00ednea al modificarla: $SU -s /bin/bash $ORACLE_OWNER -c \" $DBCA -silent -createDatabase -gdbName $ORACLE_SID -templateName $TEMPLATE_NAME -characterSet $CHARSET -createAsContainerDatabase $CREATE_AS_CDB -numberOfPDBs $NUMBER_OF_PDBS -pdbName $PDB_NAME -createListener $LISTENER_NAME : $LISTENER_PORT -datafileDestination $ORACLE_DATA_LOCATION -sid $ORACLE_SID -autoGeneratePasswords -emConfiguration DBEXPRESS -emExpressPort $EM_EXPRESS_PORT -J-Doracle.assistants.dbca.validate.ConfigurationParams=false\"","title":"1.2.10"},{"location":"p1-servidores-clientes/ri/alumno1/#1211","text":"A\u00f1ado la siguiente l\u00ednea a /etc/hosts : 192 .168.121.159 servidororacle servidororacle","title":"1.2.11"},{"location":"p1-servidores-clientes/ri/alumno1/#1212","text":"Ejecuto el script de configuraci\u00f3n de Oracle: sudo /etc/init.d/oracledb_ORCLCDB-19c configure","title":"1.2.12"},{"location":"p1-servidores-clientes/ri/alumno1/#1213","text":"Edito el siguiente fichero: pico ~/.bashrc A\u00f1ado las siguientes variables de entorno al final del fichero: # Oracle environment variables export ORACLE_HOME = /opt/oracle/product/19c/dbhome_1 export ORACLE_SID = ORCLCDB export NLS_LANG = ` $ORACLE_HOME /bin/nls_lang.sh ` export ORACLE_BASE = /opt/oracle export LD_LIBRARY_PATH = $ORACLE_HOME /lib: $LD_LIBRARY_PATH export PATH = $ORACLE_HOME /bin: $PATH Aplico los cambios: . ~/.profile Hago un reinicio: sudo reboot","title":"1.2.13"},{"location":"p1-servidores-clientes/ri/alumno1/#1214","text":"Inicio el servicio de Oracle: sudo systemctl start oracledb_ORCLCDB-19c","title":"1.2.14"},{"location":"p1-servidores-clientes/ri/alumno1/#1215","text":"A\u00f1ado la contrase\u00f1a oracle al usuario oracle : sudo passwd oracle Cambio su shell: sudo usermod --shell /bin/bash oracle Creo su home: sudo mkdir /home/oracle Cambio los propietarios: sudo chown -R oracle:oinstall /home/oracle A\u00f1ado el siguiente fichero: touch ~/.profile Con el siguiente contenido: # ~/.profile: executed by the command interpreter for login shells. # This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login # exists. # see /usr/share/doc/bash/examples/startup-files for examples. # the files are located in the bash-doc package. # the default umask is set in /etc/profile; for setting the umask # for ssh logins, install and configure the libpam-umask package. #umask 022 # if running bash if [ -n \" $BASH_VERSION \" ] ; then # include .bashrc if it exists if [ -f \" $HOME /.bashrc\" ] ; then . \" $HOME /.bashrc\" fi fi # set PATH so it includes user's private bin if it exists if [ -d \" $HOME /bin\" ] ; then PATH = \" $HOME /bin: $PATH \" fi # set PATH so it includes user's private bin if it exists if [ -d \" $HOME /.local/bin\" ] ; then PATH = \" $HOME /.local/bin: $PATH \" fi Le a\u00f1ado a este usuario tambi\u00e9n las variables de entorno: pico ~/.bashrc # Oracle environment variables export ORACLE_HOME = /opt/oracle/product/19c/dbhome_1 export ORACLE_SID = ORCLCDB export NLS_LANG = ` $ORACLE_HOME /bin/nls_lang.sh ` export ORACLE_BASE = /opt/oracle export LD_LIBRARY_PATH = $ORACLE_HOME /lib: $LD_LIBRARY_PATH export PATH = $ORACLE_HOME /bin: $PATH Aplico los cambios: . ~/.profile Le hago admin: sudo usermod -aG sudo oracle A partir de ahora, para controlar Oracle correctamente, tendremos que estar logeados siempre con este usuario.","title":"1.2.15"},{"location":"p1-servidores-clientes/ri/alumno1/#1216","text":"A\u00f1ado el usuario vagrant al grupo dba por si en alg\u00fan momento quiero acceder a sqlplus de manera r\u00e1pida: sudo usermod -a -G dba vagrant","title":"1.2.16"},{"location":"p1-servidores-clientes/ri/alumno1/#13-acceso-local-privilegiado","text":"oracle@servidororacle:~$ sqlplus / as sysdba SQL*Plus: Release 19 .0.0.0.0 - Production on Fri Oct 28 14 :13:53 2022 Version 19 .3.0.0.0 Copyright ( c ) 1982 , 2019 , Oracle. All rights reserved. Connected to: Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Version 19 .3.0.0.0 SELECT banner FROM v $version ; BANNER -------------------------------------------------------------------------------- Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Cuando en futuras ocasiones al conectarnos a Oracle nos aparezca el mensaje Connected to an idle instance , tenemos que ejecutar en sqlplus el comando startup .","title":"1.3 Acceso local privilegiado"},{"location":"p1-servidores-clientes/ri/alumno1/#14-creacion-de-usuario","text":"alter session set \"_ORACLE_SCRIPT\" = true ; create user bibliofilos_admin identified by 1234 ; grant all privileges to bibliofilos_admin ; Pruebo que funciona el acceso: oracle@servidororacle:~$ sqlplus bibliofilos_admin/1234 SQL*Plus: Release 19 .0.0.0.0 - Production on Fri Oct 28 14 :18:26 2022 Version 19 .3.0.0.0 Copyright ( c ) 1982 , 2019 , Oracle. All rights reserved. Last Successful login time: Fri Oct 28 2022 13 :52:49 +00:00 Connected to: Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Version 19 .3.0.0.0 SQL> Pruebo que los privilegios se han aplicado correctamente con la siguiente consulta: select * from dba_sys_privs where grantee = 'BIBLIOFILOS_ADMIN' ; El output de esta consulta es demasiado largo, as\u00ed que entra en este gist para verlo.","title":"1.4 Creaci\u00f3n de usuario"},{"location":"p1-servidores-clientes/ri/alumno1/#15-creacion-de-tablas","text":"CREATE TABLE bibliotecas ( id NUMBER ( 10 ) NOT NULL , ciudad VARCHAR2 ( 50 ) NOT NULL , calle VARCHAR2 ( 50 ) NOT NULL , CONSTRAINT bibliotecas_pk PRIMARY KEY ( id ) ); CREATE TABLE libros ( id NUMBER ( 10 ) NOT NULL , id_biblioteca NUMBER ( 10 ) NOT NULL , n_paginas NUMBER ( 10 ) NOT NULL , autor VARCHAR2 ( 50 ) NOT NULL , CONSTRAINT libros_pk PRIMARY KEY ( id ), CONSTRAINT id_biblioteca_fk_libros FOREIGN KEY ( id_biblioteca ) REFERENCES bibliotecas ( id ) ); CREATE TABLE trabajadores ( id NUMBER ( 10 ) NOT NULL , id_biblioteca NUMBER ( 10 ) NOT NULL , nombre VARCHAR2 ( 50 ) NOT NULL , apellido VARCHAR2 ( 50 ) NOT NULL , CONSTRAINT trabajadores_pk PRIMARY KEY ( id ), CONSTRAINT id_biblioteca_fk_trabajadores FOREIGN KEY ( id_biblioteca ) REFERENCES bibliotecas ( id ) ); Compruebo que se han creado con la siguiente consulta: SELECT table_name , owner FROM all_tables WHERE owner = 'BIBLIOFILOS_ADMIN' ORDER BY owner , table_name ; Devuelve lo siguiente: TABLE_NAME OWNER -------------------------------------------------------------------------------------------------------------------------------- -------------------------------------------------------------------------------------------------------------------------------- BIBLIOTECAS BIBLIOFILOS_ADMIN LIBROS BIBLIOFILOS_ADMIN TRABAJADORES BIBLIOFILOS_ADMIN","title":"1.5 Creaci\u00f3n de tablas"},{"location":"p1-servidores-clientes/ri/alumno1/#16-insercion-de-registros","text":"INSERT INTO bibliotecas ( id , ciudad , calle ) VALUES ( 1 , 'Utrera' , 'Alvarez Quintero' ); INSERT INTO bibliotecas ( id , ciudad , calle ) VALUES ( 2 , 'Dos Hermanas' , 'Plaza Huerta Palacios' ); INSERT INTO libros ( id , id_biblioteca , n_paginas , autor ) VALUES ( 1 , 1 , 320 , 'Dale Carnegie' ); INSERT INTO libros ( id , id_biblioteca , n_paginas , autor ) VALUES ( 2 , 2 , 714 , 'Anne Frank' ); INSERT INTO trabajadores ( id , id_biblioteca , nombre , apellido ) VALUES ( 1 , 1 , 'Pepe' , 'Pepito' ); INSERT INTO trabajadores ( id , id_biblioteca , nombre , apellido ) VALUES ( 2 , 2 , 'Jose' , 'Joselito' ); Compruebo que se han a\u00f1adido: select * from bibliotecas ; ID CIUDAD CALLE ---------- -------------------------------------------------- -------------------------------------------------- 1 Utrera Alvarez Quintero 2 Dos Hermanas Plaza Huerta Palacios select * from libros ; ID ID_BIBLIOTECA N_PAGINAS AUTOR ---------- ------------- ---------- -------------------------------------------------- 1 1 320 Dale Carnegie 2 2 714 Anne Frank select * from trabajadores ; ID ID_BIBLIOTECA NOMBRE APELLIDO ---------- ------------- -------------------------------------------------- -------------------------------------------------- 1 1 Pepe Pepito 2 2 Jose Joselito","title":"1.6 Inserci\u00f3n de registros"},{"location":"p1-servidores-clientes/ri/alumno1/#17-configuracion-del-acceso-remoto","text":"Dejo /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora de la siguiente manera: # listener.ora Network Configuration File: /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora # Generated by Oracle configuration tools. LISTENER = ( DESCRIPTION_LIST = ( DESCRIPTION = ( ADDRESS = ( PROTOCOL = TCP )( HOST = 0 .0.0.0 )( PORT = 1521 )) ( ADDRESS = ( PROTOCOL = IPC )( KEY = EXTPROC1521 )) ) ) SID_LIST_LISTENER = ( SID_LIST = ( SID_DESC = ( GLOBAL_DBNAME = ORCLCDB ) ( ORACLE_HOME = /opt/oracle/product/19c/dbhome_1 ) ( SID_NAME = ORCLCDB ) ) ) Dejo /opt/oracle/product/19c/dbhome_1/network/admin/tnsnames.ora de la siguiente manera: # tnsnames.ora Network Configuration File: /opt/oracle/product/19c/dbhome_1/network/admin/tnsnames.ora # Generated by Oracle configuration tools. ORCLCDB = ( DESCRIPTION = ( ADDRESS_LIST = ( ADDRESS = ( PROTOCOL = TCP )( HOST = servidororacle )( PORT = 1521 )) ) ( CONNECT_DATA = ( SERVICE_NAME = ORCLCDB ) ) ) LISTENER_ORCLCDB = ( ADDRESS = ( PROTOCOL = TCP )( HOST = servidororacle )( PORT = 1521 )) Muestro el estado del listener: oracle@servidororacle:~$ lsnrctl status LSNRCTL for Linux: Version 19 .0.0.0.0 - Production on 28 -OCT-2022 13 :43:38 Copyright ( c ) 1991 , 2019 , Oracle. All rights reserved. Connecting to ( DESCRIPTION =( ADDRESS =( PROTOCOL = TCP )( HOST = 0 .0.0.0 )( PORT = 1521 ))) TNS-12541: TNS:no listener TNS-12560: TNS:protocol adapter error TNS-00511: No listener Linux Error: 111 : Connection refused Connecting to ( DESCRIPTION =( ADDRESS =( PROTOCOL = IPC )( KEY = EXTPROC1521 ))) TNS-12541: TNS:no listener TNS-12560: TNS:protocol adapter error TNS-00511: No listener Linux Error: 2 : No such file or directory Estos errores significan que est\u00e1 parado, y adem\u00e1s podemos comprobar que efectivamente no tenemos procesos esperando peticiones en el puerto 1521: oracle@servidororacle:~$ sudo ss -tulpn Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process udp UNCONN 0 0 0 .0.0.0:68 0 .0.0.0:* users: (( \"dhclient\" ,pid = 314 ,fd = 9 )) udp UNCONN 0 0 127 .0.0.1:323 0 .0.0.0:* users: (( \"chronyd\" ,pid = 413 ,fd = 5 )) udp UNCONN 0 0 [ ::1 ] :21455 [ :: ] :* users: (( \"ora_lreg_orclcd\" ,pid = 774 ,fd = 10 )) udp UNCONN 0 0 [ ::1 ] :48386 [ :: ] :* users: (( \"ora_d000_orclcd\" ,pid = 786 ,fd = 7 )) udp UNCONN 0 0 [ ::1 ] :323 [ :: ] :* users: (( \"chronyd\" ,pid = 413 ,fd = 6 )) udp UNCONN 0 0 [ ::1 ] :51821 [ :: ] :* users: (( \"ora_s000_orclcd\" ,pid = 788 ,fd = 7 )) tcp LISTEN 0 128 0 .0.0.0:22 0 .0.0.0:* users: (( \"sshd\" ,pid = 411 ,fd = 3 )) tcp LISTEN 0 128 *:19393 *:* users: (( \"ora_d000_orclcd\" ,pid = 786 ,fd = 8 )) tcp LISTEN 0 128 [ :: ] :22 [ :: ] :* users: (( \"sshd\" ,pid = 411 ,fd = 4 )) Inicio el listener: oracle@servidororacle:~$ lsnrctl start LSNRCTL for Linux: Version 19 .0.0.0.0 - Production on 28 -OCT-2022 13 :48:46 Copyright ( c ) 1991 , 2019 , Oracle. All rights reserved. Starting /opt/oracle/product/19c/dbhome_1/bin/tnslsnr: please wait... TNSLSNR for Linux: Version 19 .0.0.0.0 - Production System parameter file is /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora Log messages written to /opt/oracle/diag/tnslsnr/servidororacle/listener/alert/log.xml Listening on: ( DESCRIPTION =( ADDRESS =( PROTOCOL = tcp )( HOST = 0 .0.0.0 )( PORT = 1521 ))) Listening on: ( DESCRIPTION =( ADDRESS =( PROTOCOL = ipc )( KEY = EXTPROC1521 ))) Connecting to ( DESCRIPTION =( ADDRESS =( PROTOCOL = TCP )( HOST = 0 .0.0.0 )( PORT = 1521 ))) STATUS of the LISTENER ------------------------ Alias LISTENER Version TNSLSNR for Linux: Version 19 .0.0.0.0 - Production Start Date 28 -OCT-2022 13 :48:46 Uptime 0 days 0 hr. 0 min. 0 sec Trace Level off Security ON: Local OS Authentication SNMP OFF Listener Parameter File /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora Listener Log File /opt/oracle/diag/tnslsnr/servidororacle/listener/alert/log.xml Listening Endpoints Summary... ( DESCRIPTION =( ADDRESS =( PROTOCOL = tcp )( HOST = 0 .0.0.0 )( PORT = 1521 ))) ( DESCRIPTION =( ADDRESS =( PROTOCOL = ipc )( KEY = EXTPROC1521 ))) Services Summary... Service \"ORCLCDB\" has 1 instance ( s ) . Instance \"ORCLCDB\" , status UNKNOWN, has 1 handler ( s ) for this service... The command completed successfully Muestro que ahora s\u00ed tenemos un proceso esperando peticiones en el puerto 1521: Pruebo a hacer un acceso usando tnsnames localmente para comprobar que funciona: Cuando usamos el @ estamos forzando las conexiones por tnsnames aunque sean locales.","title":"1.7 Configuraci\u00f3n del acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno1/#18-instalacion-del-cliente","text":"Se har\u00e1 sobre clienteoracle . Descargo estos 2 archivos: wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-basic-linux.x64-21.8.0.0.0dbru.zip wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-sqlplus-linux.x64-21.8.0.0.0dbru.zip Creo el siguiente directorio: sudo mkdir /opt/oracle Descargo unzip : sudo apt update sudo apt install unzip Descomprimo: sudo unzip -d /opt/oracle instantclient-basic-linux.x64-21.8.0.0.0dbru.zip sudo unzip -d /opt/oracle instantclient-sqlplus-linux.x64-21.8.0.0.0dbru.zip A\u00f1ado las siguientes variables de entorno a .bashrc : export LD_LIBRARY_PATH = /opt/oracle/instantclient_21_8: $LD_LIBRARY_PATH export PATH = $LD_LIBRARY_PATH : $PATH Aplico los cambios: source ~/.bashrc Compruebo que ya funciona sqlplus : vagrant@clienteoracle:~$ sqlplus -V SQL*Plus: Release 21 .0.0.0.0 - Production Version 21 .8.0.0.0 Creo el fichero /opt/oracle/instantclient_21_8/network/admin/tnsnames.ora : sudo touch /opt/oracle/instantclient_21_8/network/admin/tnsnames.ora Con el siguiente contenido: ORCLCDB = ( DESCRIPTION = ( ADDRESS_LIST = ( ADDRESS = ( PROTOCOL = TCP )( HOST = 10 .0.0.2 )( PORT = 1521 )) ) ( CONNECT_DATA = ( SERVICE_NAME = ORCLCDB ) ) )","title":"1.8 Instalaci\u00f3n del cliente"},{"location":"p1-servidores-clientes/ri/alumno1/#19-prueba-de-acceso-remoto","text":"vagrant@clienteoracle:~$ sqlplus bibliofilos_admin/1234@ORCLCDB SQL*Plus: Release 21 .0.0.0.0 - Production on Fri Oct 28 12 :23:58 2022 Version 21 .8.0.0.0 Copyright ( c ) 1982 , 2022 , Oracle. All rights reserved. Last Successful login time: Fri Oct 28 2022 12 :23:47 +00:00 Connected to: Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Version 19 .3.0.0.0 SQL> set linesize 32000 SQL> set pagesize 400 SQL> select * from bibliotecas ; ID CIUDAD CALLE ---------- -------------------------------------------------- -------------------------------------------------- 1 Utrera Alvarez Quintero 2 Dos Hermanas Plaza Huerta Palacios","title":"1.9 Prueba de acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno1/#110-mejoras-de-sqlplus","text":"","title":"1.10 Mejoras de sqlplus"},{"location":"p1-servidores-clientes/ri/alumno1/#1101","text":"Para tener un formateado correcto del output permanente , tenemos que editar el fichero /opt/oracle/product/19c/dbhome_1/sqlplus/admin/glogin.sql . Lo podemos definir como queramos, en mi caso lo dejar\u00e9 de la siguiente manera: -- -- Copyright (c) 1988, 2005, Oracle. All Rights Reserved. -- -- NAME -- glogin.sql -- -- DESCRIPTION -- SQL*Plus global login \"site profile\" file -- -- Add any SQL*Plus commands here that are to be executed when a -- user starts SQL*Plus, or uses the SQL*Plus CONNECT command. -- -- USAGE -- This script is automatically run -- set linesize 32000 set pagesize 400 Me conecto y hago una select para comprobar que funciona: oracle@servidororacle:~$ sqlplus bibliofilos_admin/1234@ORCLCDB SQL*Plus: Release 19 .0.0.0.0 - Production on Fri Oct 28 12 :39:06 2022 Version 19 .3.0.0.0 Copyright ( c ) 1982 , 2019 , Oracle. All rights reserved. Last Successful login time: Fri Oct 28 2022 12 :23:58 +00:00 Connected to: Oracle Database 19c Enterprise Edition Release 19 .0.0.0.0 - Production Version 19 .3.0.0.0 SQL> select * from bibliotecas ; ID CIUDAD CALLE ---------- -------------------------------------------------- -------------------------------------------------- 1 Utrera Alvarez Quintero 2 Dos Hermanas Plaza Huerta Palacios","title":"1.10.1"},{"location":"p1-servidores-clientes/ri/alumno1/#1102","text":"Por defecto sqlplus no trae la funcionalidad de historial de comandos y uso de las flechas para mover el cursor en los comandos. Si lo intentamos, nos sucede lo siguiente: Para arreglarlo, tenemos que instalar: sudo apt install rlwrap A partir de ahora, tenemos que ejecutar sqlplus de la siguiente manera: rlwrap sqlplus bibliofilos_admin/1234@ORCLCDB B\u00e1sicamente a\u00f1adiendo rlwrap al principio de cualquier comando de conexi\u00f3n sqlplus que queramos hacer. Hacer esto siempre es tedioso, as\u00ed que podemos crear un alias en ~/.bashrc : alias sqlplus = 'rlwrap sqlplus' Aplico los cambios: source ~/.bashrc Muestro el funcionamiento correcto:","title":"1.10.2"},{"location":"p1-servidores-clientes/ri/alumno1/#2-postgresql","text":"","title":"2. PostgreSQL"},{"location":"p1-servidores-clientes/ri/alumno1/#21-instalacion-del-servidor","text":"sudo apt update sudo apt install postgresql postgresql-contrib Compruebo que funciona: vagrant@servidorpostgresql:~$ sudo systemctl status postgresql \u25cf postgresql.service - PostgreSQL RDBMS Loaded: loaded ( /lib/systemd/system/postgresql.service ; enabled ; vendor preset: enabled ) Active: active ( exited ) since Tue 2022 -10-18 10 :12:46 UTC ; 2min 50s ago Main PID: 2772 ( code = exited, status = 0 /SUCCESS ) Tasks: 0 ( limit: 527 ) Memory: 0B CPU: 0 CGroup: /system.slice/postgresql.service Oct 18 10 :12:46 servidorpostgresql systemd [ 1 ] : Starting PostgreSQL RDBMS... Oct 18 10 :12:46 servidorpostgresql systemd [ 1 ] : Finished PostgreSQL RDBMS.","title":"2.1 Instalaci\u00f3n del servidor"},{"location":"p1-servidores-clientes/ri/alumno1/#22-acceso-local-privilegiado","text":"A\u00f1ado la contrase\u00f1a 1234 a postgres para habilitarlo: sudo passwd postgres Pruebo el acceso con postgres : vagrant@servidorpostgresql:~$ su - postgres Password: postgres@servidorpostgresql:~$ psql psql ( 13 .8 ( Debian 13 .8-0+deb11u1 )) Type \"help\" for help. postgres = #","title":"2.2 Acceso local privilegiado"},{"location":"p1-servidores-clientes/ri/alumno1/#23-creacion-de-la-base-de-datos","text":"CREATE DATABASE bibliofilos ; Compruebo que se ha creado: postgres = # \\l List of databases Name | Owner | Encoding | Collate | Ctype | Access privileges -------------+----------+----------+---------+---------+----------------------- bibliofilos | postgres | UTF8 | C.UTF-8 | C.UTF-8 | postgres | postgres | UTF8 | C.UTF-8 | C.UTF-8 | template0 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres template1 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres ( 4 rows ) Me conecto: postgres = # \\connect bibliofilos You are now connected to database \"bibliofilos\" as user \"postgres\" . bibliofilos = #","title":"2.3 Creaci\u00f3n de la base de datos"},{"location":"p1-servidores-clientes/ri/alumno1/#24-creacion-de-tablas","text":"CREATE TABLE bibliotecas ( id serial PRIMARY KEY, ciudad VARCHAR ( 50 ) NOT NULL, calle VARCHAR ( 50 ) NOT NULL ) ; CREATE TABLE libros ( id serial PRIMARY KEY, id_biblioteca serial NOT NULL, n_paginas int NOT NULL, autor VARCHAR ( 50 ) NOT NULL, FOREIGN KEY ( id_biblioteca ) REFERENCES Bibliotecas ( id ) ) ; CREATE TABLE trabajadores ( id serial PRIMARY KEY, id_biblioteca serial NOT NULL, nombre VARCHAR ( 50 ) NOT NULL, apellido VARCHAR ( 50 ) NOT NULL, FOREIGN KEY ( id_biblioteca ) REFERENCES Bibliotecas ( id ) ) ; Compruebo que se han creado: bibliofilos = # \\dt List of relations Schema | Name | Type | Owner --------+--------------+-------+---------- public | bibliotecas | table | postgres public | libros | table | postgres public | trabajadores | table | postgres ( 3 rows )","title":"2.4 Creaci\u00f3n de tablas"},{"location":"p1-servidores-clientes/ri/alumno1/#25-insercion-de-registros","text":"INSERT INTO bibliotecas ( ciudad , calle ) VALUES ( 'Utrera' , 'Alvarez Quintero' ); INSERT INTO bibliotecas ( ciudad , calle ) VALUES ( 'Dos Hermanas' , 'Plaza Huerta Palacios' ); INSERT INTO libros ( id_biblioteca , n_paginas , autor ) VALUES ( 1 , 320 , 'Dale Carnegie' ); INSERT INTO libros ( id_biblioteca , n_paginas , autor ) VALUES ( 2 , 714 , 'Anne Frank' ); INSERT INTO trabajadores ( id_biblioteca , nombre , apellido ) VALUES ( 1 , 'Pepe' , 'Pepito' ); INSERT INTO trabajadores ( id_biblioteca , nombre , apellido ) VALUES ( 2 , 'Jose' , 'Joselito' ); Compruebo que se han a\u00f1adido: bibliofilos = # select * from bibliotecas; id | ciudad | calle ----+--------------+----------------------- 1 | Utrera | Alvarez Quintero 2 | Dos Hermanas | Plaza Huerta Palacios ( 2 rows ) bibliofilos = # select * from libros; id | id_biblioteca | n_paginas | autor ----+---------------+-----------+--------------- 1 | 1 | 320 | Dale Carnegie 2 | 2 | 714 | Anne Frank ( 2 rows ) bibliofilos = # select * from trabajadores; id | id_biblioteca | nombre | apellido ----+---------------+--------+---------- 1 | 1 | Pepe | Pepito 2 | 2 | Jose | Joselito ( 2 rows )","title":"2.5 Inserci\u00f3n de registros"},{"location":"p1-servidores-clientes/ri/alumno1/#26-creacion-de-usuarios","text":"En debian: sudo adduser bibliofilos_admin En PostgreSQL: create user bibliofilos_admin with encrypted password '1234' ; Compruebo que se ha creado: postgres = # \\du List of roles Role name | Attributes | Member of -------------------+------------------------------------------------------------+----------- bibliofilos_admin | | {} postgres | Superuser, Create role, Create DB, Replication, Bypass RLS | {} Le doy privilegios sobre la base de datos: GRANT all privileges ON DATABASE bibliofilos TO bibliofilos_admin ; Al listar las bases de datos podemos ver los privilegios de acceso: postgres = # \\l List of databases Name | Owner | Encoding | Collate | Ctype | Access privileges -------------+----------+----------+---------+---------+-------------------------------- bibliofilos | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = Tc/postgres + | | | | | postgres = CTc/postgres + | | | | | bibliofilos_admin = CTc/postgres postgres | postgres | UTF8 | C.UTF-8 | C.UTF-8 | template0 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres template1 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres ( 4 rows ) Le doy privilegios sobre las tablas: GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO bibliofilos_admin ; Muestro que se han aplicado los privilegios: bibliofilos =# SELECT * from information_schema . table_privileges WHERE grantee = 'bibliofilos_admin' ; grantor | grantee | table_catalog | table_schema | table_name | privilege_type | is_grantable | with_hierarchy ----------+-------------------+---------------+--------------+--------------+----------------+--------------+---------------- postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | INSERT | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | SELECT | NO | YES postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | UPDATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | DELETE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | TRUNCATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | REFERENCES | NO | NO postgres | bibliofilos_admin | bibliofilos | public | bibliotecas | TRIGGER | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | INSERT | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | SELECT | NO | YES postgres | bibliofilos_admin | bibliofilos | public | libros | UPDATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | DELETE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | TRUNCATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | REFERENCES | NO | NO postgres | bibliofilos_admin | bibliofilos | public | libros | TRIGGER | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | INSERT | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | SELECT | NO | YES postgres | bibliofilos_admin | bibliofilos | public | trabajadores | UPDATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | DELETE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | TRUNCATE | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | REFERENCES | NO | NO postgres | bibliofilos_admin | bibliofilos | public | trabajadores | TRIGGER | NO | NO ( 21 rows )","title":"2.6 Creaci\u00f3n de usuarios"},{"location":"p1-servidores-clientes/ri/alumno1/#27-configuracion-del-acceso-remoto","text":"Modifico la siguiente l\u00ednea en /etc/postgresql/13/main/postgresql.conf : listen_addresses = '*' A\u00f1ado las siguientes l\u00edneas a /etc/postgresql/13/main/pg_hba.conf : # Remote connections host all all 0 .0.0.0/0 md5 Reinicio: sudo systemctl restart postgresql","title":"2.7 Configuraci\u00f3n del acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno1/#28-instalacion-del-cliente","text":"Se har\u00e1 sobre clientepostgresql . sudo apt update sudo apt install postgresql-client","title":"2.8 Instalaci\u00f3n del cliente"},{"location":"p1-servidores-clientes/ri/alumno1/#29-prueba-de-acceso-remoto","text":"vagrant@clientepostgresql:~$ psql -U bibliofilos_admin -h 10 .0.1.2 -p 5432 bibliofilos Password for user bibliofilos_admin: psql ( 13 .8 ( Debian 13 .8-0+deb11u1 )) SSL connection ( protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256 , compression: off ) Type \"help\" for help. bibliofilos = > \\l List of databases Name | Owner | Encoding | Collate | Ctype | Access privileges -------------+----------+----------+---------+---------+-------------------------------- bibliofilos | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = Tc/postgres + | | | | | postgres = CTc/postgres + | | | | | bibliofilos_admin = CTc/postgres postgres | postgres | UTF8 | C.UTF-8 | C.UTF-8 | template0 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres template1 | postgres | UTF8 | C.UTF-8 | C.UTF-8 | = c/postgres + | | | | | postgres = CTc/postgres ( 4 rows ) bibliofilos = > \\d t List of relations Schema | Name | Type | Owner --------+--------------+-------+---------- public | bibliotecas | table | postgres public | libros | table | postgres public | trabajadores | table | postgres ( 3 rows ) bibliofilos = > select * from bibliotecas ; id | ciudad | calle ----+--------------+----------------------- 1 | Utrera | Alvarez Quintero 2 | Dos Hermanas | Plaza Huerta Palacios ( 2 rows )","title":"2.9 Prueba de acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno1/#3-mariadb","text":"","title":"3. MariaDB"},{"location":"p1-servidores-clientes/ri/alumno1/#31-instalacion-del-servidor","text":"sudo apt update sudo apt install mariadb-server Compruebo que funciona: vagrant@servidormariadb:~$ sudo systemctl status mariadb \u25cf mariadb.service - MariaDB 10 .5.15 database server Loaded: loaded ( /lib/systemd/system/mariadb.service ; enabled ; vendor preset: enabled ) Active: active ( running ) since Wed 2022 -10-19 11 :01:36 UTC ; 11min ago Docs: man:mariadbd ( 8 ) https://mariadb.com/kb/en/library/systemd/ Process: 2111 ExecStartPre = /usr/bin/install -m 755 -o mysql -g root -d /var/run/mysqld ( code = exited, status = 0 /SUCCESS ) Process: 2112 ExecStartPre = /bin/sh -c systemctl unset-environment _WSREP_START_POSITION ( code = exited, status = 0 /SUCCESS ) Process: 2114 ExecStartPre = /bin/sh -c [ ! -e /usr/bin/galera_recovery ] && VAR = || VAR = ` cd /usr/bin/.. ; /usr/bin/galera_recovery ` ; [ $? -eq 0 ] && systemctl set-envi> Process: 2174 ExecStartPost = /bin/sh -c systemctl unset-environment _WSREP_START_POSITION ( code = exited, status = 0 /SUCCESS ) Process: 2176 ExecStartPost = /etc/mysql/debian-start ( code = exited, status = 0 /SUCCESS ) Main PID: 2161 ( mariadbd ) Status: \"Taking your SQL requests now...\" Tasks: 8 ( limit: 527 ) Memory: 61 .7M CPU: 425ms CGroup: /system.slice/mariadb.service \u2514\u25002161 /usr/sbin/mariadbd Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] Server socket created on IP: '127.0.0.1' . Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] InnoDB: Buffer pool ( s ) load completed at 221019 11 :01:36 Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] Reading of all Master_info entries succeeded Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] Added new Master_info '' to hash table Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : 2022 -10-19 11 :01:36 0 [ Note ] /usr/sbin/mariadbd: ready for connections. Oct 19 11 :01:36 servidormariadb mariadbd [ 2161 ] : Version: '10.5.15-MariaDB-0+deb11u1' socket: '/run/mysqld/mysqld.sock' port: 3306 Debian 11 Oct 19 11 :01:36 servidormariadb systemd [ 1 ] : Started MariaDB 10 .5.15 database server. Oct 19 11 :01:36 servidormariadb /etc/mysql/debian-start [ 2178 ] : Upgrading MySQL tables if necessary. Oct 19 11 :01:36 servidormariadb /etc/mysql/debian-start [ 2189 ] : Checking for insecure root accounts. Oct 19 11 :01:36 servidormariadb /etc/mysql/debian-start [ 2193 ] : Triggering myisam-recover for all MyISAM tables and aria-recover for all Aria tables","title":"3.1 Instalaci\u00f3n del servidor"},{"location":"p1-servidores-clientes/ri/alumno1/#32-acceso-local-privilegiado","text":"vagrant@servidormariadb:~$ sudo mariadb Welcome to the MariaDB monitor. Commands end with ; or \\g . Your MariaDB connection id is 31 Server version: 10 .5.15-MariaDB-0+deb11u1 Debian 11 Copyright ( c ) 2000 , 2018 , Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. MariaDB [( none )] >","title":"3.2 Acceso local privilegiado"},{"location":"p1-servidores-clientes/ri/alumno1/#33-creacion-de-la-base-de-datos","text":"create database bibliofilos ; Compruebo que se ha creado: MariaDB [( none )] > show databases ; +--------------------+ | Database | +--------------------+ | bibliofilos | | information_schema | | mysql | | performance_schema | +--------------------+ 4 rows in set ( 0 .000 sec ) Me conecto: MariaDB [( none )] > use bibliofilos ; Database changed MariaDB [ bibliofilos ] >","title":"3.3 Creaci\u00f3n de la base de datos"},{"location":"p1-servidores-clientes/ri/alumno1/#34-creacion-de-tablas","text":"create table bibliotecas ( id int auto_increment , ciudad varchar ( 50 ) not null , calle varchar ( 50 ) not null , primary key ( id ) ); create table libros ( id int auto_increment , id_biblioteca int not null , n_paginas int not null , autor varchar ( 50 ) not null , primary key ( id ), foreign key ( id_biblioteca ) references bibliotecas ( id ) ); create table trabajadores ( id int auto_increment , id_biblioteca int not null , nombre varchar ( 50 ) not null , apellido varchar ( 50 ) not null , primary key ( id ), foreign key ( id_biblioteca ) references bibliotecas ( id ) ); Compruebo que se han creado: MariaDB [ bibliofilos ] > show tables ; +-----------------------+ | Tables_in_bibliofilos | +-----------------------+ | bibliotecas | | libros | | trabajadores | +-----------------------+ 3 rows in set ( 0 .001 sec )","title":"3.4 Creaci\u00f3n de tablas"},{"location":"p1-servidores-clientes/ri/alumno1/#35-insercion-de-registros","text":"INSERT INTO bibliotecas ( ciudad , calle ) VALUES ( 'Utrera' , 'Alvarez Quintero' ); INSERT INTO bibliotecas ( ciudad , calle ) VALUES ( 'Dos Hermanas' , 'Plaza Huerta Palacios' ); INSERT INTO libros ( id_biblioteca , n_paginas , autor ) VALUES ( 1 , 320 , 'Dale Carnegie' ); INSERT INTO libros ( id_biblioteca , n_paginas , autor ) VALUES ( 2 , 714 , 'Anne Frank' ); INSERT INTO trabajadores ( id_biblioteca , nombre , apellido ) VALUES ( 1 , 'Pepe' , 'Pepito' ); INSERT INTO trabajadores ( id_biblioteca , nombre , apellido ) VALUES ( 2 , 'Jose' , 'Joselito' ); Compruebo que se han a\u00f1adido: MariaDB [ bibliofilos ] > select * from bibliotecas ; +----+--------------+-----------------------+ | id | ciudad | calle | +----+--------------+-----------------------+ | 1 | Utrera | Alvarez Quintero | | 2 | Dos Hermanas | Plaza Huerta Palacios | +----+--------------+-----------------------+ 2 rows in set ( 0 .001 sec ) MariaDB [ bibliofilos ] > select * from libros ; +----+---------------+-----------+---------------+ | id | id_biblioteca | n_paginas | autor | +----+---------------+-----------+---------------+ | 1 | 1 | 320 | Dale Carnegie | | 2 | 2 | 714 | Anne Frank | +----+---------------+-----------+---------------+ 2 rows in set ( 0 .001 sec ) MariaDB [ bibliofilos ] > select * from trabajadores ; +----+---------------+--------+----------+ | id | id_biblioteca | nombre | apellido | +----+---------------+--------+----------+ | 1 | 1 | Pepe | Pepito | | 2 | 2 | Jose | Joselito | +----+---------------+--------+----------+ 2 rows in set ( 0 .001 sec )","title":"3.5 Inserci\u00f3n de registros"},{"location":"p1-servidores-clientes/ri/alumno1/#36-creacion-de-usuarios","text":"CREATE USER 'bibliofilos_admin' @ 'localhost' IDENTIFIED BY '1234' ; CREATE USER 'bibliofilos_admin' @ '%' IDENTIFIED BY '1234' ; Compruebo que se han creado: MariaDB [( none )] > SELECT user, host FROM mysql.user ; +-------------------+-----------+ | User | Host | +-------------------+-----------+ | bibliofilos_admin | % | | bibliofilos_admin | localhost | | mariadb.sys | localhost | | mysql | localhost | | root | localhost | +-------------------+-----------+ 5 rows in set ( 0 .002 sec ) Les doy privilegios: GRANT ALL ON bibliofilos . * TO 'bibliofilos_admin' @ 'localhost' ; GRANT ALL ON bibliofilos . * TO 'bibliofilos_admin' @ '%' ; FLUSH PRIVILEGES ; Muestro que se han aplicado: MariaDB [( none )] > SHOW GRANTS FOR 'bibliofilos_admin' ; + ------------------------------------------------------------------------------------------------------------------+ | Grants for bibliofilos_admin @% | + ------------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON * . * TO ` bibliofilos_admin `@`%` IDENTIFIED BY PASSWORD '*A4B6157319038724E3560894F7F932C8886EBFCF' | | GRANT ALL PRIVILEGES ON ` bibliofilos ` . * TO ` bibliofilos_admin `@`%` | + ------------------------------------------------------------------------------------------------------------------+ 2 rows in set ( 0 . 000 sec ) MariaDB [( none )] > SHOW GRANTS FOR 'bibliofilos_admin' @ 'localhost' ; + --------------------------------------------------------------------------------------------------------------------------+ | Grants for bibliofilos_admin @ localhost | + --------------------------------------------------------------------------------------------------------------------------+ | GRANT USAGE ON * . * TO ` bibliofilos_admin `@` localhost ` IDENTIFIED BY PASSWORD '*A4B6157319038724E3560894F7F932C8886EBFCF' | | GRANT ALL PRIVILEGES ON ` bibliofilos ` . * TO ` bibliofilos_admin `@` localhost ` | + --------------------------------------------------------------------------------------------------------------------------+ 2 rows in set ( 0 . 000 sec )","title":"3.6 Creaci\u00f3n de usuarios"},{"location":"p1-servidores-clientes/ri/alumno1/#37-configuracion-del-acceso-remoto","text":"Modifico la siguiente l\u00ednea en /etc/mysql/mariadb.conf.d/50-server.cnf : bind-address = 0 .0.0.0 Reinicio: sudo systemctl restart mariadb Pruebo que el cambio se aplic\u00f3: vagrant@servidormariadb:~$ netstat -ant | grep 3306 tcp 0 0 0 .0.0.0:3306 0 .0.0.0:* LISTEN","title":"3.7 Configuraci\u00f3n del acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno1/#38-instalacion-del-cliente","text":"Se har\u00e1 sobre clientemariadb . sudo apt update sudo apt install mariadb-client","title":"3.8 Instalaci\u00f3n del cliente"},{"location":"p1-servidores-clientes/ri/alumno1/#39-prueba-de-acceso-remoto","text":"vagrant@clientemariadb:~$ mariadb -u bibliofilos_admin -h 10 .0.2.2 -p bibliofilos Enter password: Reading table information for completion of table and column names You can turn off this feature to get a quicker startup with -A Welcome to the MariaDB monitor. Commands end with ; or \\g . Your MariaDB connection id is 35 Server version: 10 .5.15-MariaDB-0+deb11u1 Debian 11 Copyright ( c ) 2000 , 2018 , Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. MariaDB [ bibliofilos ] > show databases ; +--------------------+ | Database | +--------------------+ | bibliofilos | | information_schema | +--------------------+ 2 rows in set ( 0 .002 sec ) MariaDB [ bibliofilos ] > show tables ; +-----------------------+ | Tables_in_bibliofilos | +-----------------------+ | bibliotecas | | libros | | trabajadores | +-----------------------+ 3 rows in set ( 0 .001 sec ) MariaDB [ bibliofilos ] > select * from bibliotecas ; +----+--------------+-----------------------+ | id | ciudad | calle | +----+--------------+-----------------------+ | 1 | Utrera | Alvarez Quintero | | 2 | Dos Hermanas | Plaza Huerta Palacios | +----+--------------+-----------------------+ 2 rows in set ( 0 .002 sec )","title":"3.9 Prueba de acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno1/#4-mongodb","text":"","title":"4. MongoDB"},{"location":"p1-servidores-clientes/ri/alumno1/#41-instalacion-del-servidor","text":"A\u00f1ado el repositorio: echo \"deb http://repo.mongodb.org/apt/debian bullseye/mongodb-org/5.0 main\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list A\u00f1ado la clave GPG: curl -sSL https://www.mongodb.org/static/pgp/server-5.0.asc -o mongoserver.asc gpg --no-default-keyring --keyring ./mongo_key_temp.gpg --import ./mongoserver.asc gpg --no-default-keyring --keyring ./mongo_key_temp.gpg --export > ./mongoserver_key.gpg sudo mv mongoserver_key.gpg /etc/apt/trusted.gpg.d/ Actualizo: sudo apt update Instalo: sudo apt install mongodb-org Inicio el servidor: sudo systemctl enable --now mongod Compruebo que funciona: vagrant@servidormongodb:~$ sudo systemctl status mongod \u25cf mongod.service - MongoDB Database Server Loaded: loaded ( /lib/systemd/system/mongod.service ; enabled ; vendor preset: enabled ) Active: active ( running ) since Thu 2022 -10-20 08 :20:59 UTC ; 2min 26s ago Docs: https://docs.mongodb.org/manual Main PID: 2695 ( mongod ) Memory: 120 .9M CPU: 1 .866s CGroup: /system.slice/mongod.service \u2514\u25002695 /usr/bin/mongod --config /etc/mongod.conf Oct 20 08 :20:59 servidormongodb systemd [ 1 ] : Started MongoDB Database Server.","title":"4.1 Instalaci\u00f3n del servidor"},{"location":"p1-servidores-clientes/ri/alumno1/#42-acceso-local-privilegiado","text":"vagrant@servidormongodb:~$ mongosh Current Mongosh Log ID:63510a480bb54d2af15cd761 Connecting to: mongodb://127.0.0.1:27017/?directConnection = true & serverSelectionTimeoutMS = 2000 & appName = mongosh+1.6.0 Using MongoDB: 5 .0.13 Using Mongosh: 1 .6.0 For mongosh info see: https://docs.mongodb.com/mongodb-shell/ ------ The server generated these startup warnings when booting 2022 -10-20T08:21:00.034+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem 2022 -10-20T08:21:00.617+00:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted ------ ------ Enable MongoDB ' s free cloud-based monitoring service, which will then receive and display metrics about your deployment ( disk utilization, CPU, operation statistics, etc ) . The monitoring data will be available on a MongoDB website with a unique URL accessible to you and anyone you share the URL with. MongoDB may use this information to make product improvements and to suggest MongoDB products and deployment options to you. To enable free monitoring, run the following command: db.enableFreeMonitoring () To permanently disable this reminder, run the following command: db.disableFreeMonitoring () ------ Warning: Found ~/.mongorc.js, but not ~/.mongoshrc.js. ~/.mongorc.js will not be loaded. You may want to copy or rename ~/.mongorc.js to ~/.mongoshrc.js. test>","title":"4.2 Acceso local privilegiado"},{"location":"p1-servidores-clientes/ri/alumno1/#43-creacion-de-la-base-de-datos","text":"Si no existe la bd con el nombre que le digamos, la crear\u00e1: test > use bibliofilos switched to db bibliofilos bibliofilos > Compruebo que se ha creado: bibliofilos> show dbs admin 40 .00 KiB config 108 .00 KiB local 40 .00 KiB La bd no aparece listada por ahora porque necesita contener datos para aparecer.","title":"4.3 Creaci\u00f3n de la base de datos"},{"location":"p1-servidores-clientes/ri/alumno1/#44-creacion-de-colecciones","text":"db . createCollection ( \"bibliotecas\" ) db . createCollection ( \"libros\" ) db . createCollection ( \"trabajadores\" ) Compruebo que se han creado: bibliofilos> show collections bibliotecas libros trabajadores","title":"4.4 Creaci\u00f3n de colecciones"},{"location":"p1-servidores-clientes/ri/alumno1/#45-insercion-de-documentos","text":"db . bibliotecas . insertMany ( [ { ciudad : \"Utrera\" , calle : \"Alvarez Quintero\" } , { ciudad : \"Dos Hermanas\" , calle : \"Plaza Huerta Palacios\" } ] ) db . libros . insertMany ( [ { n_paginas : 320 , autor : \"Dale Carnegie\" } , { n_paginas : 714 , autor : \"Anne Frank\" } ] ) db . trabajadores . insertMany ( [ { nombre : \"Pepe\" , apellido : \"Pepito\" } , { nombre : \"Jose\" , apellido : \"Joselito\" } ] ) Compruebo que se han insertado: bibliofilos> db.bibliotecas.find () [ { _id: ObjectId ( \"635126caf4c5855bf45547d3\" ) , ciudad: 'Utrera' , calle: 'Alvarez Quintero' } , { _id: ObjectId ( \"635126caf4c5855bf45547d4\" ) , ciudad: 'Dos Hermanas' , calle: 'Plaza Huerta Palacios' } ] bibliofilos> db.libros.find () [ { _id: ObjectId ( \"63512712f4c5855bf45547d5\" ) , n_paginas: 320 , autor: 'Dale Carnegie' } , { _id: ObjectId ( \"63512712f4c5855bf45547d6\" ) , n_paginas: 714 , autor: 'Anne Frank' } ] bibliofilos> db.trabajadores.find () [ { _id: ObjectId ( \"6351271cf4c5855bf45547d7\" ) , nombre: 'Pepe' , apellido: 'Pepito' } , { _id: ObjectId ( \"6351271cf4c5855bf45547d8\" ) , nombre: 'Jose' , apellido: 'Joselito' } ]","title":"4.5 Inserci\u00f3n de documentos"},{"location":"p1-servidores-clientes/ri/alumno1/#46-creacion-de-usuarios","text":"Usuario con permisos sobre bibliofilos : use bibliofilos db . createUser ( { user : \"bibliofilos_admin\" , pwd : \"1234\" , roles : [ \"dbOwner\" ] } ) Compruebo que se ha creado: bibliofilos> db.getUsers () { users: [ { _id: 'bibliofilos.bibliofilos_admin' , userId: new UUID ( \"e420bea0-b85f-4914-a395-2f2b20b3aa48\" ) , user: 'bibliofilos_admin' , db: 'bibliofilos' , roles: [ { role: 'dbOwner' , db: 'bibliofilos' } ] , mechanisms: [ 'SCRAM-SHA-1' , 'SCRAM-SHA-256' ] } ] , ok: 1 } Usuario administrador: use admin db . createUser ( { user : \"admin\" , pwd : \"1234\" , roles : [ { role : \"userAdminAnyDatabase\" , db : \"admin\" } , { role : \"readWriteAnyDatabase\" , db : \"admin\" } ] } ) Compruebo que se ha creado: admin> db.getUsers () { users: [ { _id: 'admin.admin' , userId: new UUID ( \"022fafb9-953b-4e5e-985f-6634d0ed954c\" ) , user: 'admin' , db: 'admin' , roles: [ { role: 'userAdminAnyDatabase' , db: 'admin' } , { role: 'readWriteAnyDatabase' , db: 'admin' } ] , mechanisms: [ 'SCRAM-SHA-1' , 'SCRAM-SHA-256' ] } ] , ok: 1 }","title":"4.6 Creaci\u00f3n de usuarios"},{"location":"p1-servidores-clientes/ri/alumno1/#47-configuracion-del-acceso-remoto","text":"Modifico la siguiente l\u00ednea en /etc/mongod.conf : bindIp: 0 .0.0.0 A\u00f1ado las siguientes l\u00edneas en /etc/mongod.conf : security: authorization: enabled Reinicio: sudo systemctl restart mongod Pruebo que el cambio se aplic\u00f3: vagrant@servidormongodb:~$ netstat -ant | grep 27017 tcp 0 0 0 .0.0.0:27017 0 .0.0.0:* LISTEN","title":"4.7 Configuraci\u00f3n del acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno1/#48-instalacion-del-cliente","text":"Se har\u00e1 sobre clientemongodb . A\u00f1ado el repositorio: echo \"deb http://repo.mongodb.org/apt/debian bullseye/mongodb-org/5.0 main\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list A\u00f1ado la clave GPG: curl -sSL https://www.mongodb.org/static/pgp/server-5.0.asc -o mongoserver.asc gpg --no-default-keyring --keyring ./mongo_key_temp.gpg --import ./mongoserver.asc gpg --no-default-keyring --keyring ./mongo_key_temp.gpg --export > ./mongoserver_key.gpg sudo mv mongoserver_key.gpg /etc/apt/trusted.gpg.d/ Actualizo: sudo apt update Instalo: sudo apt install mongodb-org-shell mongodb-mongosh","title":"4.8 Instalaci\u00f3n del cliente"},{"location":"p1-servidores-clientes/ri/alumno1/#49-prueba-de-acceso-remoto","text":"vagrant@clientemongodb:~$ mongosh -u bibliofilos_admin -p 1234 10 .0.3.2/bibliofilos Current Mongosh Log ID:6351bcb93f3b38d91c3c973b Connecting to: mongodb://<credentials>@10.0.3.2:27017/bibliofilos?directConnection = true & appName = mongosh+1.6.0 Using MongoDB: 5 .0.13 Using Mongosh: 1 .6.0 For mongosh info see: https://docs.mongodb.com/mongodb-shell/ Warning: Found ~/.mongorc.js, but not ~/.mongoshrc.js. ~/.mongorc.js will not be loaded. You may want to copy or rename ~/.mongorc.js to ~/.mongoshrc.js. bibliofilos> show dbs bibliofilos 120 .00 KiB bibliofilos> show collections bibliotecas libros trabajadores bibliofilos> db.bibliotecas.find () [ { _id: ObjectId ( \"635126caf4c5855bf45547d3\" ) , ciudad: 'Utrera' , calle: 'Alvarez Quintero' } , { _id: ObjectId ( \"635126caf4c5855bf45547d4\" ) , ciudad: 'Dos Hermanas' , calle: 'Plaza Huerta Palacios' } ]","title":"4.9 Prueba de acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno1/#5-app-flask-con-mongodb","text":"En este repositorio se encuentran tanto el c\u00f3digo de la aplicaci\u00f3n como su gu\u00eda de uso y pruebas de funcionamiento.","title":"5. App Flask con MongoDB"},{"location":"p1-servidores-clientes/ri/alumno2/","text":"Alumno 2 Oracle 19c Instalaci\u00f3n Lo primero que debemos hacer es descargarnos desde la p\u00e1gina oficial de oracle el paquete .rpm y subirlo por scp a nuestro servidor, y una vez hecho eso, haremos lo siguiente: Instalamos alien y paquetes necesarios: apt install alien libaio1 unixodbc Ahora con alien, reconvertimos el fichero .rpm a dpkg, esto tardar\u00e1 un buen rato, depende del rendimiento que tengas en el sistema: alien --scripts -d oracle-database-ee-19c-1.0-1.x86_64.rpm Una vez ha terminado la reconversi\u00f3n, dentro del fichero /sbin/chkconfig, a\u00f1adimos lo siguiente: #!/bin/bash # Oracle 19c installer chkconfig hack file = /etc/init.d/oracle-19c if [[ ! ` tail -n1 $file | grep INIT ` ]] ; then echo >> $file echo '### BEGIN INIT INFO' >> $file echo '# Provides: Oracle 19c' >> $file echo '# Required-Start: $remote_fs $syslog' >> $file echo '# Required-Stop: $remote_fs $syslog' >> $file echo '# Default-Start: 2 3 4 5' >> $file echo '# Default-Stop: 0 1 6' >> $file echo '# Short-Description: Oracle 19c' >> $file echo '### END INIT INFO' >> $file fi update-rc.d oracle-19c defaults 80 01 Ahora le damos permisos al fichero: chmod 777 /sbin/chkconfig A\u00f1adimos lo siguiente al fichero /etc/sysctl.d/60-oracle.conf para configurar los par\u00e1metros del kernel: # Oracle 19c kernel parameters fs.file-max = 6815744 net.ipv4.ip_local_port_range = 9000 65000 kernel.sem = 250 32000 100 128 kernel.shmmax = 536870912 Arrancamos el servicio procps: systemctl start procps A\u00f1adimos el siguiente contenido al fichero /etc/rc2.d/S01shm_load: #!/bin/sh case \" $1 \" in start ) mkdir /var/lock/subsys 2 >/dev/null touch /var/lock/subsys/listener rm /dev/shm 2 >/dev/null mkdir /dev/shm 2 >/dev/null mount -t tmpfs shmfs -o size = 2048m /dev/shm ;; * ) echo error exit 1 ;; esac Le damos permisos: chmod 777 /etc/rc2.d/S01shm_load Reiniciamos el sistema: reboot Instalamos el paquete .deb que reconvertimos anteriormente: dpkg --install oracle-database-ee-19c_1.0-2_amd64.deb Una vez instalado, a\u00f1adimos el par\u00e1metro -J-Doracle.assistants.dbca.validate.ConfigurationParams=false dentro de /etc/init.d/oracledb_ORCLCDB-19c: Ahora, ejecutamos el siguiente comando para configurar oracle: root@escenario:~# /etc/init.d/oracledb_ORCLCDB-19c configure Dentro de bashrc a\u00f1ado las siguientes variables de entorno: # Oracle environment variables export ORACLE_HOME = /opt/oracle/product/19c/dbhome_1 export ORACLE_SID = ORCLCDB export NLS_LANG = ` $ORACLE_HOME /bin/nls_lang.sh ` export ORACLE_BASE = /opt/oracle export LD_LIBRARY_PATH = $ORACLE_HOME /lib: $LD_LIBRARY_PATH export PATH = $ORACLE_HOME /bin: $PATH Reinciamos la m\u00e1quina: reboot Iniciamos el servicio de oracle: sudo systemctl start oracledb_ORCLCDB-19c Finalmente accedemos a oracle: oracle @ oracle : ~ $ sqlplus / as sysdba SQL * Plus : Release 19 . 0 . 0 . 0 . 0 - Production on Sun Oct 30 19 : 26 : 55 2022 Version 19 . 3 . 0 . 0 . 0 Copyright ( c ) 1982 , 2019 , Oracle . All rights reserved . Conectado a : Oracle Database 19 c Enterprise Edition Release 19 . 0 . 0 . 0 . 0 - Production Version 19 . 3 . 0 . 0 . 0 SQL > Creaci\u00f3n de usuarios Para crear un usuario hacemos lo siguiente: Creamos el usuario con contrase\u00f1a y le damos permisos: SQL > create user joseju identified by lolazo25 ; Usuario creado . SQL > grant all privileges to joseju ; Concesion terminada correctamente . Accedemos a oracle con el usuario que hemos creado para comprobar que todo funciona correctamente: oracle @ oracle : ~ $ sqlplus joseju SQL * Plus : Release 19 . 0 . 0 . 0 . 0 - Production on Sun Oct 30 19 : 32 : 38 2022 Version 19 . 3 . 0 . 0 . 0 Copyright ( c ) 1982 , 2019 , Oracle . All rights reserved . Enter password : Conectado a : Oracle Database 19 c Enterprise Edition Release 19 . 0 . 0 . 0 . 0 - Production Version 19 . 3 . 0 . 0 . 0 SQL > Creaci\u00f3n Base de datos Creamos las siguientes tablas: SQL > CREATE TABLE usuarios ( id NUMBER ( 3 ) NOT NULL , nombre VARCHAR2 ( 20 ) NOT NULL , password char ( 102 ) NOT NULL , fullname VARCHAR2 ( 50 ), CONSTRAINT usuarios_pk PRIMARY KEY ( id ) ); Tabla creada . SQL > CREATE TABLE autores ( id NUMBER ( 3 ) NOT NULL , nombre VARCHAR2 ( 20 ) NOT NULL , apellidos VARCHAR2 ( 50 ) NOT NULL , CONSTRAINT autor_pk PRIMARY KEY ( id ) ); Tabla creada . SQL > CREATE TABLE libros ( id NUMBER ( 3 ) NOT NULL , id_autor NUMBER ( 3 ) NOT NULL , nombre VARCHAR2 ( 20 ) NOT NULL , CONSTRAINT libros_pk PRIMARY KEY ( id ), CONSTRAINT id_autor_fk FOREIGN KEY ( id_autor ) REFERENCES autores ( id ) ); Tabla creada . SQL > CREATE TABLE compralibro ( id_usuario NUMBER ( 3 ) NOT NULL , id_libro NUMBER ( 3 ) NOT NULL , CONSTRAINT libro_usuario_pk PRIMARY KEY ( id_usuario , id_libro ), CONSTRAINT id_usuario_fk FOREIGN KEY ( id_usuario ) REFERENCES usuarios ( id ), CONSTRAINT id_libro_fk FOREIGN KEY ( id_libro ) REFERENCES libros ( id ) ); Tabla creada . Mostramos las tablas que acabamos de crear: SQL > select table_name from user_tables order by table_name ; TABLE_NAME -------------------------------------------------------------------------------- AUTORES COMPRALIBRO LIBROS USUARIOS Configuracion Acceso remoto Para configurar el acceso remoto haremos lo siguiente: Modifico el fichero de configuraci\u00f3n /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora y lo dejamos asi: Iniciamos lsnrctl: oracle @ oracle : ~ $ lsnrctl start LSNRCTL for Linux : Version 19 . 0 . 0 . 0 . 0 - Production on 30 - OCT - 2022 19 : 49 : 06 Copyright ( c ) 1991 , 2019 , Oracle . All rights reserved . TNS - 01106 : Listener using listener name LISTENER has already been started Reiniciamos el servicio y en el apartado de prueba conexion servidor oracle comprobamos que funciona. MariaDB Instalaci\u00f3n Primero actualizamos el sistema: sudo apt update -y && sudo apt upgrade -y Instalamos el paquete mariadb-server: sudo apt install -y mariadb-server Comprobamos el estado del servicio postgres para comprobar que funciona: Creaci\u00f3n de usuarios Crearemos el usuario joseju: MariaDB [( none )] > CREATE USER 'joseju' @ 'localhost' IDENTIFIED BY 'lolazo25' ; Query OK , 0 rows affected ( 0 . 006 sec ) Creaci\u00f3n Base de datos Ahora que hemos creado el usuario, procederemos a crear la base de datos. Haremos lo siguiente: Creamos la base de datos: MariaDB [( none )] > create database flask_login ; Query OK , 1 row affected ( 0 . 000 sec ) Le damos los privilegios al usuario que creamos anteriormente: MariaDB [( none )] > GRANT ALL ON flask_login . * TO 'joseju' @ 'localhost' ; Query OK , 0 rows affected ( 0 . 006 sec ) MariaDB [( none )] > FLUSH PRIVILEGES ; Query OK , 0 rows affected ( 0 . 001 sec ) - Accedemos a la base de datos a trav\u00e9s de nuestro usuario: root@escenario:~# mysql -u joseju -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g . Your MariaDB connection id is 31 Server version: 10 .5.15-MariaDB-0+deb11u1 Debian 11 Copyright ( c ) 2000 , 2018 , Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. MariaDB [( none )] > use flask_login ; Database changed MariaDB [ flask_login ] > Creamos las siguientes tablas: MariaDB [ flask_login ] > CREATE TABLE ` user ` ( -> ` id ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` username ` varchar ( 20 ) COLLATE utf8_unicode_ci NOT NULL , -> ` password ` char ( 102 ) COLLATE utf8_unicode_ci NOT NULL , -> ` fullname ` varchar ( 50 ) COLLATE utf8_unicode_ci NOT NULL , -> CONSTRAINT pk_id PRIMARY KEY ( id ) -> ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_unicode_ci COMMENT = 'Stores the user''s data.' ; Query OK , 0 rows affected , 1 warning ( 0 . 041 sec ) MariaDB [ flask_login ] > CREATE TABLE ` autor ` ( -> ` id ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` nombre ` varchar ( 20 ) COLLATE utf8_unicode_ci NOT NULL , -> ` apellidos ` varchar ( 20 ) COLLATE utf8_unicode_ci NOT NULL , -> CONSTRAINT pk_id_autor PRIMARY KEY ( id ) -> ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_unicode_ci COMMENT = 'Stores the author''s data.' ; Query OK , 0 rows affected , 1 warning ( 0 . 040 sec ) MariaDB [ flask_login ] > CREATE TABLE ` libro ` ( -> ` id ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` idautor ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` nombre ` varchar ( 20 ) COLLATE utf8_unicode_ci NOT NULL , -> CONSTRAINT pk_id_libro PRIMARY KEY ( id ), -> FOREIGN KEY ( idautor ) REFERENCES autor ( id ) -> ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_unicode_ci COMMENT = 'Stores the book''s data.' ; Query OK , 0 rows affected , 1 warning ( 0 . 049 sec ) MariaDB [ flask_login ] > CREATE TABLE ` compralibro ` ( -> ` idcliente ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` idlibro ` smallint ( 3 ) UNSIGNED NOT NULL , -> CONSTRAINT pk_ids PRIMARY KEY ( idcliente , idlibro ), -> FOREIGN KEY ( idcliente ) REFERENCES user ( id ), -> FOREIGN KEY ( idlibro ) REFERENCES libro ( id ) -> ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_unicode_ci COMMENT = 'Regitra la compras de los libros.' ; Query OK , 0 rows affected , 1 warning ( 0 . 062 sec ) - Mostramos las tablas que acabamos de crear: MariaDB [ flask_login ] > show tables ; + -----------------------+ | Tables_in_flask_login | + -----------------------+ | autor | | compralibro | | libro | | user | + -----------------------+ 4 rows in set ( 0 . 001 sec ) Configuracion Acceso remoto En este apartado configuraremos el acceso remoto al servidor mariadb, para ello haremos lo siguiente: Dentro del fichero /etc/mysql/mariadb.conf.d/50-server.cnf modifico la siguiente l\u00ednea: Reiniciamos el servicio y en el apartado de prueba conexion servidor mariadb comprobamos que funciona. Postgres Instalaci\u00f3n Primero actualizamos el sistema: sudo apt update -y && sudo apt upgrade -y Instalamos el paquete postgresql-13: sudo apt install -y postgresql-13 Comprobamos el estado del servicio postgres para comprobar que funciona: Creaci\u00f3n de usuarios Con el siguiente comando creamos al usuario joseju como un superusuario: sudo -u postgres createuser joseju --interactive -P Una vez hemos creado el usuario, habilitaremos el uso de contrase\u00f1a para poder acceder a mongo con autenticaci\u00f3n: Para activar el uso de contrase\u00f1a, cambiamos dentro del fichero de configuraci\u00f3n pg_hba.conf la siguiente directiva y cambiamos la palabra peer por md5: Una vez modificado, reiniciamos el servicio: systemctl reload postgresql Iniciamos postgres para ver si nos pide la contrase\u00f1a: Creaci\u00f3n Base de datos Ahora creamos una base de datos llamada libreria: Cambiamos a la base de datos recien creada: joseju =# \\ c libreria You are now connected to database \"libreria\" as user \"joseju\" . A continuaci\u00f3n crearemos las tablas de esta base de datos: libreria =# CREATE TABLE usuarios ( ID SERIAL PRIMARY KEY , NOMBRE varchar ( 20 ), PASSWORD char ( 102 ), FULLNAME varchar ( 50 ) ); CREATE TABLE libreria =# CREATE TABLE autor ( id SERIAL PRIMARY KEY , nombre varchar ( 20 ), apellidos varchar ( 20 ) ); CREATE TABLE libreria =# CREATE TABLE libros ( id SERIAL PRIMARY KEY , idautor SERIAL , nombre varchar ( 20 ), constraint FK_autor foreign key ( idautor ) references autor ( id ) ); CREATE TABLE libreria =# CREATE TABLE compralibro ( idcliente SERIAL , idlibro SERIAL , primary key ( idcliente , idlibro ), constraint FK_cliente foreign key ( idcliente ) references usuarios ( id ), constraint FK_libro foreign key ( idlibro ) references libros ( id ) ); CREATE TABLE Mostramos las tablas que acabamos de crear: libreria =# \\ dt List of relations Schema | Name | Type | Owner --------+-------------+-------+-------- public | autor | table | joseju public | compralibro | table | joseju public | libros | table | joseju public | usuarios | table | joseju ( 4 rows ) Configuraci\u00f3n Acceso remoto Para configurar el acceso remoto, debemos modificar dos ficheros, postgresql.conf y pg_hba.conf y modificar las siguientes l\u00edneas: En el fichero postgresql.conf indicamos la direcci\u00f3n IP de nuestro servidor: En el fichero ph_hba.conf_ habilitaremos el uso de contrase\u00f1a: Reiniciamos el servicio y en el apartado de prueba conexion servidor postgres comprobamos que funciona. MongoDB Instalaci\u00f3n En primer lugar instalamos las dependencias necesarias: apt-get install curl apt-transport-https software-properties-common gnupg2 -y Seguidamente, a\u00f1adimos la clave GPG y tambi\u00e9n a\u00f1adimos el repositorio de mongodb: wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\" | tee /etc/apt/sources.list.d/mongodb-org.list A continuaci\u00f3n, actualizamos el sistema e instalamos el paquete mongodb-org: sudo apt update -y && sudo apt install mongodb-org -y Ahora, iniciamos el servicio de mongo: sudo systemctl start mongod && sudo systemctl enable mongod Finalmente verificamos la version de mongo que hemos instalado: mongod --version Creaci\u00f3n de usuarios Por defecto, la autenticaci\u00f3n en mongodb no esta habilitada, as\u00ed que por razones de seguridad, habilitaremos la autentiaci\u00f3n. Para ello haremos lo siguiente: Primero iniciamos la shell de mongo: mongo Seguidamente modificamos una base de datos llamada admin: use admin Ahora, creamos nuestro usuario e introducimos una contrase\u00f1a: db.crea te User( { user : \"joseju\" , pwd : \"lolazo25\" , roles : [ { role : \"root\" , db : \"admin\" } ] } ) A continuaci\u00f3n, pulsamos ctrl+D para salir de mongo, y editamos el archivo de configuraci\u00f3n /etc/mongo.conf a\u00f1adiendo las siguientes l\u00edneas para activar la autenticaci\u00f3n: Reiniciamos mongo e intentamos acceder para ver si no pide las credenciales: Creaci\u00f3n Base de datos Procederemos a crear una base de datos llamada libreria con tres colecciones y con informaci\u00f3n variada, las colecciones que crearemos ser\u00e1n: usuario libro autor Dentro de la colecci\u00f3n usuario, almacenaremos los datos del usuario, su contrase\u00f1a para acceder al sistema, su nombre y su id. Dentro de la colecci\u00f3n libros, almacenaremos los datos de los libros, el nombre del libro, el autor que escribio el libro y su id. Dentro de la colecci\u00f3n autores, almacenaremos los datos de los autores, el nombre y apellidos del autor y su id. En mongo, las bases de datos que se crean son de tipo no relacionales, es decir, no se crean mediante tablas, claves... Sino mediante json. Lo primero que haremos para crear las colecciones: > use libreria ; switched to db libreria > db.createCollection ( \"usuarios\" ) { ok: 1 } > db.createCollection ( \"libros\" ) { ok: 1 } > db.createCollection ( \"autores\" ) { ok: 1 } Comprobamos que hemos creado los documentos: > show collections usuarios libros autores Insertamos los siguientes documentos: db.usuarios.i nsert Ma n y( [ { id : 1 , usuario : \"joseju\" , password : \"pbkdf2:sha256:260000$FHhIsLue8dRwFAIM$ef37e5b262fb3d687112e232cd47abf1ec83f4c653b7bcbf95fa3993298fb5df\" , fullna me : \"Jose Juan\" } ] ) db.libros.i nsert Ma n y( [ { id : 100 , n ombre : \"El Quijote\" , au t or : \"Cervantes\" } ] ) db.au t ores.i nsert Ma n y( [ { id : 1000 , au tna me : \"Cervantes\" , n ombre : \"Miguel\" , apellidos : \"Cervantes Saavedra\" } ] ) Compruebo que se ha a\u00f1adido todo correctamente: > db.usuarios.find () [ { _id: ObjectId ( \"635e7fe5024ab00ff3a1377c\" ) , id: 1 , usuario: 'joseju' , password: 'pbkdf2:sha256:260000$FHhIsLue8dRwFAIM$ef37e5b262fb3d687112e232cd47abf1ec83f4c653b7bcbf95fa3993298fb5df' , fullname: 'Jose Juan' } ] > db.libros.find () [ { _id: ObjectId ( \"635e838d024ab00ff3a1377d\" ) , id: 100 , nombre: 'El Quijote' , autor: 'Cervantes' } ] > db.autores.find () [ { _id: ObjectId ( \"635e8399024ab00ff3a1377e\" ) , id: 1000 , autname: 'Cervantes' , nombre: 'Miguel' , apellidos: 'Cervantes Saavedra' } ] Configuraci\u00f3n Acceso remoto Para la configuraci\u00f3n del acceso remoto haremos lo siguiente: Modificaremos el fichero de configuraci\u00f3n /etc/mongod.conf y en el par\u00e1metro e bindIp dentro del apartado net, establecemo el valor 0.0.0.0: Reiniciamos el servicio de mongo y comprobamos que funciona en el apartado de cliente remoto mongodb. Prueba Cliente Remoto MongoDB Dentro del cliente, a\u00f1adimos la clave gpg y repositorio de mongo, actualizamos los repositorios e instalamos el cliente remoto de mongodb, que en nuestro caso se llama mongosh: wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\" | tee /etc/apt/sources.list.d/mongodb-org.list sudo apt update && sudo apt install mongosh Una vez hemos instalado el cliente de mongo, ejecutamos el siguiente comando para conectarnos al servidor de mongo: mongosh --host 192 .168.1.42 -u joseju Realizaci\u00f3n de Aplicacion Web Realizaremos una aplicaci\u00f3n web escrita en python donde accederemos a la p\u00e1gina a trav\u00e9s de un usuario y una contrase\u00f1a almacenados en la base de datos que creamos anteriormente en mysql. Para ello vamos a hacer lo siguiente. Primero, creamos un entorno virtual donde realizaremos nuestra aplicaci\u00f3n web: python3 -m venv mysql Luego instalamos todos los paquetes necesarios para que la aplicaci\u00f3n funcione: pip install flask flask-login flask-mysqldb flask-WTF Despu\u00e9s, de haber instalado los paquetes, escribimos el c\u00f3digo que dejare en este repsoritorio de git: https://github.com/joseju10/app-bbdd Iniciamos el servicio mediante el siguiente comando: python3 app.py Accedemos a la p\u00e1gina e iniciamos sesi\u00f3n con el usuario y la contrase\u00f1a que a\u00f1adimos en la base de datos mariadb:","title":"Alumno 2: Jos\u00e9 Juan"},{"location":"p1-servidores-clientes/ri/alumno2/#alumno-2","text":"","title":"Alumno 2"},{"location":"p1-servidores-clientes/ri/alumno2/#oracle-19c","text":"","title":"Oracle 19c"},{"location":"p1-servidores-clientes/ri/alumno2/#instalacion","text":"Lo primero que debemos hacer es descargarnos desde la p\u00e1gina oficial de oracle el paquete .rpm y subirlo por scp a nuestro servidor, y una vez hecho eso, haremos lo siguiente: Instalamos alien y paquetes necesarios: apt install alien libaio1 unixodbc Ahora con alien, reconvertimos el fichero .rpm a dpkg, esto tardar\u00e1 un buen rato, depende del rendimiento que tengas en el sistema: alien --scripts -d oracle-database-ee-19c-1.0-1.x86_64.rpm Una vez ha terminado la reconversi\u00f3n, dentro del fichero /sbin/chkconfig, a\u00f1adimos lo siguiente: #!/bin/bash # Oracle 19c installer chkconfig hack file = /etc/init.d/oracle-19c if [[ ! ` tail -n1 $file | grep INIT ` ]] ; then echo >> $file echo '### BEGIN INIT INFO' >> $file echo '# Provides: Oracle 19c' >> $file echo '# Required-Start: $remote_fs $syslog' >> $file echo '# Required-Stop: $remote_fs $syslog' >> $file echo '# Default-Start: 2 3 4 5' >> $file echo '# Default-Stop: 0 1 6' >> $file echo '# Short-Description: Oracle 19c' >> $file echo '### END INIT INFO' >> $file fi update-rc.d oracle-19c defaults 80 01 Ahora le damos permisos al fichero: chmod 777 /sbin/chkconfig A\u00f1adimos lo siguiente al fichero /etc/sysctl.d/60-oracle.conf para configurar los par\u00e1metros del kernel: # Oracle 19c kernel parameters fs.file-max = 6815744 net.ipv4.ip_local_port_range = 9000 65000 kernel.sem = 250 32000 100 128 kernel.shmmax = 536870912 Arrancamos el servicio procps: systemctl start procps A\u00f1adimos el siguiente contenido al fichero /etc/rc2.d/S01shm_load: #!/bin/sh case \" $1 \" in start ) mkdir /var/lock/subsys 2 >/dev/null touch /var/lock/subsys/listener rm /dev/shm 2 >/dev/null mkdir /dev/shm 2 >/dev/null mount -t tmpfs shmfs -o size = 2048m /dev/shm ;; * ) echo error exit 1 ;; esac Le damos permisos: chmod 777 /etc/rc2.d/S01shm_load Reiniciamos el sistema: reboot Instalamos el paquete .deb que reconvertimos anteriormente: dpkg --install oracle-database-ee-19c_1.0-2_amd64.deb Una vez instalado, a\u00f1adimos el par\u00e1metro -J-Doracle.assistants.dbca.validate.ConfigurationParams=false dentro de /etc/init.d/oracledb_ORCLCDB-19c: Ahora, ejecutamos el siguiente comando para configurar oracle: root@escenario:~# /etc/init.d/oracledb_ORCLCDB-19c configure Dentro de bashrc a\u00f1ado las siguientes variables de entorno: # Oracle environment variables export ORACLE_HOME = /opt/oracle/product/19c/dbhome_1 export ORACLE_SID = ORCLCDB export NLS_LANG = ` $ORACLE_HOME /bin/nls_lang.sh ` export ORACLE_BASE = /opt/oracle export LD_LIBRARY_PATH = $ORACLE_HOME /lib: $LD_LIBRARY_PATH export PATH = $ORACLE_HOME /bin: $PATH Reinciamos la m\u00e1quina: reboot Iniciamos el servicio de oracle: sudo systemctl start oracledb_ORCLCDB-19c Finalmente accedemos a oracle: oracle @ oracle : ~ $ sqlplus / as sysdba SQL * Plus : Release 19 . 0 . 0 . 0 . 0 - Production on Sun Oct 30 19 : 26 : 55 2022 Version 19 . 3 . 0 . 0 . 0 Copyright ( c ) 1982 , 2019 , Oracle . All rights reserved . Conectado a : Oracle Database 19 c Enterprise Edition Release 19 . 0 . 0 . 0 . 0 - Production Version 19 . 3 . 0 . 0 . 0 SQL >","title":"Instalaci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno2/#creacion-de-usuarios","text":"Para crear un usuario hacemos lo siguiente: Creamos el usuario con contrase\u00f1a y le damos permisos: SQL > create user joseju identified by lolazo25 ; Usuario creado . SQL > grant all privileges to joseju ; Concesion terminada correctamente . Accedemos a oracle con el usuario que hemos creado para comprobar que todo funciona correctamente: oracle @ oracle : ~ $ sqlplus joseju SQL * Plus : Release 19 . 0 . 0 . 0 . 0 - Production on Sun Oct 30 19 : 32 : 38 2022 Version 19 . 3 . 0 . 0 . 0 Copyright ( c ) 1982 , 2019 , Oracle . All rights reserved . Enter password : Conectado a : Oracle Database 19 c Enterprise Edition Release 19 . 0 . 0 . 0 . 0 - Production Version 19 . 3 . 0 . 0 . 0 SQL >","title":"Creaci\u00f3n de usuarios"},{"location":"p1-servidores-clientes/ri/alumno2/#creacion-base-de-datos","text":"Creamos las siguientes tablas: SQL > CREATE TABLE usuarios ( id NUMBER ( 3 ) NOT NULL , nombre VARCHAR2 ( 20 ) NOT NULL , password char ( 102 ) NOT NULL , fullname VARCHAR2 ( 50 ), CONSTRAINT usuarios_pk PRIMARY KEY ( id ) ); Tabla creada . SQL > CREATE TABLE autores ( id NUMBER ( 3 ) NOT NULL , nombre VARCHAR2 ( 20 ) NOT NULL , apellidos VARCHAR2 ( 50 ) NOT NULL , CONSTRAINT autor_pk PRIMARY KEY ( id ) ); Tabla creada . SQL > CREATE TABLE libros ( id NUMBER ( 3 ) NOT NULL , id_autor NUMBER ( 3 ) NOT NULL , nombre VARCHAR2 ( 20 ) NOT NULL , CONSTRAINT libros_pk PRIMARY KEY ( id ), CONSTRAINT id_autor_fk FOREIGN KEY ( id_autor ) REFERENCES autores ( id ) ); Tabla creada . SQL > CREATE TABLE compralibro ( id_usuario NUMBER ( 3 ) NOT NULL , id_libro NUMBER ( 3 ) NOT NULL , CONSTRAINT libro_usuario_pk PRIMARY KEY ( id_usuario , id_libro ), CONSTRAINT id_usuario_fk FOREIGN KEY ( id_usuario ) REFERENCES usuarios ( id ), CONSTRAINT id_libro_fk FOREIGN KEY ( id_libro ) REFERENCES libros ( id ) ); Tabla creada . Mostramos las tablas que acabamos de crear: SQL > select table_name from user_tables order by table_name ; TABLE_NAME -------------------------------------------------------------------------------- AUTORES COMPRALIBRO LIBROS USUARIOS","title":"Creaci\u00f3n Base de datos"},{"location":"p1-servidores-clientes/ri/alumno2/#configuracion-acceso-remoto","text":"Para configurar el acceso remoto haremos lo siguiente: Modifico el fichero de configuraci\u00f3n /opt/oracle/product/19c/dbhome_1/network/admin/listener.ora y lo dejamos asi: Iniciamos lsnrctl: oracle @ oracle : ~ $ lsnrctl start LSNRCTL for Linux : Version 19 . 0 . 0 . 0 . 0 - Production on 30 - OCT - 2022 19 : 49 : 06 Copyright ( c ) 1991 , 2019 , Oracle . All rights reserved . TNS - 01106 : Listener using listener name LISTENER has already been started Reiniciamos el servicio y en el apartado de prueba conexion servidor oracle comprobamos que funciona.","title":"Configuracion Acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno2/#mariadb","text":"","title":"MariaDB"},{"location":"p1-servidores-clientes/ri/alumno2/#instalacion_1","text":"Primero actualizamos el sistema: sudo apt update -y && sudo apt upgrade -y Instalamos el paquete mariadb-server: sudo apt install -y mariadb-server Comprobamos el estado del servicio postgres para comprobar que funciona:","title":"Instalaci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno2/#creacion-de-usuarios_1","text":"Crearemos el usuario joseju: MariaDB [( none )] > CREATE USER 'joseju' @ 'localhost' IDENTIFIED BY 'lolazo25' ; Query OK , 0 rows affected ( 0 . 006 sec )","title":"Creaci\u00f3n de usuarios"},{"location":"p1-servidores-clientes/ri/alumno2/#creacion-base-de-datos_1","text":"Ahora que hemos creado el usuario, procederemos a crear la base de datos. Haremos lo siguiente: Creamos la base de datos: MariaDB [( none )] > create database flask_login ; Query OK , 1 row affected ( 0 . 000 sec ) Le damos los privilegios al usuario que creamos anteriormente: MariaDB [( none )] > GRANT ALL ON flask_login . * TO 'joseju' @ 'localhost' ; Query OK , 0 rows affected ( 0 . 006 sec ) MariaDB [( none )] > FLUSH PRIVILEGES ; Query OK , 0 rows affected ( 0 . 001 sec ) - Accedemos a la base de datos a trav\u00e9s de nuestro usuario: root@escenario:~# mysql -u joseju -p Enter password: Welcome to the MariaDB monitor. Commands end with ; or \\g . Your MariaDB connection id is 31 Server version: 10 .5.15-MariaDB-0+deb11u1 Debian 11 Copyright ( c ) 2000 , 2018 , Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement. MariaDB [( none )] > use flask_login ; Database changed MariaDB [ flask_login ] > Creamos las siguientes tablas: MariaDB [ flask_login ] > CREATE TABLE ` user ` ( -> ` id ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` username ` varchar ( 20 ) COLLATE utf8_unicode_ci NOT NULL , -> ` password ` char ( 102 ) COLLATE utf8_unicode_ci NOT NULL , -> ` fullname ` varchar ( 50 ) COLLATE utf8_unicode_ci NOT NULL , -> CONSTRAINT pk_id PRIMARY KEY ( id ) -> ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_unicode_ci COMMENT = 'Stores the user''s data.' ; Query OK , 0 rows affected , 1 warning ( 0 . 041 sec ) MariaDB [ flask_login ] > CREATE TABLE ` autor ` ( -> ` id ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` nombre ` varchar ( 20 ) COLLATE utf8_unicode_ci NOT NULL , -> ` apellidos ` varchar ( 20 ) COLLATE utf8_unicode_ci NOT NULL , -> CONSTRAINT pk_id_autor PRIMARY KEY ( id ) -> ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_unicode_ci COMMENT = 'Stores the author''s data.' ; Query OK , 0 rows affected , 1 warning ( 0 . 040 sec ) MariaDB [ flask_login ] > CREATE TABLE ` libro ` ( -> ` id ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` idautor ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` nombre ` varchar ( 20 ) COLLATE utf8_unicode_ci NOT NULL , -> CONSTRAINT pk_id_libro PRIMARY KEY ( id ), -> FOREIGN KEY ( idautor ) REFERENCES autor ( id ) -> ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_unicode_ci COMMENT = 'Stores the book''s data.' ; Query OK , 0 rows affected , 1 warning ( 0 . 049 sec ) MariaDB [ flask_login ] > CREATE TABLE ` compralibro ` ( -> ` idcliente ` smallint ( 3 ) UNSIGNED NOT NULL , -> ` idlibro ` smallint ( 3 ) UNSIGNED NOT NULL , -> CONSTRAINT pk_ids PRIMARY KEY ( idcliente , idlibro ), -> FOREIGN KEY ( idcliente ) REFERENCES user ( id ), -> FOREIGN KEY ( idlibro ) REFERENCES libro ( id ) -> ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COLLATE = utf8_unicode_ci COMMENT = 'Regitra la compras de los libros.' ; Query OK , 0 rows affected , 1 warning ( 0 . 062 sec ) - Mostramos las tablas que acabamos de crear: MariaDB [ flask_login ] > show tables ; + -----------------------+ | Tables_in_flask_login | + -----------------------+ | autor | | compralibro | | libro | | user | + -----------------------+ 4 rows in set ( 0 . 001 sec )","title":"Creaci\u00f3n Base de datos"},{"location":"p1-servidores-clientes/ri/alumno2/#configuracion-acceso-remoto_1","text":"En este apartado configuraremos el acceso remoto al servidor mariadb, para ello haremos lo siguiente: Dentro del fichero /etc/mysql/mariadb.conf.d/50-server.cnf modifico la siguiente l\u00ednea: Reiniciamos el servicio y en el apartado de prueba conexion servidor mariadb comprobamos que funciona.","title":"Configuracion Acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno2/#postgres","text":"","title":"Postgres"},{"location":"p1-servidores-clientes/ri/alumno2/#instalacion_2","text":"Primero actualizamos el sistema: sudo apt update -y && sudo apt upgrade -y Instalamos el paquete postgresql-13: sudo apt install -y postgresql-13 Comprobamos el estado del servicio postgres para comprobar que funciona:","title":"Instalaci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno2/#creacion-de-usuarios_2","text":"Con el siguiente comando creamos al usuario joseju como un superusuario: sudo -u postgres createuser joseju --interactive -P Una vez hemos creado el usuario, habilitaremos el uso de contrase\u00f1a para poder acceder a mongo con autenticaci\u00f3n: Para activar el uso de contrase\u00f1a, cambiamos dentro del fichero de configuraci\u00f3n pg_hba.conf la siguiente directiva y cambiamos la palabra peer por md5: Una vez modificado, reiniciamos el servicio: systemctl reload postgresql Iniciamos postgres para ver si nos pide la contrase\u00f1a:","title":"Creaci\u00f3n de usuarios"},{"location":"p1-servidores-clientes/ri/alumno2/#creacion-base-de-datos_2","text":"Ahora creamos una base de datos llamada libreria: Cambiamos a la base de datos recien creada: joseju =# \\ c libreria You are now connected to database \"libreria\" as user \"joseju\" . A continuaci\u00f3n crearemos las tablas de esta base de datos: libreria =# CREATE TABLE usuarios ( ID SERIAL PRIMARY KEY , NOMBRE varchar ( 20 ), PASSWORD char ( 102 ), FULLNAME varchar ( 50 ) ); CREATE TABLE libreria =# CREATE TABLE autor ( id SERIAL PRIMARY KEY , nombre varchar ( 20 ), apellidos varchar ( 20 ) ); CREATE TABLE libreria =# CREATE TABLE libros ( id SERIAL PRIMARY KEY , idautor SERIAL , nombre varchar ( 20 ), constraint FK_autor foreign key ( idautor ) references autor ( id ) ); CREATE TABLE libreria =# CREATE TABLE compralibro ( idcliente SERIAL , idlibro SERIAL , primary key ( idcliente , idlibro ), constraint FK_cliente foreign key ( idcliente ) references usuarios ( id ), constraint FK_libro foreign key ( idlibro ) references libros ( id ) ); CREATE TABLE Mostramos las tablas que acabamos de crear: libreria =# \\ dt List of relations Schema | Name | Type | Owner --------+-------------+-------+-------- public | autor | table | joseju public | compralibro | table | joseju public | libros | table | joseju public | usuarios | table | joseju ( 4 rows )","title":"Creaci\u00f3n Base de datos"},{"location":"p1-servidores-clientes/ri/alumno2/#configuracion-acceso-remoto_2","text":"Para configurar el acceso remoto, debemos modificar dos ficheros, postgresql.conf y pg_hba.conf y modificar las siguientes l\u00edneas: En el fichero postgresql.conf indicamos la direcci\u00f3n IP de nuestro servidor: En el fichero ph_hba.conf_ habilitaremos el uso de contrase\u00f1a: Reiniciamos el servicio y en el apartado de prueba conexion servidor postgres comprobamos que funciona.","title":"Configuraci\u00f3n Acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno2/#mongodb","text":"","title":"MongoDB"},{"location":"p1-servidores-clientes/ri/alumno2/#instalacion_3","text":"En primer lugar instalamos las dependencias necesarias: apt-get install curl apt-transport-https software-properties-common gnupg2 -y Seguidamente, a\u00f1adimos la clave GPG y tambi\u00e9n a\u00f1adimos el repositorio de mongodb: wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\" | tee /etc/apt/sources.list.d/mongodb-org.list A continuaci\u00f3n, actualizamos el sistema e instalamos el paquete mongodb-org: sudo apt update -y && sudo apt install mongodb-org -y Ahora, iniciamos el servicio de mongo: sudo systemctl start mongod && sudo systemctl enable mongod Finalmente verificamos la version de mongo que hemos instalado: mongod --version","title":"Instalaci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno2/#creacion-de-usuarios_3","text":"Por defecto, la autenticaci\u00f3n en mongodb no esta habilitada, as\u00ed que por razones de seguridad, habilitaremos la autentiaci\u00f3n. Para ello haremos lo siguiente: Primero iniciamos la shell de mongo: mongo Seguidamente modificamos una base de datos llamada admin: use admin Ahora, creamos nuestro usuario e introducimos una contrase\u00f1a: db.crea te User( { user : \"joseju\" , pwd : \"lolazo25\" , roles : [ { role : \"root\" , db : \"admin\" } ] } ) A continuaci\u00f3n, pulsamos ctrl+D para salir de mongo, y editamos el archivo de configuraci\u00f3n /etc/mongo.conf a\u00f1adiendo las siguientes l\u00edneas para activar la autenticaci\u00f3n: Reiniciamos mongo e intentamos acceder para ver si no pide las credenciales:","title":"Creaci\u00f3n de usuarios"},{"location":"p1-servidores-clientes/ri/alumno2/#creacion-base-de-datos_3","text":"Procederemos a crear una base de datos llamada libreria con tres colecciones y con informaci\u00f3n variada, las colecciones que crearemos ser\u00e1n: usuario libro autor Dentro de la colecci\u00f3n usuario, almacenaremos los datos del usuario, su contrase\u00f1a para acceder al sistema, su nombre y su id. Dentro de la colecci\u00f3n libros, almacenaremos los datos de los libros, el nombre del libro, el autor que escribio el libro y su id. Dentro de la colecci\u00f3n autores, almacenaremos los datos de los autores, el nombre y apellidos del autor y su id. En mongo, las bases de datos que se crean son de tipo no relacionales, es decir, no se crean mediante tablas, claves... Sino mediante json. Lo primero que haremos para crear las colecciones: > use libreria ; switched to db libreria > db.createCollection ( \"usuarios\" ) { ok: 1 } > db.createCollection ( \"libros\" ) { ok: 1 } > db.createCollection ( \"autores\" ) { ok: 1 } Comprobamos que hemos creado los documentos: > show collections usuarios libros autores Insertamos los siguientes documentos: db.usuarios.i nsert Ma n y( [ { id : 1 , usuario : \"joseju\" , password : \"pbkdf2:sha256:260000$FHhIsLue8dRwFAIM$ef37e5b262fb3d687112e232cd47abf1ec83f4c653b7bcbf95fa3993298fb5df\" , fullna me : \"Jose Juan\" } ] ) db.libros.i nsert Ma n y( [ { id : 100 , n ombre : \"El Quijote\" , au t or : \"Cervantes\" } ] ) db.au t ores.i nsert Ma n y( [ { id : 1000 , au tna me : \"Cervantes\" , n ombre : \"Miguel\" , apellidos : \"Cervantes Saavedra\" } ] ) Compruebo que se ha a\u00f1adido todo correctamente: > db.usuarios.find () [ { _id: ObjectId ( \"635e7fe5024ab00ff3a1377c\" ) , id: 1 , usuario: 'joseju' , password: 'pbkdf2:sha256:260000$FHhIsLue8dRwFAIM$ef37e5b262fb3d687112e232cd47abf1ec83f4c653b7bcbf95fa3993298fb5df' , fullname: 'Jose Juan' } ] > db.libros.find () [ { _id: ObjectId ( \"635e838d024ab00ff3a1377d\" ) , id: 100 , nombre: 'El Quijote' , autor: 'Cervantes' } ] > db.autores.find () [ { _id: ObjectId ( \"635e8399024ab00ff3a1377e\" ) , id: 1000 , autname: 'Cervantes' , nombre: 'Miguel' , apellidos: 'Cervantes Saavedra' } ]","title":"Creaci\u00f3n Base de datos"},{"location":"p1-servidores-clientes/ri/alumno2/#configuracion-acceso-remoto_3","text":"Para la configuraci\u00f3n del acceso remoto haremos lo siguiente: Modificaremos el fichero de configuraci\u00f3n /etc/mongod.conf y en el par\u00e1metro e bindIp dentro del apartado net, establecemo el valor 0.0.0.0: Reiniciamos el servicio de mongo y comprobamos que funciona en el apartado de cliente remoto mongodb.","title":"Configuraci\u00f3n Acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno2/#prueba-cliente-remoto-mongodb","text":"Dentro del cliente, a\u00f1adimos la clave gpg y repositorio de mongo, actualizamos los repositorios e instalamos el cliente remoto de mongodb, que en nuestro caso se llama mongosh: wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\" | tee /etc/apt/sources.list.d/mongodb-org.list sudo apt update && sudo apt install mongosh Una vez hemos instalado el cliente de mongo, ejecutamos el siguiente comando para conectarnos al servidor de mongo: mongosh --host 192 .168.1.42 -u joseju","title":"Prueba Cliente Remoto MongoDB"},{"location":"p1-servidores-clientes/ri/alumno2/#realizacion-de-aplicacion-web","text":"Realizaremos una aplicaci\u00f3n web escrita en python donde accederemos a la p\u00e1gina a trav\u00e9s de un usuario y una contrase\u00f1a almacenados en la base de datos que creamos anteriormente en mysql. Para ello vamos a hacer lo siguiente. Primero, creamos un entorno virtual donde realizaremos nuestra aplicaci\u00f3n web: python3 -m venv mysql Luego instalamos todos los paquetes necesarios para que la aplicaci\u00f3n funcione: pip install flask flask-login flask-mysqldb flask-WTF Despu\u00e9s, de haber instalado los paquetes, escribimos el c\u00f3digo que dejare en este repsoritorio de git: https://github.com/joseju10/app-bbdd Iniciamos el servicio mediante el siguiente comando: python3 app.py Accedemos a la p\u00e1gina e iniciamos sesi\u00f3n con el usuario y la contrase\u00f1a que a\u00f1adimos en la base de datos mariadb:","title":"Realizaci\u00f3n de Aplicacion Web"},{"location":"p1-servidores-clientes/ri/alumno3/","text":"Alumno 3. Arantxa Fern\u00e1ndez Morat\u00f3 Antes de empezar comentar que la m\u00e1quina servidor de todas las bases de datos ser\u00e1 siempre la misma, una m\u00e1quina con Debian 11 llamada \"debian-oracle\" . Y la maquina cliente se llama \"debianprueba\" . Durante las conexiones remotas se puede apreciar en las capturas el nombre de las m\u00e1quinas. 1. MySQL 1.1 Instalaci\u00f3n En el servidor actualizamos los repositorios e instalamos gnupg y wget , si no estuvieran ya instalados. sudo apt update sudo apt install -y gnupg wget Utilizando wget descargamos el paquete de mysql del repositorio oficial. wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb Procedemmos a instalar el paquete descargado. sudo dpkg -i mysql-apt-config_0.8.22-1_all.deb Nos aparecer\u00e1 una ventana que nos muestra la versi\u00f3n de MySQL que se instalar\u00e1, nos informa de que las herramientas y conectores est\u00e1n activados y la opci\u00f3n de software de prueba est\u00e1 desactivada. Presionamos Aceptar para continuar. Volvemos a actualizar los repositorios. sudo apt update Ya podremos instalar MySQL server en Debian 11. sudo apt install -y mysql-server Durante la instalaci\u00f3n nos preguntar\u00e1 la contrase\u00f1a del usuario administrador root. Nos aparece un menje de disponibilidad de un nuevo plugin de autenticaci\u00f3n. Presionamos Acepta . Dejamos seleccionado el plugin de autenticaci\u00f3n recomendado. Terminada la instalaci\u00f3n pasaremos a entrar con el usuario root. mysql -u root -p 1.2 Creaci\u00f3n usuario Creamos un usuario y contrase\u00f1a para el administrador de las bases de datos que se creen. create user 'admin'@'%' identified by 'admin'; Le damos todos los privilegios. grant all privileges on *.* to admin with grant option; flush privileges; 1.3 Creaci\u00f3n base de datos create database maravilla; Me conecto a la base de datos con el usuario creado anteriormente. use maravilla 1.4 Creaci\u00f3n tablas e inserci\u00f3n de datos He creado las tablas 'pelicula', 'actor' y 'pelicula_actor'. create table actor ( codigo varchar (5), nombre varchar (15), apellido varchar (15), fechanac date, constraint pk_actor primary key (codigo) ); create table pelicula ( codigo varchar (5), titulo varchar (30), fecha_estreno date, puntuacion decimal (3,1), lengua_original varchar (3), constraint pk_pelicula primary key (codigo), constraint puntuacion_ck check (puntuacion between 0 and 10) ); create table pelicula_actor ( codigo_actor varchar (5), codigo_pelicula varchar (5), tipo_personaje enum ('Principal','Secundario'), constraint pk_pelicula_actor primary key (codigo_actor,codigo_pelicula), constraint fk_codigo_actor foreign key (codigo_actor) references actor (codigo), constraint fk_codigo_pelicula foreign key (codigo_pelicula) references pelicula (codigo) ); Y he a\u00f1adido los siguientes inserts: insert into pelicula values ('MA001', 'Iron Man', '2008-05-02', 7.9, 'EN'); insert into pelicula values ('MA002', 'Thor', '2011-05-06', 7.0, 'EN'); insert into pelicula values ('MA003', 'Captain America: the first avenger', '2011-07-22', 6.9, 'EN'); insert into pelicula values ('MA004', 'The Avengers', '2012-05-04', 8, 'EN'); insert into pelicula values ('MA005', 'Guardians of the Galaxy', '2014-08-01', 8, 'EN'); insert into pelicula values ('MA006', 'Avengers: Age of Ultron', '2015-05-01', 7.3, 'EN'); insert into pelicula values ('MA007', 'Doctor Strange', '2016-11-04', 7.5, 'EN'); insert into pelicula values ('MA008', 'Spider-Man: Homecoming', '2017-07-07', 7.4, 'EN'); insert into pelicula values ('MA009', 'Black Panther', '2018-02-16', 7.3, 'EN'); insert into pelicula values ('MA010', 'Avengers: Infinity War', '2018-04-27', 8.4, 'EN'); insert into pelicula values ('MA011', 'Avengers: Endgame', '2019-04-26', 8.4, 'EN'); insert into actor values ('001','Robert', 'Downey', '1965-04-04'); insert into actor values ('002','Jon', 'Favreau', '1966-10-19'); insert into actor values ('003','Chris', 'Hemsworth', '1983-08-11'); insert into actor values ('004','Tom', 'Hiddleston', '1981-02-09'); insert into actor values ('005','Natalie', 'Portman', '1981-06-09'); insert into actor values ('006','Chris', 'Evans', '1981-06-13'); insert into actor values ('007','Sebastian', 'Stan', '1982-08-13'); insert into actor values ('008','Jeremy', 'Renner', '1971-01-07'); insert into actor values ('009','Scarlett', 'Johansson', '1984-11-22'); insert into actor values ('010','Mark', 'Ruffalo', '1967-11-22'); insert into actor values ('011','Clark', 'Gregg', '1962-04-02'); insert into actor values ('012','Samuel L.', 'Jackson', '1948-12-21'); insert into actor values ('013','Chris', 'Pratt', '1979-06-21'); insert into actor values ('014','Zoe', 'Salda\u00f1a', '1978-06-19'); insert into actor values ('015','Dave', 'Bautista', '1969-01-18'); insert into actor values ('016','Vin', 'Diesel', '1967-07-18'); insert into actor values ('017','Bradley', 'Cooper', '1975-01-05'); insert into actor values ('018','Michael', 'Rooker', '1955-04-06'); insert into actor values ('019','Elisabeth', 'Olsen', '1989-02-16'); insert into actor values ('020','Paul', 'Bettany', '1971-05-27'); insert into actor values ('021','Anthony', 'Mackie', '1978-09-23'); insert into actor values ('022','Bennedict', 'Cumberbatch', '1976-07-19'); insert into actor values ('023','Rachel', 'McAdams', '1978-11-17'); insert into actor values ('024','Tom', 'Holland', '1996-06-01'); insert into actor values ('025','Zendaya', 'Coleman', '1996-09-01'); insert into actor values ('026','Chadwick', 'Boseman', '1976-11-29'); insert into actor values ('027','Josh', 'Brolin', '1968-02-12'); insert into actor values ('028','Brie', 'Larson', '1989-10-01'); insert into pelicula_actor values ('001', 'MA001', 'Principal'); insert into pelicula_actor values ('002', 'MA001', 'Secundario'); insert into pelicula_actor values ('003', 'MA002', 'Principal'); insert into pelicula_actor values ('004', 'MA002', 'Principal'); insert into pelicula_actor values ('005', 'MA002', 'Principal'); insert into pelicula_actor values ('006', 'MA003', 'Principal'); insert into pelicula_actor values ('007', 'MA003', 'Secundario'); insert into pelicula_actor values ('001', 'MA004', 'Principal'); insert into pelicula_actor values ('002', 'MA004', 'Secundario'); insert into pelicula_actor values ('003', 'MA004', 'Principal'); insert into pelicula_actor values ('004', 'MA004', 'Principal'); insert into pelicula_actor values ('006', 'MA004', 'Principal'); insert into pelicula_actor values ('008', 'MA004', 'Principal'); insert into pelicula_actor values ('009', 'MA004', 'Principal'); insert into pelicula_actor values ('010', 'MA004', 'Principal'); insert into pelicula_actor values ('011', 'MA004', 'Secundario'); insert into pelicula_actor values ('012', 'MA004', 'Principal'); insert into pelicula_actor values ('013', 'MA005', 'Principal'); insert into pelicula_actor values ('014', 'MA005', 'Principal'); insert into pelicula_actor values ('015', 'MA005', 'Principal'); insert into pelicula_actor values ('016', 'MA005', 'Principal'); insert into pelicula_actor values ('017', 'MA005', 'Principal'); insert into pelicula_actor values ('018', 'MA005', 'Secundario'); insert into pelicula_actor values ('001', 'MA006', 'Principal'); insert into pelicula_actor values ('003', 'MA006', 'Principal'); insert into pelicula_actor values ('006', 'MA006', 'Principal'); insert into pelicula_actor values ('008', 'MA006', 'Principal'); insert into pelicula_actor values ('009', 'MA006', 'Principal'); insert into pelicula_actor values ('010', 'MA006', 'Principal'); insert into pelicula_actor values ('019', 'MA006', 'Principal'); insert into pelicula_actor values ('020', 'MA006', 'Principal'); insert into pelicula_actor values ('022', 'MA007', 'Principal'); insert into pelicula_actor values ('023', 'MA007', 'Secundario'); insert into pelicula_actor values ('024', 'MA008', 'Principal'); insert into pelicula_actor values ('025', 'MA008', 'Principal'); insert into pelicula_actor values ('001', 'MA008', 'Secundario'); insert into pelicula_actor values ('002', 'MA008', 'Secundario'); insert into pelicula_actor values ('026', 'MA009', 'Principal'); insert into pelicula_actor values ('027', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA010', 'Principal'); insert into pelicula_actor values ('003', 'MA010', 'Principal'); insert into pelicula_actor values ('004', 'MA010', 'Secundario'); insert into pelicula_actor values ('006', 'MA010', 'Principal'); insert into pelicula_actor values ('007', 'MA010', 'Secundario'); insert into pelicula_actor values ('009', 'MA010', 'Principal'); insert into pelicula_actor values ('010', 'MA010', 'Principal'); insert into pelicula_actor values ('012', 'MA010', 'Secundario'); insert into pelicula_actor values ('013', 'MA010', 'Principal'); insert into pelicula_actor values ('014', 'MA010', 'Principal'); insert into pelicula_actor values ('015', 'MA010', 'Principal'); insert into pelicula_actor values ('016', 'MA010', 'Principal'); insert into pelicula_actor values ('017', 'MA010', 'Principal'); insert into pelicula_actor values ('019', 'MA010', 'Principal'); insert into pelicula_actor values ('020', 'MA010', 'Principal'); insert into pelicula_actor values ('021', 'MA010', 'Secundario'); insert into pelicula_actor values ('022', 'MA010', 'Principal'); insert into pelicula_actor values ('024', 'MA010', 'Principal'); insert into pelicula_actor values ('026', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA011', 'Principal'); insert into pelicula_actor values ('003', 'MA011', 'Principal'); insert into pelicula_actor values ('006', 'MA011', 'Principal'); insert into pelicula_actor values ('008', 'MA011', 'Principal'); insert into pelicula_actor values ('009', 'MA011', 'Principal'); insert into pelicula_actor values ('010', 'MA011', 'Principal'); insert into pelicula_actor values ('027', 'MA011', 'Principal'); insert into pelicula_actor values ('007', 'MA011', 'Secundario'); insert into pelicula_actor values ('013', 'MA011', 'Secundario'); insert into pelicula_actor values ('014', 'MA011', 'Secundario'); insert into pelicula_actor values ('015', 'MA011', 'Secundario'); insert into pelicula_actor values ('016', 'MA011', 'Secundario'); insert into pelicula_actor values ('017', 'MA011', 'Secundario'); insert into pelicula_actor values ('019', 'MA011', 'Secundario'); insert into pelicula_actor values ('021', 'MA011', 'Secundario'); insert into pelicula_actor values ('022', 'MA011', 'Secundario'); insert into pelicula_actor values ('024', 'MA011', 'Secundario'); insert into pelicula_actor values ('026', 'MA011', 'Secundario'); insert into pelicula_actor values ('028', 'MA011', 'Secundario'); Se puede comprobar las tablas creadas con show tables; . Y los datos a\u00f1adidos a cada tabla con select . 1.5 Acceso remoto El puerto 3306 es en el que trabaja MySQL por defecto. Para especificar al firewall qu\u00e9 ip puede acceder al servidor de base de datos hacemos lo siguiente: sudo ufw allow from ip_cliente to any port 3306 Pero en mi caso, teniendo en cuenta que estamos en un entorno de prueba, permitir\u00e9 que se pueda acceder desde cualquier ip. sudo ufw allow 3306 Para verificar la conexi\u00f3n remota accedemos desde otra m\u00e1quina al servidor de la siguiente forma. Accederemos con el usuario admin, y en mi caso he utilizado una m\u00e1quina virtual en la que ya ten\u00eda instalado mariadb. mysql -u admin -h ip_servidor -p 2. PostgreSQL 2.1 Instalaci\u00f3n Instalamos PostgreSQL en Debian 11 directamente con apt . sudo apt install postgresql Para entrar con el usuario postgres . sudo su postgres psql Tambi\u00e9n se puede usar: sudo -u postgres psql 2.2 Creaci\u00f3n usuario Se puede hacer de dos formas: Opci\u00f3n 1: Hacemos 'sudo su postgres' y seguidamente creamos el nuevo usuario con createuser . createuser admin Entramos en psql y se le asigna una contrase\u00f1a cifrada. alter user admin with encrypted password 'admin'; Opci\u00f3n 2: Entramos directamente a psql y usamos el siguiente comando: create user admin with encrypted password 'admin'; Para borrar un usuario: drop user admin; En psql con \\du podemos ver los usuarios creados. 2.3 Creaci\u00f3n base de datos Para crear la base de datos tambi\u00e9n se puede hacer de dos formas: Opci\u00f3n 1: Desde el usuario postgres: sudo su postgres createdb maravilla Opci\u00f3n 2: Directamente desde psql: create database maravilla; Podemos ver las bases de datos creadas con: \\l Le damos permisos al usuario admin sobre la base de datos creada. grant all privileges on database maravilla to admin; 2.4 Creaci\u00f3n tablas e inserci\u00f3n de datos Nos conectamos a la base de datos maravilla : \\c maravilla Creo las tablas. create table actor ( codigo varchar (5), nombre varchar (15), apellido varchar (15), fechanac date, constraint pk_actor primary key (codigo) ); create table pelicula ( codigo varchar (5), titulo varchar (30), fecha_estreno date, puntuacion decimal (3,1), lengua_original varchar (3), constraint pk_pelicula primary key (codigo), constraint puntuacion_ck check (puntuacion between 0 and 10) ); create table pelicula_actor ( codigo_actor varchar (5), codigo_pelicula varchar (5), tipo_personaje varchar (15), constraint pk_pelicula_actor primary key (codigo_actor,codigo_pelicula), constraint fk_codigo_actor foreign key (codigo_actor) references actor (codigo), constraint fk_codigo_pelicula foreign key (codigo_pelicula) references pelicula (codigo), constraint tipo_ck check (tipo_personaje in ('Principal','Secundario')) ); Inserto los datos. insert into pelicula values ('MA001', 'Iron Man', '2008-05-02', 7.9, 'EN'); insert into pelicula values ('MA002', 'Thor', '2011-05-06', 7.0, 'EN'); insert into pelicula values ('MA003', 'Captain America:first avenger', '2011-07-22', 6.9, 'EN'); insert into pelicula values ('MA004', 'The Avengers', '2012-05-04', 8, 'EN'); insert into pelicula values ('MA005', 'Guardians of the Galaxy', '2014-08-01', 8, 'EN'); insert into pelicula values ('MA006', 'Avengers: Age of Ultron', '2015-05-01', 7.3, 'EN'); insert into pelicula values ('MA007', 'Doctor Strange', '2016-11-04', 7.5, 'EN'); insert into pelicula values ('MA008', 'Spider-Man: Homecoming', '2017-07-07', 7.4, 'EN'); insert into pelicula values ('MA009', 'Black Panther', '2018-02-16', 7.3, 'EN'); insert into pelicula values ('MA010', 'Avengers: Infinity War', '2018-04-27', 8.4, 'EN'); insert into pelicula values ('MA011', 'Avengers: Endgame', '2019-04-26', 8.4, 'EN'); insert into actor values ('001','Robert', 'Downey', '1965-04-04'); insert into actor values ('002','Jon', 'Favreau', '1966-10-19'); insert into actor values ('003','Chris', 'Hemsworth', '1983-08-11'); insert into actor values ('004','Tom', 'Hiddleston', '1981-02-09'); insert into actor values ('005','Natalie', 'Portman', '1981-06-09'); insert into actor values ('006','Chris', 'Evans', '1981-06-13'); insert into actor values ('007','Sebastian', 'Stan', '1982-08-13'); insert into actor values ('008','Jeremy', 'Renner', '1971-01-07'); insert into actor values ('009','Scarlett', 'Johansson', '1984-11-22'); insert into actor values ('010','Mark', 'Ruffalo', '1967-11-22'); insert into actor values ('011','Clark', 'Gregg', '1962-04-02'); insert into actor values ('012','Samuel L.', 'Jackson', '1948-12-21'); insert into actor values ('013','Chris', 'Pratt', '1979-06-21'); insert into actor values ('014','Zoe', 'Salda\u00f1a', '1978-06-19'); insert into actor values ('015','Dave', 'Bautista', '1969-01-18'); insert into actor values ('016','Vin', 'Diesel', '1967-07-18'); insert into actor values ('017','Bradley', 'Cooper', '1975-01-05'); insert into actor values ('018','Michael', 'Rooker', '1955-04-06'); insert into actor values ('019','Elisabeth', 'Olsen', '1989-02-16'); insert into actor values ('020','Paul', 'Bettany', '1971-05-27'); insert into actor values ('021','Anthony', 'Mackie', '1978-09-23'); insert into actor values ('022','Bennedict', 'Cumberbatch', '1976-07-19'); insert into actor values ('023','Rachel', 'McAdams', '1978-11-17'); insert into actor values ('024','Tom', 'Holland', '1996-06-01'); insert into actor values ('025','Zendaya', 'Coleman', '1996-09-01'); insert into actor values ('026','Chadwick', 'Boseman', '1976-11-29'); insert into actor values ('027','Josh', 'Brolin', '1968-02-12'); insert into actor values ('028','Brie', 'Larson', '1989-10-01'); insert into pelicula_actor values ('001', 'MA001', 'Principal'); insert into pelicula_actor values ('002', 'MA001', 'Secundario'); insert into pelicula_actor values ('003', 'MA002', 'Principal'); insert into pelicula_actor values ('004', 'MA002', 'Principal'); insert into pelicula_actor values ('005', 'MA002', 'Principal'); insert into pelicula_actor values ('006', 'MA003', 'Principal'); insert into pelicula_actor values ('007', 'MA003', 'Secundario'); insert into pelicula_actor values ('001', 'MA004', 'Principal'); insert into pelicula_actor values ('002', 'MA004', 'Secundario'); insert into pelicula_actor values ('003', 'MA004', 'Principal'); insert into pelicula_actor values ('004', 'MA004', 'Principal'); insert into pelicula_actor values ('006', 'MA004', 'Principal'); insert into pelicula_actor values ('008', 'MA004', 'Principal'); insert into pelicula_actor values ('009', 'MA004', 'Principal'); insert into pelicula_actor values ('010', 'MA004', 'Principal'); insert into pelicula_actor values ('011', 'MA004', 'Secundario'); insert into pelicula_actor values ('012', 'MA004', 'Principal'); insert into pelicula_actor values ('013', 'MA005', 'Principal'); insert into pelicula_actor values ('014', 'MA005', 'Principal'); insert into pelicula_actor values ('015', 'MA005', 'Principal'); insert into pelicula_actor values ('016', 'MA005', 'Principal'); insert into pelicula_actor values ('017', 'MA005', 'Principal'); insert into pelicula_actor values ('018', 'MA005', 'Secundario'); insert into pelicula_actor values ('001', 'MA006', 'Principal'); insert into pelicula_actor values ('003', 'MA006', 'Principal'); insert into pelicula_actor values ('006', 'MA006', 'Principal'); insert into pelicula_actor values ('008', 'MA006', 'Principal'); insert into pelicula_actor values ('009', 'MA006', 'Principal'); insert into pelicula_actor values ('010', 'MA006', 'Principal'); insert into pelicula_actor values ('019', 'MA006', 'Principal'); insert into pelicula_actor values ('020', 'MA006', 'Principal'); insert into pelicula_actor values ('022', 'MA007', 'Principal'); insert into pelicula_actor values ('023', 'MA007', 'Secundario'); insert into pelicula_actor values ('024', 'MA008', 'Principal'); insert into pelicula_actor values ('025', 'MA008', 'Principal'); insert into pelicula_actor values ('001', 'MA008', 'Secundario'); insert into pelicula_actor values ('002', 'MA008', 'Secundario'); insert into pelicula_actor values ('026', 'MA009', 'Principal'); insert into pelicula_actor values ('027', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA010', 'Principal'); insert into pelicula_actor values ('003', 'MA010', 'Principal'); insert into pelicula_actor values ('004', 'MA010', 'Secundario'); insert into pelicula_actor values ('006', 'MA010', 'Principal'); insert into pelicula_actor values ('007', 'MA010', 'Secundario'); insert into pelicula_actor values ('009', 'MA010', 'Principal'); insert into pelicula_actor values ('010', 'MA010', 'Principal'); insert into pelicula_actor values ('012', 'MA010', 'Secundario'); insert into pelicula_actor values ('013', 'MA010', 'Principal'); insert into pelicula_actor values ('014', 'MA010', 'Principal'); insert into pelicula_actor values ('015', 'MA010', 'Principal'); insert into pelicula_actor values ('016', 'MA010', 'Principal'); insert into pelicula_actor values ('017', 'MA010', 'Principal'); insert into pelicula_actor values ('019', 'MA010', 'Principal'); insert into pelicula_actor values ('020', 'MA010', 'Principal'); insert into pelicula_actor values ('021', 'MA010', 'Secundario'); insert into pelicula_actor values ('022', 'MA010', 'Principal'); insert into pelicula_actor values ('024', 'MA010', 'Principal'); insert into pelicula_actor values ('026', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA011', 'Principal'); insert into pelicula_actor values ('003', 'MA011', 'Principal'); insert into pelicula_actor values ('006', 'MA011', 'Principal'); insert into pelicula_actor values ('008', 'MA011', 'Principal'); insert into pelicula_actor values ('009', 'MA011', 'Principal'); insert into pelicula_actor values ('010', 'MA011', 'Principal'); insert into pelicula_actor values ('027', 'MA011', 'Principal'); insert into pelicula_actor values ('007', 'MA011', 'Secundario'); insert into pelicula_actor values ('013', 'MA011', 'Secundario'); insert into pelicula_actor values ('014', 'MA011', 'Secundario'); insert into pelicula_actor values ('015', 'MA011', 'Secundario'); insert into pelicula_actor values ('016', 'MA011', 'Secundario'); insert into pelicula_actor values ('017', 'MA011', 'Secundario'); insert into pelicula_actor values ('019', 'MA011', 'Secundario'); insert into pelicula_actor values ('021', 'MA011', 'Secundario'); insert into pelicula_actor values ('022', 'MA011', 'Secundario'); insert into pelicula_actor values ('024', 'MA011', 'Secundario'); insert into pelicula_actor values ('026', 'MA011', 'Secundario'); insert into pelicula_actor values ('028', 'MA011', 'Secundario'); 2.5 Acceso remoto Modificamos el fichero de configuraci\u00f3n de PostgreSQL que se encuentra en la ruta /etc/postgresql/13/main/postgresql.conf . Descomentamos la opci\u00f3n listen_addresses y donde pone localhost ponemos un asterisco. A continuaci\u00f3n modificamos el fichero pg_hba.conf , en el mismo directorio de la anterior. Buscamos la l\u00ednea que pone \"# IPv4 local connections\" , y donde pone \"127.0.0.1/32\" lo modificamos por \"all\" . Guardamos los cambios y reiniciamos el servicio de PostgreSQL. sudo systemctl restart postgresql En la maquina cliente instalamos postgresql-client . sudo apt install postgresql-client Nos conectamos a la base de datos maravilla con el cliente admin del siguiente modo (indicar la ip del servidor de base de datos): psql -h 192.168.122.98 -U admin -d maravilla 3. Oracle 3.1 Instalaci\u00f3n Descargamos Oracle 19c desde su p\u00e1gina oficial. Si se hac con wget nos dar\u00e1 error a la hora de pasarlo a formato deb con alien. Vamos a su p\u00e1gina y lo descargamos. https://www.oracle.com/database/technologies/oracle19c-linux-downloads.html Vemos que est\u00e1 en formato rpm, as\u00ed que utilizaremos la herramienta alien para pasarlo a formato deb. \u00a1OJO! Si ya tienes Oracle pasado a .deb debes instalar los paquetes libaio1 y unixodbc , que son librer\u00edas para Oracle. Si no lo instalas dar\u00e1 error cuando hagas configure . sudo apt install alien libaio1 unixodbc Usamos alien para convertir el paquete a deb. Este proceso puede ser un poco lento. sudo alien --scripts -d oracle-database-ee-19c-1.0-1.x86_64.rpm Ahora vamos a crear un script en sbin que tendr\u00e1 el siguiente contenido. sudo nano /sbin/chkconfig #!/bin/bash # Oracle XE Installer chkconfig for Debian 11 file=/etc/init.d/oracle-xe if [[ ! `tail -n1 $file | grep INIT` ]]; then echo >> $file echo '### BEGIN INIT INFO' >> $file echo '# Provides: OracleXE' >> $file echo '# Required-Start: $remote_fs $syslog' >> $file echo '# Required-Stop: $remote_fs $syslog' >> $file echo '# Default-Start: 2 3 4 5' >> $file echo '# Default-Stop: 0 1 6' >> $file echo '# Short-Description: Oracle 19c Express Edition' >> $file echo '### END INIT INFO' >> $file fi update-rc.d oracle-xe defaults 80 01 Damos los permisos al fichero creado. sudo chmod 777 /sbin/chkconfig Para que Oracle funcione se debe configurar el kernel por lo que a\u00f1adiremos lo siguiente: sudo nano /etc/sysctl.d/60-oracle.conf # Oracle 19c XE kernel parameters fs.file-max=6815744 net.ipv4.ip_local_port_range=9000 65000 kernel.sem=250 32000 100 128 kernel.shmmax=536870912 Cargamos los par\u00e1metros sin tener que reiniciar el sistema. sudo systemctl start procps.service Y ya podremos instalar Oracle 19c. sudo dpkg -i oracle-database-ee-19c_1.0-2_amd64.deb 3.2 Configuraci\u00f3n Creaci\u00f3n de la base de datos y configuraci\u00f3n de la contrase\u00f1a del administrador. sudo /etc/init.d/oracledb_ORCLCDB-19c configure 3.2.1 Posibles errores al hacer configure ERROR 1. Fallo en la comprobaci\u00f3n de la memoria A mi me aparece el siguiente error. Para solucionarlo configuramos el fichero /etc/init.d/oracledb_ORCLCDB-19c . Donde pone configure_perform a\u00f1adimos lo siguiente a la l\u00ednea $SU , como se ve en la captura. -J-Doracle.assistants.dbca.validate.ConfigurationParams=false ERROR 2. Fallo en la configuraci\u00f3n de la red Tambi\u00e9n me apareci\u00f3 el siguiente problema. Para solucionarlo hay que instalar las net-tools. sudo apt install net-tools Y para terminar a\u00f1adir a /etc/hosts nuestra ip, en mi caso 192.168.122.98 para debian-oracle . Quedar\u00eda de la siguiente forma. sudo nano /etc/hosts 127.0.0.1 localhost 192.168.122.98 debian-oracle Ya deber\u00edamos poder realizar la configuraci\u00f3n. 3.3 Terminar configuraci\u00f3n A\u00f1adimos las variables de entorno bash. sudo nano ~/.bashrc Al final del fichero, en la \u00faltima l\u00ednea a\u00f1adir lo siguiente: export ORACLE_HOME=/opt/oracle/product/19c/dbhome_1 export ORACLE_SID=XE export ORACLE_BASE=/opt/oracle export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH export PATH=$ORACLE_HOME/bin:$PATH Iniciamos las variables de entorno. . ~/.profile Arrancamos el servicio Oracle. sudo systemctl start oracledb_ORCLCDB-19c Si no conocemos el nombre exacto del servicio buscarlo con: sudo systemctl list-unit-files --type service | grep oracle Podremos entrar a Oracle usando el siguiente comando: sqlplus / as sysdba Pero nuestro usuario local deber\u00e1 estar en el grupo dba . sudo nano /etc/group 3.4 Iniciar la base de datos Si al inicializar la base de datos aparece el siguiente error es porque no le hemos dado el nombre correcto a la base de datos. Cambiamos el nombre ORACLE_SID, al nombre de nuestra base de datos, en este caso ORCLCDB. export ORACLE_SID=ORCLCDB Volvemos a iniciar las variables de entorno y reiniciamos el proceso. . ~/.profile sudo systemctl start oracledb_ORCLCDB-19c Adem\u00e1s si nos aparece error de que no encuentra los directorios deberemos crear las siguientes carpetas en el directorio base de Oracle, en mi caso /opt/oracle/product/19c/dbhome_1 . sudo mkdir fast_recovery_area sudo mkdir adump sudo chown -R oracle:oinstall fast_recovery_area sudo chown -R oracle:oinstall adump Entramos de nuevo como \"sqlplus / as sysdba\" e iniciamos la base de datos con startup . ERROR 1. ORA-65096 nombre de usuario o rol comun no valido Al entrar a sqlplus e intentar hacer cualquier cosa nos aparece el siguiente error. Para solucionarlo tenemos que utilizar el siguiente comando: alter session set \"_ORACLE_SCRIPT\"=true; ERROR 2. Teclas de flechas no funcionan Otro error com\u00fan es que al intentar recuperar un comando con la flecha arriba en sqlplus no te reconoce la tecla. As\u00ed como cuando le das a flecha izquierda no funciona para volver atr\u00e1s y corregir errores, tienes que borrar toda la l\u00ednea. Esto se soluciona instalando rlwrap e iniciando sqlplus con \u00e9ste. sudo apt install rlwrap rlwrap sqlplus / as sysdba 3.5 Creaci\u00f3n usuario Creamos un usuario llamado admin y le damos todos los privilegios. create user admin identified by admin; grant all privileges to admin; Nos conectamos con el usuario admin . conn admin 3.6 Creaci\u00f3n tablas e inserci\u00f3n de datos Creo las tablas: create table actor ( codigo varchar2 (5), nombre varchar2 (15), apellido varchar2 (15), fechanac date, constraint pk_actor primary key (codigo), constraint nombreactor_notnull check(nombre is not null), constraint apellidoactor_notnull check(apellido is not null), constraint nombreactor_mayus check(nombre=initcap(nombre)), constraint apellidoactor_mayus check(apellido=initcap(apellido)) ); create table pelicula ( codigo varchar2 (5), titulo varchar2 (30), fecha_estreno date, puntuacion number (3,1), lengua_original varchar2 (3) default 'EN', constraint pk_pelicula primary key (codigo), constraint puntuacion_ck check (puntuacion between 0 and 10), constraint fecha_ck check(fecha_estreno>to_date('01/01/2000', 'DD/MM/YYYY')), constraint titulo_unico unique(titulo), constraint cod_exp check(regexp_like (codigo, '^MA[0-9]{3}$')) ); create table pelicula_actor ( codigo_actor varchar2 (5), codigo_pelicula varchar2 (5), tipo_personaje varchar2 (15), constraint pk_pelicula_actor primary key (codigo_actor,codigo_pelicula), constraint fk_codigo_actor foreign key (codigo_actor) references actor (codigo), constraint fk_codigo_pelicula foreign key (codigo_pelicula) references pelicula (codigo), constraint tipo_ck check (tipo_personaje in ('Principal','Secundario')) ); Hago los inserts. insert into pelicula values ('MA001', 'Iron Man', to_date('2008-05-02', 'YYYY-MM-DD'), 7.9, 'EN'); insert into pelicula values ('MA002', 'Thor', to_date('2011-05-06', 'YYYY-MM-DD'), 7.0, 'EN'); insert into pelicula values ('MA003', 'Captain America: first avenger', to_date('2011-07-22', 'YYYY-MM-DD'), 6.9, 'EN'); insert into pelicula values ('MA004', 'The Avengers', to_date('2012-05-04', 'YYYY-MM-DD'), 8, 'EN'); insert into pelicula values ('MA005', 'Guardians of the Galaxy', to_date('2014-08-01', 'YYYY-MM-DD'), 8, 'EN'); insert into pelicula values ('MA006', 'Avengers: Age of Ultron', to_date('2015-05-01', 'YYYY-MM-DD'), 7.3, 'EN'); insert into pelicula values ('MA007', 'Doctor Strange', to_date('2016-11-04', \u2018YYYY-MM-DD\u2019), 7.5, 'EN'); insert into pelicula values ('MA008', 'Spider-Man: Homecoming', to_date('2017-07-07', 'YYYY-MM-DD'), 7.4, 'EN'); insert into pelicula values ('MA009', 'Black Panther', to_date('2018-02-16', 'YYYY-MM-DD'), 7.3, 'EN'); insert into pelicula values ('MA010', 'Avengers: Infinity War', to_date('2018-04-27', 'YYYY-MM-DD'), 8.4, 'EN'); insert into pelicula values ('MA011', 'Avengers: Endgame', to_date('2019-04-26', 'YYYY-MM-DD'), 8.4, 'EN'); insert into actor values ('001','Robert', 'Downey', to_date('1965-04-04', 'YYYY-MM-DD')); insert into actor values ('002','Jon', 'Favreau', to_date('1966-10-19', 'YYYY-MM-DD')); insert into actor values ('003','Chris', 'Hemsworth', to_date('1983-08-11', 'YYYY-MM-DD')); insert into actor values ('004','Tom', 'Hiddleston', to_date('1981-02-09', 'YYYY-MM-DD')); insert into actor values ('005','Natalie', 'Portman', to_date('1981-06-09', 'YYYY-MM-DD')); insert into actor values ('006','Chris', 'Evans', to_date('1981-06-13', 'YYYY-MM-DD')); insert into actor values ('007','Sebastian', 'Stan', to_date('1982-08-13', 'YYYY-MM-DD')); insert into actor values ('008','Jeremy', 'Renner', to_date('1971-01-07', 'YYYY-MM-DD')); insert into actor values ('009','Scarlett', 'Johansson', to_date('1984-11-22', 'YYYY-MM-DD')); insert into actor values ('010','Mark', 'Ruffalo', to_date('1967-11-22', 'YYYY-MM-DD')); insert into actor values ('011','Clark', 'Gregg', to_date('1962-04-02', 'YYYY-MM-DD')); insert into actor values ('012','Samuel L.', 'Jackson', to_date('1948-12-21', 'YYYY-MM-DD')); insert into actor values ('013','Chris', 'Pratt', to_date('1979-06-21', 'YYYY-MM-DD')); insert into actor values ('014','Zoe', 'Saldana', to_date('1978-06-19', 'YYYY-MM-DD')); insert into actor values ('015','Dave', 'Bautista', to_date('1969-01-18', 'YYYY-MM-DD')); insert into actor values ('016','Vin', 'Diesel', to_date('1967-07-18', 'YYYY-MM-DD')); insert into actor values ('017','Bradley', 'Cooper', to_date('1975-01-05', 'YYYY-MM-DD')); insert into actor values ('018','Michael', 'Rooker', to_date('1955-04-06', 'YYYY-MM-DD')); insert into actor values ('019','Elisabeth', 'Olsen', to_date('1989-02-16', 'YYYY-MM-DD')); insert into actor values ('020','Paul', 'Bettany', to_date('1971-05-27', 'YYYY-MM-DD')); insert into actor values ('021','Anthony', 'Mackie', to_date('1978-09-23', 'YYYY-MM-DD')); insert into actor values ('022','Bennedict', 'Cumberbatch', to_date('1976-07-19', 'YYYY-MM-DD')); insert into actor values ('023','Rachel', 'Mcadams', to_date('1978-11-17', 'YYYY-MM-DD')); insert into actor values ('024','Tom', 'Holland', to_date('1996-06-01', 'YYYY-MM-DD')); insert into actor values ('025','Zendaya', 'Coleman', to_date('1996-09-01', 'YYYY-MM-DD')); insert into actor values ('026','Chadwick', 'Boseman', to_date('1976-11-29', 'YYYY-MM-DD')); insert into actor values ('027','Josh', 'Brolin', to_date('1968-02-12', 'YYYY-MM-DD')); insert into actor values ('028','Brie', 'Larson', to_date('1989-10-01', 'YYYY-MM-DD')); insert into pelicula_actor values ('001', 'MA001', 'Principal'); insert into pelicula_actor values ('002', 'MA001', 'Secundario'); insert into pelicula_actor values ('003', 'MA002', 'Principal'); insert into pelicula_actor values ('004', 'MA002', 'Principal'); insert into pelicula_actor values ('005', 'MA002', 'Principal'); insert into pelicula_actor values ('006', 'MA003', 'Principal'); insert into pelicula_actor values ('007', 'MA003', 'Secundario'); insert into pelicula_actor values ('001', 'MA004', 'Principal'); insert into pelicula_actor values ('002', 'MA004', 'Secundario'); insert into pelicula_actor values ('003', 'MA004', 'Principal'); insert into pelicula_actor values ('004', 'MA004', 'Principal'); insert into pelicula_actor values ('006', 'MA004', 'Principal'); insert into pelicula_actor values ('008', 'MA004', 'Principal'); insert into pelicula_actor values ('009', 'MA004', 'Principal'); insert into pelicula_actor values ('010', 'MA004', 'Principal'); insert into pelicula_actor values ('011', 'MA004', 'Secundario'); insert into pelicula_actor values ('012', 'MA004', 'Principal'); insert into pelicula_actor values ('013', 'MA005', 'Principal'); insert into pelicula_actor values ('014', 'MA005', 'Principal'); insert into pelicula_actor values ('015', 'MA005', 'Principal'); insert into pelicula_actor values ('016', 'MA005', 'Principal'); insert into pelicula_actor values ('017', 'MA005', 'Principal'); insert into pelicula_actor values ('018', 'MA005', 'Secundario'); insert into pelicula_actor values ('001', 'MA006', 'Principal'); insert into pelicula_actor values ('003', 'MA006', 'Principal'); insert into pelicula_actor values ('006', 'MA006', 'Principal'); insert into pelicula_actor values ('008', 'MA006', 'Principal'); insert into pelicula_actor values ('009', 'MA006', 'Principal'); insert into pelicula_actor values ('010', 'MA006', 'Principal'); insert into pelicula_actor values ('019', 'MA006', 'Principal'); insert into pelicula_actor values ('020', 'MA006', 'Principal'); insert into pelicula_actor values ('022', 'MA007', 'Principal'); insert into pelicula_actor values ('024', 'MA008', 'Principal'); insert into pelicula_actor values ('025', 'MA008', 'Principal'); insert into pelicula_actor values ('001', 'MA008', 'Secundario'); insert into pelicula_actor values ('002', 'MA008', 'Secundario'); insert into pelicula_actor values ('026', 'MA009', 'Principal'); insert into pelicula_actor values ('027', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA010', 'Principal'); insert into pelicula_actor values ('003', 'MA010', 'Principal'); insert into pelicula_actor values ('004', 'MA010', 'Secundario'); insert into pelicula_actor values ('006', 'MA010', 'Principal'); insert into pelicula_actor values ('007', 'MA010', 'Secundario'); insert into pelicula_actor values ('009', 'MA010', 'Principal'); insert into pelicula_actor values ('010', 'MA010', 'Principal'); insert into pelicula_actor values ('012', 'MA010', 'Secundario'); insert into pelicula_actor values ('013', 'MA010', 'Principal'); insert into pelicula_actor values ('014', 'MA010', 'Principal'); insert into pelicula_actor values ('015', 'MA010', 'Principal'); insert into pelicula_actor values ('016', 'MA010', 'Principal'); insert into pelicula_actor values ('017', 'MA010', 'Principal'); insert into pelicula_actor values ('019', 'MA010', 'Principal'); insert into pelicula_actor values ('020', 'MA010', 'Principal'); insert into pelicula_actor values ('021', 'MA010', 'Secundario'); insert into pelicula_actor values ('022', 'MA010', 'Principal'); insert into pelicula_actor values ('024', 'MA010', 'Principal'); insert into pelicula_actor values ('026', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA011', 'Principal'); insert into pelicula_actor values ('003', 'MA011', 'Principal'); insert into pelicula_actor values ('006', 'MA011', 'Principal'); insert into pelicula_actor values ('008', 'MA011', 'Principal'); insert into pelicula_actor values ('009', 'MA011', 'Principal'); insert into pelicula_actor values ('010', 'MA011', 'Principal'); insert into pelicula_actor values ('027', 'MA011', 'Principal'); insert into pelicula_actor values ('007', 'MA011', 'Secundario'); insert into pelicula_actor values ('013', 'MA011', 'Secundario'); insert into pelicula_actor values ('014', 'MA011', 'Secundario'); insert into pelicula_actor values ('015', 'MA011', 'Secundario'); insert into pelicula_actor values ('016', 'MA011', 'Secundario'); insert into pelicula_actor values ('017', 'MA011', 'Secundario'); insert into pelicula_actor values ('019', 'MA011', 'Secundario'); insert into pelicula_actor values ('021', 'MA011', 'Secundario'); insert into pelicula_actor values ('022', 'MA011', 'Secundario'); insert into pelicula_actor values ('024', 'MA011', 'Secundario'); insert into pelicula_actor values ('026', 'MA011', 'Secundario'); insert into pelicula_actor values ('028', 'MA011', 'Secundario'); 3.7 Acceso remoto Vamos a la ruta \"/opt/oracle/product/19c/dbhome_1/network/admin/\" . Aqu\u00ed configuraremos los ficheros de configuraci\u00f3n listener.ora y tnsnames.ora . En listener.ora cambiamos \"GLOBAL_DBNAME\" y \"SID_NAME\" por \"ORCLCDB\" . Y en \"HOST\" ponemos \"0.0.0.0\" . En tnsnames.ora no he tenido que cambiar nada. Se quedar\u00eda como se ve en la captura. Entramos con el usuario oracle . su oracle Comprobamos el status de listener. lsnrctl status Vemos que no est\u00e1 funcionando, as\u00ed que lo iniciamos. lsnrctl start 3.8 Configuraci\u00f3n cliente En un cliente Debian11 descargo Sql*Plus InstantClient desde la p\u00e1gina oficial de Oracle con wget. wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-basic-linux.x64-21.8.0.0.0dbru.zip wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-sqlplus-linux.x64-21.8.0.0.0dbru.zip Descomprimo con unzip . sudo unzip -d /opt/oracle instantclient-basic-linux.x64-21.8.0.0.0dbru.zip sudo unzip -d /opt/oracle instantclient-sqlplus-linux.x64-21.8.0.0.0dbru.zip A\u00f1adimos las variables de entorno y aplicamos los cambios. export LD_LIBRARY_PATH=/opt/oracle/instantclient_21_8:$LD_LIBRARY_PATH export PATH=$LD_LIBRARY_PATH:$PATH . ~/.bashrc En \"/opt/oracle/instantclient_21_8/network/admin/\" creamos el fichero tnsnames.ora con el siguiente contenido. ORCLCDB= (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.122.98)(PORT = 1521)) ) (CONNECT_DATA = (SERVICE_NAME = ORCLCDB) ) ) 3.8.1 Prueba de conexi\u00f3n sqlplus admin/admin@ORCLCDB Podemos instalar e iniciar sqlplus con rlwrap para poder hacer un mejor manejo de la base de datos con las teclas de las flechas. 4. MongoDB 4.1 Instalaci\u00f3n Por defecto los paquetes de MongoDB no est\u00e1n incluidos en los repositorios de Debian, por lo que necesitaremos a\u00f1adirlos antes de instalarlo. sudo apt install curl apt-transport-https software-properties-common gnupg2 wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add - echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/5.0 main\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list Actualizamos los repositorios e instalamos MongoDB: sudo apt update sudo apt install mongodb-org Activamos el servicio mongod . sudo systemctl start mongod 4.2 Creaci\u00f3n base de datos y usuario Entramos a MongoDB: mongosh Creamos la base de datos maravilla . use maravilla Y creamos un usuario llamado admin con permisos sobre la base de datos. db.createUser( { user: \"admin\", pwd: \"admin\", roles: [ { role: \"dbOwner\", db: \"maravilla\" } ] } ) 4.4 Creaci\u00f3n de colecciones e inserci\u00f3n de datos Creo las colecciones. db.createCollection(\"pelicula\") db.createCollection(\"actor\") db.createCollection(\"pelicula_actor\") Comprobamos con \"show collections\" . Inserto los datos en cada colecci\u00f3n. db.pelicula.insertMany ([ {titulo: \"Iron Man\", fecha_estreno: 2008-05-02, puntuacion: 7.9}, {titulo: \"Thor\", fecha_estreno: 2011-05-06, puntuacion: 7}, {titulo: \"The avengers\", fecha_estreno: 2012-05-04, puntuacion: 8}, {titulo: \"Guarian pf the Galaxy\", fecha_estreno: 2014-08-01, puntuacion: 8}, {titulo: \"Avengers: Age of Ultron\", fecha_estreno: 2015-05-01, puntuacion: 7.3}, {titulo: \"Doctor Strange\", fecha_estreno: 2016-11-04, puntuacion: 7.4}, {titulo: \"Avengers: Infinity War\", fecha_estreno: 2018-02-16, puntuacion: 8.4} ]) db.actor.insertMany ([ {nombre: \"Robert\", apellido: \"Downey\", fechanac: 1965-04-04}, {nombre: \"Chris\", apellido: \"Hemsworth\", fechanac: 1983-08-11}, {nombre: \"Chris\", apellido: \"Evans\", fechanac: 1981-06-13}, {nombre: \"Chris\", apellido: \"Pratt\", fechanac: 1979-06-21}, {nombre: \"Bennedict\", apellido: \"Cumberbatch\", fechanac: 1976-07-19}, {nombre: \"Scarlett\", apellido: \"Johansson\", fechanac: 1984-11-22}, {nombre: \"Zoe\", apellido: \"Saldana\", fechanac: 1978-06-19}, {nombre: \"Elisabeth\", apellido: \"Olsen\", fechanac: 1989-02-16} ]) db.genero.insertMany ([ {tipo: \"drama\"}, {tipo: \"accion\"}, {tipo: \"aventura\"}, {tipo: \"superheroes\"} ]) Comprobamos con find . db.pelicula.find() db.actor.find() db.genero.find() 4.5 Acceso remoto Para poder acceder remotamente habr\u00e1 que configurar \"mongod.conf\" que se encuentra en /etc/ . Los siguientes valores deben quedar de la siguiente manera: bindIp: 127.0.0.1,192.168.122.98 security: authorization: enabled Reiniciar el servicio. sudo systemctl restart mongod En la m\u00e1quina cliente a\u00f1adimos los repositorios de MongoDB como se explic\u00f3 arriba e instalamos. sudo apt install mongodb-org-shell mongodb-mongosh Probamos el acceso remoto con el siguiente comando. Se especifica el nombre de usuario, la contrase\u00f1a, la ip del servidor y la base de datos a la que nos conectaremos. mongosh -u admin -p admin 192.168.122.98/maravilla 5. Aplicaci\u00f3n PostgreSQL El repositorio en el que he trabajado es este: https://github.com/afermor8/app-postgresql He utilizado como base un proyecto anterior que cre\u00e9 en flask. Copio el contenido de este proyecto en un nuevo repositorio y clono el repositorio en la m\u00e1quina que trabajar\u00e9. git clone git@github.com:afermor8/app-postgresql.git Instalamos y creamos un entorno virtual. sudo apt install python3-venv python3 -m venv entorno_prueba Entramos en el entorno creado. source entorno_prueba/bin/activate Entramos en el repositorio. cd app-postgresql En el entorno de prueba voy a instalar los paquetes necesarios que se pueden ver en el fichero requirements.txt del repositorio clonado. Usamos el comando pip install -r requirements.txt . En el repositorio app-postgresql encontramos la carpeta static, templates y la aplicaci\u00f3n app.py. Static: donde est\u00e1 el contenido est\u00e1tico (css, im\u00e1genes, js). Templates: donde est\u00e1n las plantillas html5. app.py: la aplicaci\u00f3n creada en python con flask. Lanzamos la aplicaci\u00f3n para ver lo que hay actualmente y los cambios que tendremos que realizar. python3 app.py Tenemos que instalar adem\u00e1s psycopg2. pip install psycopg2-binary He actualizado requirements.txt en el repositorio. Los cambios realizados en en la aplicaci\u00f3n se puede ver a trav\u00e9s de los commits del repositorio app-postgresql. https://github.com/afermor8/app-postgresql A continuaci\u00f3n muestro algunas capturas del funcionamiento de la aplicaci\u00f3n.","title":"Alumno 3: Arantxa"},{"location":"p1-servidores-clientes/ri/alumno3/#alumno-3-arantxa-fernandez-morato","text":"Antes de empezar comentar que la m\u00e1quina servidor de todas las bases de datos ser\u00e1 siempre la misma, una m\u00e1quina con Debian 11 llamada \"debian-oracle\" . Y la maquina cliente se llama \"debianprueba\" . Durante las conexiones remotas se puede apreciar en las capturas el nombre de las m\u00e1quinas.","title":"Alumno 3. Arantxa Fern\u00e1ndez Morat\u00f3"},{"location":"p1-servidores-clientes/ri/alumno3/#1-mysql","text":"","title":"1. MySQL"},{"location":"p1-servidores-clientes/ri/alumno3/#11-instalacion","text":"En el servidor actualizamos los repositorios e instalamos gnupg y wget , si no estuvieran ya instalados. sudo apt update sudo apt install -y gnupg wget Utilizando wget descargamos el paquete de mysql del repositorio oficial. wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb Procedemmos a instalar el paquete descargado. sudo dpkg -i mysql-apt-config_0.8.22-1_all.deb Nos aparecer\u00e1 una ventana que nos muestra la versi\u00f3n de MySQL que se instalar\u00e1, nos informa de que las herramientas y conectores est\u00e1n activados y la opci\u00f3n de software de prueba est\u00e1 desactivada. Presionamos Aceptar para continuar. Volvemos a actualizar los repositorios. sudo apt update Ya podremos instalar MySQL server en Debian 11. sudo apt install -y mysql-server Durante la instalaci\u00f3n nos preguntar\u00e1 la contrase\u00f1a del usuario administrador root. Nos aparece un menje de disponibilidad de un nuevo plugin de autenticaci\u00f3n. Presionamos Acepta . Dejamos seleccionado el plugin de autenticaci\u00f3n recomendado. Terminada la instalaci\u00f3n pasaremos a entrar con el usuario root. mysql -u root -p","title":"1.1 Instalaci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno3/#12-creacion-usuario","text":"Creamos un usuario y contrase\u00f1a para el administrador de las bases de datos que se creen. create user 'admin'@'%' identified by 'admin'; Le damos todos los privilegios. grant all privileges on *.* to admin with grant option; flush privileges;","title":"1.2 Creaci\u00f3n usuario"},{"location":"p1-servidores-clientes/ri/alumno3/#13-creacion-base-de-datos","text":"create database maravilla; Me conecto a la base de datos con el usuario creado anteriormente. use maravilla","title":"1.3 Creaci\u00f3n base de datos"},{"location":"p1-servidores-clientes/ri/alumno3/#14-creacion-tablas-e-insercion-de-datos","text":"He creado las tablas 'pelicula', 'actor' y 'pelicula_actor'. create table actor ( codigo varchar (5), nombre varchar (15), apellido varchar (15), fechanac date, constraint pk_actor primary key (codigo) ); create table pelicula ( codigo varchar (5), titulo varchar (30), fecha_estreno date, puntuacion decimal (3,1), lengua_original varchar (3), constraint pk_pelicula primary key (codigo), constraint puntuacion_ck check (puntuacion between 0 and 10) ); create table pelicula_actor ( codigo_actor varchar (5), codigo_pelicula varchar (5), tipo_personaje enum ('Principal','Secundario'), constraint pk_pelicula_actor primary key (codigo_actor,codigo_pelicula), constraint fk_codigo_actor foreign key (codigo_actor) references actor (codigo), constraint fk_codigo_pelicula foreign key (codigo_pelicula) references pelicula (codigo) ); Y he a\u00f1adido los siguientes inserts: insert into pelicula values ('MA001', 'Iron Man', '2008-05-02', 7.9, 'EN'); insert into pelicula values ('MA002', 'Thor', '2011-05-06', 7.0, 'EN'); insert into pelicula values ('MA003', 'Captain America: the first avenger', '2011-07-22', 6.9, 'EN'); insert into pelicula values ('MA004', 'The Avengers', '2012-05-04', 8, 'EN'); insert into pelicula values ('MA005', 'Guardians of the Galaxy', '2014-08-01', 8, 'EN'); insert into pelicula values ('MA006', 'Avengers: Age of Ultron', '2015-05-01', 7.3, 'EN'); insert into pelicula values ('MA007', 'Doctor Strange', '2016-11-04', 7.5, 'EN'); insert into pelicula values ('MA008', 'Spider-Man: Homecoming', '2017-07-07', 7.4, 'EN'); insert into pelicula values ('MA009', 'Black Panther', '2018-02-16', 7.3, 'EN'); insert into pelicula values ('MA010', 'Avengers: Infinity War', '2018-04-27', 8.4, 'EN'); insert into pelicula values ('MA011', 'Avengers: Endgame', '2019-04-26', 8.4, 'EN'); insert into actor values ('001','Robert', 'Downey', '1965-04-04'); insert into actor values ('002','Jon', 'Favreau', '1966-10-19'); insert into actor values ('003','Chris', 'Hemsworth', '1983-08-11'); insert into actor values ('004','Tom', 'Hiddleston', '1981-02-09'); insert into actor values ('005','Natalie', 'Portman', '1981-06-09'); insert into actor values ('006','Chris', 'Evans', '1981-06-13'); insert into actor values ('007','Sebastian', 'Stan', '1982-08-13'); insert into actor values ('008','Jeremy', 'Renner', '1971-01-07'); insert into actor values ('009','Scarlett', 'Johansson', '1984-11-22'); insert into actor values ('010','Mark', 'Ruffalo', '1967-11-22'); insert into actor values ('011','Clark', 'Gregg', '1962-04-02'); insert into actor values ('012','Samuel L.', 'Jackson', '1948-12-21'); insert into actor values ('013','Chris', 'Pratt', '1979-06-21'); insert into actor values ('014','Zoe', 'Salda\u00f1a', '1978-06-19'); insert into actor values ('015','Dave', 'Bautista', '1969-01-18'); insert into actor values ('016','Vin', 'Diesel', '1967-07-18'); insert into actor values ('017','Bradley', 'Cooper', '1975-01-05'); insert into actor values ('018','Michael', 'Rooker', '1955-04-06'); insert into actor values ('019','Elisabeth', 'Olsen', '1989-02-16'); insert into actor values ('020','Paul', 'Bettany', '1971-05-27'); insert into actor values ('021','Anthony', 'Mackie', '1978-09-23'); insert into actor values ('022','Bennedict', 'Cumberbatch', '1976-07-19'); insert into actor values ('023','Rachel', 'McAdams', '1978-11-17'); insert into actor values ('024','Tom', 'Holland', '1996-06-01'); insert into actor values ('025','Zendaya', 'Coleman', '1996-09-01'); insert into actor values ('026','Chadwick', 'Boseman', '1976-11-29'); insert into actor values ('027','Josh', 'Brolin', '1968-02-12'); insert into actor values ('028','Brie', 'Larson', '1989-10-01'); insert into pelicula_actor values ('001', 'MA001', 'Principal'); insert into pelicula_actor values ('002', 'MA001', 'Secundario'); insert into pelicula_actor values ('003', 'MA002', 'Principal'); insert into pelicula_actor values ('004', 'MA002', 'Principal'); insert into pelicula_actor values ('005', 'MA002', 'Principal'); insert into pelicula_actor values ('006', 'MA003', 'Principal'); insert into pelicula_actor values ('007', 'MA003', 'Secundario'); insert into pelicula_actor values ('001', 'MA004', 'Principal'); insert into pelicula_actor values ('002', 'MA004', 'Secundario'); insert into pelicula_actor values ('003', 'MA004', 'Principal'); insert into pelicula_actor values ('004', 'MA004', 'Principal'); insert into pelicula_actor values ('006', 'MA004', 'Principal'); insert into pelicula_actor values ('008', 'MA004', 'Principal'); insert into pelicula_actor values ('009', 'MA004', 'Principal'); insert into pelicula_actor values ('010', 'MA004', 'Principal'); insert into pelicula_actor values ('011', 'MA004', 'Secundario'); insert into pelicula_actor values ('012', 'MA004', 'Principal'); insert into pelicula_actor values ('013', 'MA005', 'Principal'); insert into pelicula_actor values ('014', 'MA005', 'Principal'); insert into pelicula_actor values ('015', 'MA005', 'Principal'); insert into pelicula_actor values ('016', 'MA005', 'Principal'); insert into pelicula_actor values ('017', 'MA005', 'Principal'); insert into pelicula_actor values ('018', 'MA005', 'Secundario'); insert into pelicula_actor values ('001', 'MA006', 'Principal'); insert into pelicula_actor values ('003', 'MA006', 'Principal'); insert into pelicula_actor values ('006', 'MA006', 'Principal'); insert into pelicula_actor values ('008', 'MA006', 'Principal'); insert into pelicula_actor values ('009', 'MA006', 'Principal'); insert into pelicula_actor values ('010', 'MA006', 'Principal'); insert into pelicula_actor values ('019', 'MA006', 'Principal'); insert into pelicula_actor values ('020', 'MA006', 'Principal'); insert into pelicula_actor values ('022', 'MA007', 'Principal'); insert into pelicula_actor values ('023', 'MA007', 'Secundario'); insert into pelicula_actor values ('024', 'MA008', 'Principal'); insert into pelicula_actor values ('025', 'MA008', 'Principal'); insert into pelicula_actor values ('001', 'MA008', 'Secundario'); insert into pelicula_actor values ('002', 'MA008', 'Secundario'); insert into pelicula_actor values ('026', 'MA009', 'Principal'); insert into pelicula_actor values ('027', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA010', 'Principal'); insert into pelicula_actor values ('003', 'MA010', 'Principal'); insert into pelicula_actor values ('004', 'MA010', 'Secundario'); insert into pelicula_actor values ('006', 'MA010', 'Principal'); insert into pelicula_actor values ('007', 'MA010', 'Secundario'); insert into pelicula_actor values ('009', 'MA010', 'Principal'); insert into pelicula_actor values ('010', 'MA010', 'Principal'); insert into pelicula_actor values ('012', 'MA010', 'Secundario'); insert into pelicula_actor values ('013', 'MA010', 'Principal'); insert into pelicula_actor values ('014', 'MA010', 'Principal'); insert into pelicula_actor values ('015', 'MA010', 'Principal'); insert into pelicula_actor values ('016', 'MA010', 'Principal'); insert into pelicula_actor values ('017', 'MA010', 'Principal'); insert into pelicula_actor values ('019', 'MA010', 'Principal'); insert into pelicula_actor values ('020', 'MA010', 'Principal'); insert into pelicula_actor values ('021', 'MA010', 'Secundario'); insert into pelicula_actor values ('022', 'MA010', 'Principal'); insert into pelicula_actor values ('024', 'MA010', 'Principal'); insert into pelicula_actor values ('026', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA011', 'Principal'); insert into pelicula_actor values ('003', 'MA011', 'Principal'); insert into pelicula_actor values ('006', 'MA011', 'Principal'); insert into pelicula_actor values ('008', 'MA011', 'Principal'); insert into pelicula_actor values ('009', 'MA011', 'Principal'); insert into pelicula_actor values ('010', 'MA011', 'Principal'); insert into pelicula_actor values ('027', 'MA011', 'Principal'); insert into pelicula_actor values ('007', 'MA011', 'Secundario'); insert into pelicula_actor values ('013', 'MA011', 'Secundario'); insert into pelicula_actor values ('014', 'MA011', 'Secundario'); insert into pelicula_actor values ('015', 'MA011', 'Secundario'); insert into pelicula_actor values ('016', 'MA011', 'Secundario'); insert into pelicula_actor values ('017', 'MA011', 'Secundario'); insert into pelicula_actor values ('019', 'MA011', 'Secundario'); insert into pelicula_actor values ('021', 'MA011', 'Secundario'); insert into pelicula_actor values ('022', 'MA011', 'Secundario'); insert into pelicula_actor values ('024', 'MA011', 'Secundario'); insert into pelicula_actor values ('026', 'MA011', 'Secundario'); insert into pelicula_actor values ('028', 'MA011', 'Secundario'); Se puede comprobar las tablas creadas con show tables; . Y los datos a\u00f1adidos a cada tabla con select .","title":"1.4 Creaci\u00f3n tablas e inserci\u00f3n de datos"},{"location":"p1-servidores-clientes/ri/alumno3/#15-acceso-remoto","text":"El puerto 3306 es en el que trabaja MySQL por defecto. Para especificar al firewall qu\u00e9 ip puede acceder al servidor de base de datos hacemos lo siguiente: sudo ufw allow from ip_cliente to any port 3306 Pero en mi caso, teniendo en cuenta que estamos en un entorno de prueba, permitir\u00e9 que se pueda acceder desde cualquier ip. sudo ufw allow 3306 Para verificar la conexi\u00f3n remota accedemos desde otra m\u00e1quina al servidor de la siguiente forma. Accederemos con el usuario admin, y en mi caso he utilizado una m\u00e1quina virtual en la que ya ten\u00eda instalado mariadb. mysql -u admin -h ip_servidor -p","title":"1.5 Acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno3/#2-postgresql","text":"","title":"2. PostgreSQL"},{"location":"p1-servidores-clientes/ri/alumno3/#21-instalacion","text":"Instalamos PostgreSQL en Debian 11 directamente con apt . sudo apt install postgresql Para entrar con el usuario postgres . sudo su postgres psql Tambi\u00e9n se puede usar: sudo -u postgres psql","title":"2.1 Instalaci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno3/#22-creacion-usuario","text":"Se puede hacer de dos formas:","title":"2.2 Creaci\u00f3n usuario"},{"location":"p1-servidores-clientes/ri/alumno3/#opcion-1","text":"Hacemos 'sudo su postgres' y seguidamente creamos el nuevo usuario con createuser . createuser admin Entramos en psql y se le asigna una contrase\u00f1a cifrada. alter user admin with encrypted password 'admin';","title":"Opci\u00f3n 1:"},{"location":"p1-servidores-clientes/ri/alumno3/#opcion-2","text":"Entramos directamente a psql y usamos el siguiente comando: create user admin with encrypted password 'admin'; Para borrar un usuario: drop user admin; En psql con \\du podemos ver los usuarios creados.","title":"Opci\u00f3n 2:"},{"location":"p1-servidores-clientes/ri/alumno3/#23-creacion-base-de-datos","text":"Para crear la base de datos tambi\u00e9n se puede hacer de dos formas:","title":"2.3 Creaci\u00f3n base de datos"},{"location":"p1-servidores-clientes/ri/alumno3/#opcion-1_1","text":"Desde el usuario postgres: sudo su postgres createdb maravilla","title":"Opci\u00f3n 1:"},{"location":"p1-servidores-clientes/ri/alumno3/#opcion-2_1","text":"Directamente desde psql: create database maravilla; Podemos ver las bases de datos creadas con: \\l Le damos permisos al usuario admin sobre la base de datos creada. grant all privileges on database maravilla to admin;","title":"Opci\u00f3n 2:"},{"location":"p1-servidores-clientes/ri/alumno3/#24-creacion-tablas-e-insercion-de-datos","text":"Nos conectamos a la base de datos maravilla : \\c maravilla Creo las tablas. create table actor ( codigo varchar (5), nombre varchar (15), apellido varchar (15), fechanac date, constraint pk_actor primary key (codigo) ); create table pelicula ( codigo varchar (5), titulo varchar (30), fecha_estreno date, puntuacion decimal (3,1), lengua_original varchar (3), constraint pk_pelicula primary key (codigo), constraint puntuacion_ck check (puntuacion between 0 and 10) ); create table pelicula_actor ( codigo_actor varchar (5), codigo_pelicula varchar (5), tipo_personaje varchar (15), constraint pk_pelicula_actor primary key (codigo_actor,codigo_pelicula), constraint fk_codigo_actor foreign key (codigo_actor) references actor (codigo), constraint fk_codigo_pelicula foreign key (codigo_pelicula) references pelicula (codigo), constraint tipo_ck check (tipo_personaje in ('Principal','Secundario')) ); Inserto los datos. insert into pelicula values ('MA001', 'Iron Man', '2008-05-02', 7.9, 'EN'); insert into pelicula values ('MA002', 'Thor', '2011-05-06', 7.0, 'EN'); insert into pelicula values ('MA003', 'Captain America:first avenger', '2011-07-22', 6.9, 'EN'); insert into pelicula values ('MA004', 'The Avengers', '2012-05-04', 8, 'EN'); insert into pelicula values ('MA005', 'Guardians of the Galaxy', '2014-08-01', 8, 'EN'); insert into pelicula values ('MA006', 'Avengers: Age of Ultron', '2015-05-01', 7.3, 'EN'); insert into pelicula values ('MA007', 'Doctor Strange', '2016-11-04', 7.5, 'EN'); insert into pelicula values ('MA008', 'Spider-Man: Homecoming', '2017-07-07', 7.4, 'EN'); insert into pelicula values ('MA009', 'Black Panther', '2018-02-16', 7.3, 'EN'); insert into pelicula values ('MA010', 'Avengers: Infinity War', '2018-04-27', 8.4, 'EN'); insert into pelicula values ('MA011', 'Avengers: Endgame', '2019-04-26', 8.4, 'EN'); insert into actor values ('001','Robert', 'Downey', '1965-04-04'); insert into actor values ('002','Jon', 'Favreau', '1966-10-19'); insert into actor values ('003','Chris', 'Hemsworth', '1983-08-11'); insert into actor values ('004','Tom', 'Hiddleston', '1981-02-09'); insert into actor values ('005','Natalie', 'Portman', '1981-06-09'); insert into actor values ('006','Chris', 'Evans', '1981-06-13'); insert into actor values ('007','Sebastian', 'Stan', '1982-08-13'); insert into actor values ('008','Jeremy', 'Renner', '1971-01-07'); insert into actor values ('009','Scarlett', 'Johansson', '1984-11-22'); insert into actor values ('010','Mark', 'Ruffalo', '1967-11-22'); insert into actor values ('011','Clark', 'Gregg', '1962-04-02'); insert into actor values ('012','Samuel L.', 'Jackson', '1948-12-21'); insert into actor values ('013','Chris', 'Pratt', '1979-06-21'); insert into actor values ('014','Zoe', 'Salda\u00f1a', '1978-06-19'); insert into actor values ('015','Dave', 'Bautista', '1969-01-18'); insert into actor values ('016','Vin', 'Diesel', '1967-07-18'); insert into actor values ('017','Bradley', 'Cooper', '1975-01-05'); insert into actor values ('018','Michael', 'Rooker', '1955-04-06'); insert into actor values ('019','Elisabeth', 'Olsen', '1989-02-16'); insert into actor values ('020','Paul', 'Bettany', '1971-05-27'); insert into actor values ('021','Anthony', 'Mackie', '1978-09-23'); insert into actor values ('022','Bennedict', 'Cumberbatch', '1976-07-19'); insert into actor values ('023','Rachel', 'McAdams', '1978-11-17'); insert into actor values ('024','Tom', 'Holland', '1996-06-01'); insert into actor values ('025','Zendaya', 'Coleman', '1996-09-01'); insert into actor values ('026','Chadwick', 'Boseman', '1976-11-29'); insert into actor values ('027','Josh', 'Brolin', '1968-02-12'); insert into actor values ('028','Brie', 'Larson', '1989-10-01'); insert into pelicula_actor values ('001', 'MA001', 'Principal'); insert into pelicula_actor values ('002', 'MA001', 'Secundario'); insert into pelicula_actor values ('003', 'MA002', 'Principal'); insert into pelicula_actor values ('004', 'MA002', 'Principal'); insert into pelicula_actor values ('005', 'MA002', 'Principal'); insert into pelicula_actor values ('006', 'MA003', 'Principal'); insert into pelicula_actor values ('007', 'MA003', 'Secundario'); insert into pelicula_actor values ('001', 'MA004', 'Principal'); insert into pelicula_actor values ('002', 'MA004', 'Secundario'); insert into pelicula_actor values ('003', 'MA004', 'Principal'); insert into pelicula_actor values ('004', 'MA004', 'Principal'); insert into pelicula_actor values ('006', 'MA004', 'Principal'); insert into pelicula_actor values ('008', 'MA004', 'Principal'); insert into pelicula_actor values ('009', 'MA004', 'Principal'); insert into pelicula_actor values ('010', 'MA004', 'Principal'); insert into pelicula_actor values ('011', 'MA004', 'Secundario'); insert into pelicula_actor values ('012', 'MA004', 'Principal'); insert into pelicula_actor values ('013', 'MA005', 'Principal'); insert into pelicula_actor values ('014', 'MA005', 'Principal'); insert into pelicula_actor values ('015', 'MA005', 'Principal'); insert into pelicula_actor values ('016', 'MA005', 'Principal'); insert into pelicula_actor values ('017', 'MA005', 'Principal'); insert into pelicula_actor values ('018', 'MA005', 'Secundario'); insert into pelicula_actor values ('001', 'MA006', 'Principal'); insert into pelicula_actor values ('003', 'MA006', 'Principal'); insert into pelicula_actor values ('006', 'MA006', 'Principal'); insert into pelicula_actor values ('008', 'MA006', 'Principal'); insert into pelicula_actor values ('009', 'MA006', 'Principal'); insert into pelicula_actor values ('010', 'MA006', 'Principal'); insert into pelicula_actor values ('019', 'MA006', 'Principal'); insert into pelicula_actor values ('020', 'MA006', 'Principal'); insert into pelicula_actor values ('022', 'MA007', 'Principal'); insert into pelicula_actor values ('023', 'MA007', 'Secundario'); insert into pelicula_actor values ('024', 'MA008', 'Principal'); insert into pelicula_actor values ('025', 'MA008', 'Principal'); insert into pelicula_actor values ('001', 'MA008', 'Secundario'); insert into pelicula_actor values ('002', 'MA008', 'Secundario'); insert into pelicula_actor values ('026', 'MA009', 'Principal'); insert into pelicula_actor values ('027', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA010', 'Principal'); insert into pelicula_actor values ('003', 'MA010', 'Principal'); insert into pelicula_actor values ('004', 'MA010', 'Secundario'); insert into pelicula_actor values ('006', 'MA010', 'Principal'); insert into pelicula_actor values ('007', 'MA010', 'Secundario'); insert into pelicula_actor values ('009', 'MA010', 'Principal'); insert into pelicula_actor values ('010', 'MA010', 'Principal'); insert into pelicula_actor values ('012', 'MA010', 'Secundario'); insert into pelicula_actor values ('013', 'MA010', 'Principal'); insert into pelicula_actor values ('014', 'MA010', 'Principal'); insert into pelicula_actor values ('015', 'MA010', 'Principal'); insert into pelicula_actor values ('016', 'MA010', 'Principal'); insert into pelicula_actor values ('017', 'MA010', 'Principal'); insert into pelicula_actor values ('019', 'MA010', 'Principal'); insert into pelicula_actor values ('020', 'MA010', 'Principal'); insert into pelicula_actor values ('021', 'MA010', 'Secundario'); insert into pelicula_actor values ('022', 'MA010', 'Principal'); insert into pelicula_actor values ('024', 'MA010', 'Principal'); insert into pelicula_actor values ('026', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA011', 'Principal'); insert into pelicula_actor values ('003', 'MA011', 'Principal'); insert into pelicula_actor values ('006', 'MA011', 'Principal'); insert into pelicula_actor values ('008', 'MA011', 'Principal'); insert into pelicula_actor values ('009', 'MA011', 'Principal'); insert into pelicula_actor values ('010', 'MA011', 'Principal'); insert into pelicula_actor values ('027', 'MA011', 'Principal'); insert into pelicula_actor values ('007', 'MA011', 'Secundario'); insert into pelicula_actor values ('013', 'MA011', 'Secundario'); insert into pelicula_actor values ('014', 'MA011', 'Secundario'); insert into pelicula_actor values ('015', 'MA011', 'Secundario'); insert into pelicula_actor values ('016', 'MA011', 'Secundario'); insert into pelicula_actor values ('017', 'MA011', 'Secundario'); insert into pelicula_actor values ('019', 'MA011', 'Secundario'); insert into pelicula_actor values ('021', 'MA011', 'Secundario'); insert into pelicula_actor values ('022', 'MA011', 'Secundario'); insert into pelicula_actor values ('024', 'MA011', 'Secundario'); insert into pelicula_actor values ('026', 'MA011', 'Secundario'); insert into pelicula_actor values ('028', 'MA011', 'Secundario');","title":"2.4 Creaci\u00f3n tablas e inserci\u00f3n de datos"},{"location":"p1-servidores-clientes/ri/alumno3/#25-acceso-remoto","text":"Modificamos el fichero de configuraci\u00f3n de PostgreSQL que se encuentra en la ruta /etc/postgresql/13/main/postgresql.conf . Descomentamos la opci\u00f3n listen_addresses y donde pone localhost ponemos un asterisco. A continuaci\u00f3n modificamos el fichero pg_hba.conf , en el mismo directorio de la anterior. Buscamos la l\u00ednea que pone \"# IPv4 local connections\" , y donde pone \"127.0.0.1/32\" lo modificamos por \"all\" . Guardamos los cambios y reiniciamos el servicio de PostgreSQL. sudo systemctl restart postgresql En la maquina cliente instalamos postgresql-client . sudo apt install postgresql-client Nos conectamos a la base de datos maravilla con el cliente admin del siguiente modo (indicar la ip del servidor de base de datos): psql -h 192.168.122.98 -U admin -d maravilla","title":"2.5 Acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno3/#3-oracle","text":"","title":"3. Oracle"},{"location":"p1-servidores-clientes/ri/alumno3/#31-instalacion","text":"Descargamos Oracle 19c desde su p\u00e1gina oficial. Si se hac con wget nos dar\u00e1 error a la hora de pasarlo a formato deb con alien. Vamos a su p\u00e1gina y lo descargamos. https://www.oracle.com/database/technologies/oracle19c-linux-downloads.html Vemos que est\u00e1 en formato rpm, as\u00ed que utilizaremos la herramienta alien para pasarlo a formato deb. \u00a1OJO! Si ya tienes Oracle pasado a .deb debes instalar los paquetes libaio1 y unixodbc , que son librer\u00edas para Oracle. Si no lo instalas dar\u00e1 error cuando hagas configure . sudo apt install alien libaio1 unixodbc Usamos alien para convertir el paquete a deb. Este proceso puede ser un poco lento. sudo alien --scripts -d oracle-database-ee-19c-1.0-1.x86_64.rpm Ahora vamos a crear un script en sbin que tendr\u00e1 el siguiente contenido. sudo nano /sbin/chkconfig #!/bin/bash # Oracle XE Installer chkconfig for Debian 11 file=/etc/init.d/oracle-xe if [[ ! `tail -n1 $file | grep INIT` ]]; then echo >> $file echo '### BEGIN INIT INFO' >> $file echo '# Provides: OracleXE' >> $file echo '# Required-Start: $remote_fs $syslog' >> $file echo '# Required-Stop: $remote_fs $syslog' >> $file echo '# Default-Start: 2 3 4 5' >> $file echo '# Default-Stop: 0 1 6' >> $file echo '# Short-Description: Oracle 19c Express Edition' >> $file echo '### END INIT INFO' >> $file fi update-rc.d oracle-xe defaults 80 01 Damos los permisos al fichero creado. sudo chmod 777 /sbin/chkconfig Para que Oracle funcione se debe configurar el kernel por lo que a\u00f1adiremos lo siguiente: sudo nano /etc/sysctl.d/60-oracle.conf # Oracle 19c XE kernel parameters fs.file-max=6815744 net.ipv4.ip_local_port_range=9000 65000 kernel.sem=250 32000 100 128 kernel.shmmax=536870912 Cargamos los par\u00e1metros sin tener que reiniciar el sistema. sudo systemctl start procps.service Y ya podremos instalar Oracle 19c. sudo dpkg -i oracle-database-ee-19c_1.0-2_amd64.deb","title":"3.1 Instalaci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno3/#32-configuracion","text":"Creaci\u00f3n de la base de datos y configuraci\u00f3n de la contrase\u00f1a del administrador. sudo /etc/init.d/oracledb_ORCLCDB-19c configure","title":"3.2 Configuraci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno3/#321-posibles-errores-al-hacer-configure","text":"","title":"3.2.1 Posibles errores al hacer configure"},{"location":"p1-servidores-clientes/ri/alumno3/#error-1-fallo-en-la-comprobacion-de-la-memoria","text":"A mi me aparece el siguiente error. Para solucionarlo configuramos el fichero /etc/init.d/oracledb_ORCLCDB-19c . Donde pone configure_perform a\u00f1adimos lo siguiente a la l\u00ednea $SU , como se ve en la captura. -J-Doracle.assistants.dbca.validate.ConfigurationParams=false","title":"ERROR 1. Fallo en la comprobaci\u00f3n de la memoria"},{"location":"p1-servidores-clientes/ri/alumno3/#error-2-fallo-en-la-configuracion-de-la-red","text":"Tambi\u00e9n me apareci\u00f3 el siguiente problema. Para solucionarlo hay que instalar las net-tools. sudo apt install net-tools Y para terminar a\u00f1adir a /etc/hosts nuestra ip, en mi caso 192.168.122.98 para debian-oracle . Quedar\u00eda de la siguiente forma. sudo nano /etc/hosts 127.0.0.1 localhost 192.168.122.98 debian-oracle Ya deber\u00edamos poder realizar la configuraci\u00f3n.","title":"ERROR 2. Fallo en la configuraci\u00f3n de la red"},{"location":"p1-servidores-clientes/ri/alumno3/#33-terminar-configuracion","text":"A\u00f1adimos las variables de entorno bash. sudo nano ~/.bashrc Al final del fichero, en la \u00faltima l\u00ednea a\u00f1adir lo siguiente: export ORACLE_HOME=/opt/oracle/product/19c/dbhome_1 export ORACLE_SID=XE export ORACLE_BASE=/opt/oracle export LD_LIBRARY_PATH=$ORACLE_HOME/lib:$LD_LIBRARY_PATH export PATH=$ORACLE_HOME/bin:$PATH Iniciamos las variables de entorno. . ~/.profile Arrancamos el servicio Oracle. sudo systemctl start oracledb_ORCLCDB-19c Si no conocemos el nombre exacto del servicio buscarlo con: sudo systemctl list-unit-files --type service | grep oracle Podremos entrar a Oracle usando el siguiente comando: sqlplus / as sysdba Pero nuestro usuario local deber\u00e1 estar en el grupo dba . sudo nano /etc/group","title":"3.3 Terminar configuraci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno3/#34-iniciar-la-base-de-datos","text":"Si al inicializar la base de datos aparece el siguiente error es porque no le hemos dado el nombre correcto a la base de datos. Cambiamos el nombre ORACLE_SID, al nombre de nuestra base de datos, en este caso ORCLCDB. export ORACLE_SID=ORCLCDB Volvemos a iniciar las variables de entorno y reiniciamos el proceso. . ~/.profile sudo systemctl start oracledb_ORCLCDB-19c Adem\u00e1s si nos aparece error de que no encuentra los directorios deberemos crear las siguientes carpetas en el directorio base de Oracle, en mi caso /opt/oracle/product/19c/dbhome_1 . sudo mkdir fast_recovery_area sudo mkdir adump sudo chown -R oracle:oinstall fast_recovery_area sudo chown -R oracle:oinstall adump Entramos de nuevo como \"sqlplus / as sysdba\" e iniciamos la base de datos con startup .","title":"3.4 Iniciar la base de datos"},{"location":"p1-servidores-clientes/ri/alumno3/#error-1-ora-65096-nombre-de-usuario-o-rol-comun-no-valido","text":"Al entrar a sqlplus e intentar hacer cualquier cosa nos aparece el siguiente error. Para solucionarlo tenemos que utilizar el siguiente comando: alter session set \"_ORACLE_SCRIPT\"=true;","title":"ERROR 1. ORA-65096 nombre de usuario o rol comun no valido"},{"location":"p1-servidores-clientes/ri/alumno3/#error-2-teclas-de-flechas-no-funcionan","text":"Otro error com\u00fan es que al intentar recuperar un comando con la flecha arriba en sqlplus no te reconoce la tecla. As\u00ed como cuando le das a flecha izquierda no funciona para volver atr\u00e1s y corregir errores, tienes que borrar toda la l\u00ednea. Esto se soluciona instalando rlwrap e iniciando sqlplus con \u00e9ste. sudo apt install rlwrap rlwrap sqlplus / as sysdba","title":"ERROR 2. Teclas de flechas no funcionan"},{"location":"p1-servidores-clientes/ri/alumno3/#35-creacion-usuario","text":"Creamos un usuario llamado admin y le damos todos los privilegios. create user admin identified by admin; grant all privileges to admin; Nos conectamos con el usuario admin . conn admin","title":"3.5 Creaci\u00f3n usuario"},{"location":"p1-servidores-clientes/ri/alumno3/#36-creacion-tablas-e-insercion-de-datos","text":"Creo las tablas: create table actor ( codigo varchar2 (5), nombre varchar2 (15), apellido varchar2 (15), fechanac date, constraint pk_actor primary key (codigo), constraint nombreactor_notnull check(nombre is not null), constraint apellidoactor_notnull check(apellido is not null), constraint nombreactor_mayus check(nombre=initcap(nombre)), constraint apellidoactor_mayus check(apellido=initcap(apellido)) ); create table pelicula ( codigo varchar2 (5), titulo varchar2 (30), fecha_estreno date, puntuacion number (3,1), lengua_original varchar2 (3) default 'EN', constraint pk_pelicula primary key (codigo), constraint puntuacion_ck check (puntuacion between 0 and 10), constraint fecha_ck check(fecha_estreno>to_date('01/01/2000', 'DD/MM/YYYY')), constraint titulo_unico unique(titulo), constraint cod_exp check(regexp_like (codigo, '^MA[0-9]{3}$')) ); create table pelicula_actor ( codigo_actor varchar2 (5), codigo_pelicula varchar2 (5), tipo_personaje varchar2 (15), constraint pk_pelicula_actor primary key (codigo_actor,codigo_pelicula), constraint fk_codigo_actor foreign key (codigo_actor) references actor (codigo), constraint fk_codigo_pelicula foreign key (codigo_pelicula) references pelicula (codigo), constraint tipo_ck check (tipo_personaje in ('Principal','Secundario')) ); Hago los inserts. insert into pelicula values ('MA001', 'Iron Man', to_date('2008-05-02', 'YYYY-MM-DD'), 7.9, 'EN'); insert into pelicula values ('MA002', 'Thor', to_date('2011-05-06', 'YYYY-MM-DD'), 7.0, 'EN'); insert into pelicula values ('MA003', 'Captain America: first avenger', to_date('2011-07-22', 'YYYY-MM-DD'), 6.9, 'EN'); insert into pelicula values ('MA004', 'The Avengers', to_date('2012-05-04', 'YYYY-MM-DD'), 8, 'EN'); insert into pelicula values ('MA005', 'Guardians of the Galaxy', to_date('2014-08-01', 'YYYY-MM-DD'), 8, 'EN'); insert into pelicula values ('MA006', 'Avengers: Age of Ultron', to_date('2015-05-01', 'YYYY-MM-DD'), 7.3, 'EN'); insert into pelicula values ('MA007', 'Doctor Strange', to_date('2016-11-04', \u2018YYYY-MM-DD\u2019), 7.5, 'EN'); insert into pelicula values ('MA008', 'Spider-Man: Homecoming', to_date('2017-07-07', 'YYYY-MM-DD'), 7.4, 'EN'); insert into pelicula values ('MA009', 'Black Panther', to_date('2018-02-16', 'YYYY-MM-DD'), 7.3, 'EN'); insert into pelicula values ('MA010', 'Avengers: Infinity War', to_date('2018-04-27', 'YYYY-MM-DD'), 8.4, 'EN'); insert into pelicula values ('MA011', 'Avengers: Endgame', to_date('2019-04-26', 'YYYY-MM-DD'), 8.4, 'EN'); insert into actor values ('001','Robert', 'Downey', to_date('1965-04-04', 'YYYY-MM-DD')); insert into actor values ('002','Jon', 'Favreau', to_date('1966-10-19', 'YYYY-MM-DD')); insert into actor values ('003','Chris', 'Hemsworth', to_date('1983-08-11', 'YYYY-MM-DD')); insert into actor values ('004','Tom', 'Hiddleston', to_date('1981-02-09', 'YYYY-MM-DD')); insert into actor values ('005','Natalie', 'Portman', to_date('1981-06-09', 'YYYY-MM-DD')); insert into actor values ('006','Chris', 'Evans', to_date('1981-06-13', 'YYYY-MM-DD')); insert into actor values ('007','Sebastian', 'Stan', to_date('1982-08-13', 'YYYY-MM-DD')); insert into actor values ('008','Jeremy', 'Renner', to_date('1971-01-07', 'YYYY-MM-DD')); insert into actor values ('009','Scarlett', 'Johansson', to_date('1984-11-22', 'YYYY-MM-DD')); insert into actor values ('010','Mark', 'Ruffalo', to_date('1967-11-22', 'YYYY-MM-DD')); insert into actor values ('011','Clark', 'Gregg', to_date('1962-04-02', 'YYYY-MM-DD')); insert into actor values ('012','Samuel L.', 'Jackson', to_date('1948-12-21', 'YYYY-MM-DD')); insert into actor values ('013','Chris', 'Pratt', to_date('1979-06-21', 'YYYY-MM-DD')); insert into actor values ('014','Zoe', 'Saldana', to_date('1978-06-19', 'YYYY-MM-DD')); insert into actor values ('015','Dave', 'Bautista', to_date('1969-01-18', 'YYYY-MM-DD')); insert into actor values ('016','Vin', 'Diesel', to_date('1967-07-18', 'YYYY-MM-DD')); insert into actor values ('017','Bradley', 'Cooper', to_date('1975-01-05', 'YYYY-MM-DD')); insert into actor values ('018','Michael', 'Rooker', to_date('1955-04-06', 'YYYY-MM-DD')); insert into actor values ('019','Elisabeth', 'Olsen', to_date('1989-02-16', 'YYYY-MM-DD')); insert into actor values ('020','Paul', 'Bettany', to_date('1971-05-27', 'YYYY-MM-DD')); insert into actor values ('021','Anthony', 'Mackie', to_date('1978-09-23', 'YYYY-MM-DD')); insert into actor values ('022','Bennedict', 'Cumberbatch', to_date('1976-07-19', 'YYYY-MM-DD')); insert into actor values ('023','Rachel', 'Mcadams', to_date('1978-11-17', 'YYYY-MM-DD')); insert into actor values ('024','Tom', 'Holland', to_date('1996-06-01', 'YYYY-MM-DD')); insert into actor values ('025','Zendaya', 'Coleman', to_date('1996-09-01', 'YYYY-MM-DD')); insert into actor values ('026','Chadwick', 'Boseman', to_date('1976-11-29', 'YYYY-MM-DD')); insert into actor values ('027','Josh', 'Brolin', to_date('1968-02-12', 'YYYY-MM-DD')); insert into actor values ('028','Brie', 'Larson', to_date('1989-10-01', 'YYYY-MM-DD')); insert into pelicula_actor values ('001', 'MA001', 'Principal'); insert into pelicula_actor values ('002', 'MA001', 'Secundario'); insert into pelicula_actor values ('003', 'MA002', 'Principal'); insert into pelicula_actor values ('004', 'MA002', 'Principal'); insert into pelicula_actor values ('005', 'MA002', 'Principal'); insert into pelicula_actor values ('006', 'MA003', 'Principal'); insert into pelicula_actor values ('007', 'MA003', 'Secundario'); insert into pelicula_actor values ('001', 'MA004', 'Principal'); insert into pelicula_actor values ('002', 'MA004', 'Secundario'); insert into pelicula_actor values ('003', 'MA004', 'Principal'); insert into pelicula_actor values ('004', 'MA004', 'Principal'); insert into pelicula_actor values ('006', 'MA004', 'Principal'); insert into pelicula_actor values ('008', 'MA004', 'Principal'); insert into pelicula_actor values ('009', 'MA004', 'Principal'); insert into pelicula_actor values ('010', 'MA004', 'Principal'); insert into pelicula_actor values ('011', 'MA004', 'Secundario'); insert into pelicula_actor values ('012', 'MA004', 'Principal'); insert into pelicula_actor values ('013', 'MA005', 'Principal'); insert into pelicula_actor values ('014', 'MA005', 'Principal'); insert into pelicula_actor values ('015', 'MA005', 'Principal'); insert into pelicula_actor values ('016', 'MA005', 'Principal'); insert into pelicula_actor values ('017', 'MA005', 'Principal'); insert into pelicula_actor values ('018', 'MA005', 'Secundario'); insert into pelicula_actor values ('001', 'MA006', 'Principal'); insert into pelicula_actor values ('003', 'MA006', 'Principal'); insert into pelicula_actor values ('006', 'MA006', 'Principal'); insert into pelicula_actor values ('008', 'MA006', 'Principal'); insert into pelicula_actor values ('009', 'MA006', 'Principal'); insert into pelicula_actor values ('010', 'MA006', 'Principal'); insert into pelicula_actor values ('019', 'MA006', 'Principal'); insert into pelicula_actor values ('020', 'MA006', 'Principal'); insert into pelicula_actor values ('022', 'MA007', 'Principal'); insert into pelicula_actor values ('024', 'MA008', 'Principal'); insert into pelicula_actor values ('025', 'MA008', 'Principal'); insert into pelicula_actor values ('001', 'MA008', 'Secundario'); insert into pelicula_actor values ('002', 'MA008', 'Secundario'); insert into pelicula_actor values ('026', 'MA009', 'Principal'); insert into pelicula_actor values ('027', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA010', 'Principal'); insert into pelicula_actor values ('003', 'MA010', 'Principal'); insert into pelicula_actor values ('004', 'MA010', 'Secundario'); insert into pelicula_actor values ('006', 'MA010', 'Principal'); insert into pelicula_actor values ('007', 'MA010', 'Secundario'); insert into pelicula_actor values ('009', 'MA010', 'Principal'); insert into pelicula_actor values ('010', 'MA010', 'Principal'); insert into pelicula_actor values ('012', 'MA010', 'Secundario'); insert into pelicula_actor values ('013', 'MA010', 'Principal'); insert into pelicula_actor values ('014', 'MA010', 'Principal'); insert into pelicula_actor values ('015', 'MA010', 'Principal'); insert into pelicula_actor values ('016', 'MA010', 'Principal'); insert into pelicula_actor values ('017', 'MA010', 'Principal'); insert into pelicula_actor values ('019', 'MA010', 'Principal'); insert into pelicula_actor values ('020', 'MA010', 'Principal'); insert into pelicula_actor values ('021', 'MA010', 'Secundario'); insert into pelicula_actor values ('022', 'MA010', 'Principal'); insert into pelicula_actor values ('024', 'MA010', 'Principal'); insert into pelicula_actor values ('026', 'MA010', 'Principal'); insert into pelicula_actor values ('001', 'MA011', 'Principal'); insert into pelicula_actor values ('003', 'MA011', 'Principal'); insert into pelicula_actor values ('006', 'MA011', 'Principal'); insert into pelicula_actor values ('008', 'MA011', 'Principal'); insert into pelicula_actor values ('009', 'MA011', 'Principal'); insert into pelicula_actor values ('010', 'MA011', 'Principal'); insert into pelicula_actor values ('027', 'MA011', 'Principal'); insert into pelicula_actor values ('007', 'MA011', 'Secundario'); insert into pelicula_actor values ('013', 'MA011', 'Secundario'); insert into pelicula_actor values ('014', 'MA011', 'Secundario'); insert into pelicula_actor values ('015', 'MA011', 'Secundario'); insert into pelicula_actor values ('016', 'MA011', 'Secundario'); insert into pelicula_actor values ('017', 'MA011', 'Secundario'); insert into pelicula_actor values ('019', 'MA011', 'Secundario'); insert into pelicula_actor values ('021', 'MA011', 'Secundario'); insert into pelicula_actor values ('022', 'MA011', 'Secundario'); insert into pelicula_actor values ('024', 'MA011', 'Secundario'); insert into pelicula_actor values ('026', 'MA011', 'Secundario'); insert into pelicula_actor values ('028', 'MA011', 'Secundario');","title":"3.6 Creaci\u00f3n tablas e inserci\u00f3n de datos"},{"location":"p1-servidores-clientes/ri/alumno3/#37-acceso-remoto","text":"Vamos a la ruta \"/opt/oracle/product/19c/dbhome_1/network/admin/\" . Aqu\u00ed configuraremos los ficheros de configuraci\u00f3n listener.ora y tnsnames.ora . En listener.ora cambiamos \"GLOBAL_DBNAME\" y \"SID_NAME\" por \"ORCLCDB\" . Y en \"HOST\" ponemos \"0.0.0.0\" . En tnsnames.ora no he tenido que cambiar nada. Se quedar\u00eda como se ve en la captura. Entramos con el usuario oracle . su oracle Comprobamos el status de listener. lsnrctl status Vemos que no est\u00e1 funcionando, as\u00ed que lo iniciamos. lsnrctl start","title":"3.7 Acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno3/#38-configuracion-cliente","text":"En un cliente Debian11 descargo Sql*Plus InstantClient desde la p\u00e1gina oficial de Oracle con wget. wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-basic-linux.x64-21.8.0.0.0dbru.zip wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-sqlplus-linux.x64-21.8.0.0.0dbru.zip Descomprimo con unzip . sudo unzip -d /opt/oracle instantclient-basic-linux.x64-21.8.0.0.0dbru.zip sudo unzip -d /opt/oracle instantclient-sqlplus-linux.x64-21.8.0.0.0dbru.zip A\u00f1adimos las variables de entorno y aplicamos los cambios. export LD_LIBRARY_PATH=/opt/oracle/instantclient_21_8:$LD_LIBRARY_PATH export PATH=$LD_LIBRARY_PATH:$PATH . ~/.bashrc En \"/opt/oracle/instantclient_21_8/network/admin/\" creamos el fichero tnsnames.ora con el siguiente contenido. ORCLCDB= (DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = 192.168.122.98)(PORT = 1521)) ) (CONNECT_DATA = (SERVICE_NAME = ORCLCDB) ) )","title":"3.8 Configuraci\u00f3n cliente"},{"location":"p1-servidores-clientes/ri/alumno3/#381-prueba-de-conexion","text":"sqlplus admin/admin@ORCLCDB Podemos instalar e iniciar sqlplus con rlwrap para poder hacer un mejor manejo de la base de datos con las teclas de las flechas.","title":"3.8.1 Prueba de conexi\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno3/#4-mongodb","text":"","title":"4. MongoDB"},{"location":"p1-servidores-clientes/ri/alumno3/#41-instalacion","text":"Por defecto los paquetes de MongoDB no est\u00e1n incluidos en los repositorios de Debian, por lo que necesitaremos a\u00f1adirlos antes de instalarlo. sudo apt install curl apt-transport-https software-properties-common gnupg2 wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | sudo apt-key add - echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/5.0 main\" | sudo tee /etc/apt/sources.list.d/mongodb-org-5.0.list Actualizamos los repositorios e instalamos MongoDB: sudo apt update sudo apt install mongodb-org Activamos el servicio mongod . sudo systemctl start mongod","title":"4.1 Instalaci\u00f3n"},{"location":"p1-servidores-clientes/ri/alumno3/#42-creacion-base-de-datos-y-usuario","text":"Entramos a MongoDB: mongosh Creamos la base de datos maravilla . use maravilla Y creamos un usuario llamado admin con permisos sobre la base de datos. db.createUser( { user: \"admin\", pwd: \"admin\", roles: [ { role: \"dbOwner\", db: \"maravilla\" } ] } )","title":"4.2 Creaci\u00f3n base de datos y usuario"},{"location":"p1-servidores-clientes/ri/alumno3/#44-creacion-de-colecciones-e-insercion-de-datos","text":"Creo las colecciones. db.createCollection(\"pelicula\") db.createCollection(\"actor\") db.createCollection(\"pelicula_actor\") Comprobamos con \"show collections\" . Inserto los datos en cada colecci\u00f3n. db.pelicula.insertMany ([ {titulo: \"Iron Man\", fecha_estreno: 2008-05-02, puntuacion: 7.9}, {titulo: \"Thor\", fecha_estreno: 2011-05-06, puntuacion: 7}, {titulo: \"The avengers\", fecha_estreno: 2012-05-04, puntuacion: 8}, {titulo: \"Guarian pf the Galaxy\", fecha_estreno: 2014-08-01, puntuacion: 8}, {titulo: \"Avengers: Age of Ultron\", fecha_estreno: 2015-05-01, puntuacion: 7.3}, {titulo: \"Doctor Strange\", fecha_estreno: 2016-11-04, puntuacion: 7.4}, {titulo: \"Avengers: Infinity War\", fecha_estreno: 2018-02-16, puntuacion: 8.4} ]) db.actor.insertMany ([ {nombre: \"Robert\", apellido: \"Downey\", fechanac: 1965-04-04}, {nombre: \"Chris\", apellido: \"Hemsworth\", fechanac: 1983-08-11}, {nombre: \"Chris\", apellido: \"Evans\", fechanac: 1981-06-13}, {nombre: \"Chris\", apellido: \"Pratt\", fechanac: 1979-06-21}, {nombre: \"Bennedict\", apellido: \"Cumberbatch\", fechanac: 1976-07-19}, {nombre: \"Scarlett\", apellido: \"Johansson\", fechanac: 1984-11-22}, {nombre: \"Zoe\", apellido: \"Saldana\", fechanac: 1978-06-19}, {nombre: \"Elisabeth\", apellido: \"Olsen\", fechanac: 1989-02-16} ]) db.genero.insertMany ([ {tipo: \"drama\"}, {tipo: \"accion\"}, {tipo: \"aventura\"}, {tipo: \"superheroes\"} ]) Comprobamos con find . db.pelicula.find() db.actor.find() db.genero.find()","title":"4.4 Creaci\u00f3n de colecciones e inserci\u00f3n de datos"},{"location":"p1-servidores-clientes/ri/alumno3/#45-acceso-remoto","text":"Para poder acceder remotamente habr\u00e1 que configurar \"mongod.conf\" que se encuentra en /etc/ . Los siguientes valores deben quedar de la siguiente manera: bindIp: 127.0.0.1,192.168.122.98 security: authorization: enabled Reiniciar el servicio. sudo systemctl restart mongod En la m\u00e1quina cliente a\u00f1adimos los repositorios de MongoDB como se explic\u00f3 arriba e instalamos. sudo apt install mongodb-org-shell mongodb-mongosh Probamos el acceso remoto con el siguiente comando. Se especifica el nombre de usuario, la contrase\u00f1a, la ip del servidor y la base de datos a la que nos conectaremos. mongosh -u admin -p admin 192.168.122.98/maravilla","title":"4.5 Acceso remoto"},{"location":"p1-servidores-clientes/ri/alumno3/#5-aplicacion-postgresql","text":"El repositorio en el que he trabajado es este: https://github.com/afermor8/app-postgresql He utilizado como base un proyecto anterior que cre\u00e9 en flask. Copio el contenido de este proyecto en un nuevo repositorio y clono el repositorio en la m\u00e1quina que trabajar\u00e9. git clone git@github.com:afermor8/app-postgresql.git Instalamos y creamos un entorno virtual. sudo apt install python3-venv python3 -m venv entorno_prueba Entramos en el entorno creado. source entorno_prueba/bin/activate Entramos en el repositorio. cd app-postgresql En el entorno de prueba voy a instalar los paquetes necesarios que se pueden ver en el fichero requirements.txt del repositorio clonado. Usamos el comando pip install -r requirements.txt . En el repositorio app-postgresql encontramos la carpeta static, templates y la aplicaci\u00f3n app.py. Static: donde est\u00e1 el contenido est\u00e1tico (css, im\u00e1genes, js). Templates: donde est\u00e1n las plantillas html5. app.py: la aplicaci\u00f3n creada en python con flask. Lanzamos la aplicaci\u00f3n para ver lo que hay actualmente y los cambios que tendremos que realizar. python3 app.py Tenemos que instalar adem\u00e1s psycopg2. pip install psycopg2-binary He actualizado requirements.txt en el repositorio. Los cambios realizados en en la aplicaci\u00f3n se puede ver a trav\u00e9s de los commits del repositorio app-postgresql. https://github.com/afermor8/app-postgresql A continuaci\u00f3n muestro algunas capturas del funcionamiento de la aplicaci\u00f3n.","title":"5. Aplicaci\u00f3n PostgreSQL"},{"location":"p1-servidores-clientes/ri/alumno4/","text":"Alumno 4 Instalaci\u00f3n de un servidor Postgresql y su posterior acceso Comenzaremos actualizando el sistema e instalando postgresql con derechos de privilegio root@debian:/home/usuario# apt update && apt install postgresql -y Comprobamos si el servicio est\u00e1 activo, si no es as\u00ed lo iniciamos con sudo systemctl start postgresql Tras esto, comprobaremos que el usuario postrgres existe, ya que es el que nos dar\u00e1 el acceso a la base de datos, lo podemos comprobar con el siguiente comando: cat /etc/passwd | egrep \"postgres\" Si no tenemos el usuario creado, lo haremos con sudo useradd postgres Con el comando groups podemos ver que ese usuario tiene certificaci\u00f3n SSL, con lo cual podr\u00e1 conectarse a la base de datos ya que su usuario tiene esos derechos: postgres@debian:/home/usuario$ createdb dark-souls postgres@debian:/home/usuario$ psql con \\c dark-souls ingresamos en la base de datos Ahora procedemos a ingresar las tablas, he escogido las de mi proyecto del a\u00f1o pasado ya que le dediqu\u00e9 mucho tiempo con lo cual le tengo un especial cari\u00f1o. https://github.com/Evanticks/BBDD/blob/main/Proyecto_Tercer_Trimestre/Dark_Souls_Postgres.sql tras esto ingresamos los datos que van en las tablas, el cual se hayan en mi repositorio Comprobamos los datos con una consulta simple: dark-souls=# select * from armas; codarma | nombre | fuerza | destreza | inteligencia | rareza | nivel ---------+------------------+--------+----------+--------------+--------+------- 001 | Espada Corta | 8 | 10 | 0 | D | 5 002 | Espada Larga | 10 | 10 | 0 | C | 8 003 | Espada Artorias | 24 | 18 | 20 | S | 30 004 | Hacha de Mano | 8 | 8 | 0 | D | 6 005 | Hacha de G\u00e1rgola | 14 | 14 | 0 | A | 15 006 | Hacha de Demonio | 46 | 0 | 0 | S | 40 (6 filas) sudo nano /etc/postgresql/13/main/postgresql.conf listen_addresses = '*' Con esto podr\u00e9 conectarme desde un cliente a un servidor postgres A continuaci\u00f3n a trav\u00e9s del fichero pg_hba.conf podemos decir qu\u00e9 m\u00e1quina va a entrar a nuestro servidor, sirve de filtro de conexiones. Nos vamos a la m\u00e1quina cliente y hacemos lo siguiete: sudo apt update && sudo apt install postgresql-client -y Ahora nos faltar\u00eda saber por qu\u00e9 puerto est\u00e1 escuchando: luego creamos el usuario en el cual pondremos como par\u00e1metro en el cliente: createuser -s antonio -P Con el siguiente comando estamos diciendo que se conecte al siguiente host, con el puerto 5432 con el usuario antonio y la base de datos a la que queremos conectarnos: psql -h 192.168.122.188 -p 5432 -U antonio -d dark-souls Instalaci\u00f3n de un servidor Mariadb y su posterior acceso Procedemos con la instalaci\u00f3n con el siguiente comando: sudo apt update && sudo apt install mariadb-server -y sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf procedemos a comentar la l\u00ednea que nos bloquea el uso al exterior del loopback. #bind-address = 192.168.122.0 sudo service mariadb restart sudo mysql -u root -p Le otorgamos al siguiente usuario los privilegios sobre la base de datos: create database souls; GRANT ALL PRIVILEGES ON souls.* TO 'antonio'@'192.168.122.146' IDENTIFIED BY 'antonio' WITH GRANT OPTION; use souls; Insertamos las tablas y los insert que se hayan en mi github: https://github.com/Evanticks/BBDD/blob/main/Proyecto_Tercer_Trimestre/Dark_Souls_Mariadb.sql Ahora procedemos a instalar el cliente en nuestra m\u00e1quina: sudo apt install mariadb-client Instalaci\u00f3n de un servidor Mongodb y su posterior acceso Comenzaremos ejecutando el siguiente comando: sudo apt-get install gnupg -y wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - Estos pasos debemos realizarlo para poder tener en el repositorio la base de datos que se ir\u00e1 actualizando, adem\u00e1s de poder instalar mongo por apt. echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\" | tee /etc/apt/sources.list.d/mongodb-org.list Tras hacer un update, procedemos a instalarlo: apt-get install mongodb-org -y systemctl start mongod systemctl enable mongod Para entrar en la base de datos de mongo: mongo Accederemos al administrador que tiene los privilegios: use admin db.createUser( ... { ... user: \"AMP\", ... pwd: \"AMP\", ... roles: [ { role: \"userAdminAnyDatabase\", db: \"admin\" }, \"readWriteAnyDatabase\" ] ... } ... ) Ahora vamos a entrar en /etc/mongod.conf y especificaremos lo siguiente: security: authorization: enabled Ahora procedemos a importar nuestra base de datos guardada en JSON, ya que es el sistema de ficheros con el que trabaja Mongo, as\u00ed podremos transformarlo en colecciones dentro de la base de datos SOULS que se especifica en el siguiente comando: usuario@debian:~$ mongoimport --db SOULS --collection SOULSWEAPONS --file DarkSoulsWeapons.json --jsonArray --authenticationDatabase admin -u AMP -p AMP 2022-10-29T15:55:57.757+0200 connected to: mongodb://localhost/ 2022-10-29T15:55:57.813+0200 140 document(s) imported successfully. 0 document(s) failed to import. Creamos la base de datos SOULS, la colecci\u00f3n SOULSWAPONS y dentro los documentos que habr\u00e1 en la colecci\u00f3n. mongo -u AMP -p Accederemos a la base de datos creada anteriormente con el siguiente comando: use SOULS Ahora salimos y volvemos a entrar en el archivo de configuraci\u00f3n de mongo /etc/mongod.conf net: port: 27017 bindIp: 0.0.0.0 systemctl restart mongod Ahora procedemos a instalar mongo en el cliente y una vez hecho ese paso procedemos a conectarnos especificando el usuario y la ip del host: mongo --host 192.168.122.168 -u AMP Conexi\u00f3n de aplicaci\u00f3n web a trav\u00e9s de Oracle, Pyhton3 y Flask En los documentos que se hayan en el siguiente repositorio: https://github.com/Evanticks/Oracle_cx Podremos acceder a crear la aplicaci\u00f3n web a trav\u00e9s de python y flask, para realizar esto creamos un entorno de trabajo llamado /env, luego dentro de este podremo instalar con pip los siguientes paquetes: pip install flask pip install cx_Oracle Tras esto podemos aplicar el siguiente c\u00f3digo que realizar\u00e1 lo siguiente: @app.route('/login',methods=[\"GET\",\"POST\"]) def login(): if request.method==\"POST\": texto=request.form.get(\"user\") print ('texto=',texto) texto2=request.form.get(\"pass\") print ('texto2=',texto2) if texto=='antonio' and texto2=='antonio': connection=cx_Oracle.connect( user='antonio', password='antonio', dsn='192.168.122.20:1521/ORCLCDB', encoding='UTF-8') cursor = connection.cursor() cursor.execute(\"select * from personaje\") resultado = cursor.fetchall() cursor.execute(\"select nombre from armas\") resultado2 = cursor.fetchall() cursor.execute(\"select nombre from tesoro\") else: return redirect(url_for('login')) else: return render_template(\"login.html\") Con esto entraremos en la pantalla de login, si ingresamos nuestro usuario y contrase\u00f1a de Oracle el cual ser\u00e1 antonio, accederemos a la base de datos y mostr\u00e1r\u00e1 dos select, uno para listar los datos de la tabla personaje y otro para listar los nombres de las armas, en el html podremos ingresar el resultado generado de la consulta a trav\u00e9s de Jinja2. Ejecutaremos python3 app.py para arrancar el servidor flask que nos dar\u00e1 el acceso a la web IMPORTANTE: Para realizar esto debemos previamente activar el listener y hacer un startup para levantar la base de datos, podemos comprobarlo antes accediendo desde un cliente remoto por consola. Aqu\u00ed podemos ver que al entrar a trav\u00e9s del login, podemos ver las tablas de la base de datos.","title":"Alumno 4: Antonio"},{"location":"p1-servidores-clientes/ri/alumno4/#alumno-4","text":"","title":"Alumno 4"},{"location":"p1-servidores-clientes/ri/alumno4/#instalacion-de-un-servidor-postgresql-y-su-posterior-acceso","text":"Comenzaremos actualizando el sistema e instalando postgresql con derechos de privilegio root@debian:/home/usuario# apt update && apt install postgresql -y Comprobamos si el servicio est\u00e1 activo, si no es as\u00ed lo iniciamos con sudo systemctl start postgresql Tras esto, comprobaremos que el usuario postrgres existe, ya que es el que nos dar\u00e1 el acceso a la base de datos, lo podemos comprobar con el siguiente comando: cat /etc/passwd | egrep \"postgres\" Si no tenemos el usuario creado, lo haremos con sudo useradd postgres Con el comando groups podemos ver que ese usuario tiene certificaci\u00f3n SSL, con lo cual podr\u00e1 conectarse a la base de datos ya que su usuario tiene esos derechos: postgres@debian:/home/usuario$ createdb dark-souls postgres@debian:/home/usuario$ psql con \\c dark-souls ingresamos en la base de datos Ahora procedemos a ingresar las tablas, he escogido las de mi proyecto del a\u00f1o pasado ya que le dediqu\u00e9 mucho tiempo con lo cual le tengo un especial cari\u00f1o. https://github.com/Evanticks/BBDD/blob/main/Proyecto_Tercer_Trimestre/Dark_Souls_Postgres.sql tras esto ingresamos los datos que van en las tablas, el cual se hayan en mi repositorio Comprobamos los datos con una consulta simple: dark-souls=# select * from armas; codarma | nombre | fuerza | destreza | inteligencia | rareza | nivel ---------+------------------+--------+----------+--------------+--------+------- 001 | Espada Corta | 8 | 10 | 0 | D | 5 002 | Espada Larga | 10 | 10 | 0 | C | 8 003 | Espada Artorias | 24 | 18 | 20 | S | 30 004 | Hacha de Mano | 8 | 8 | 0 | D | 6 005 | Hacha de G\u00e1rgola | 14 | 14 | 0 | A | 15 006 | Hacha de Demonio | 46 | 0 | 0 | S | 40 (6 filas) sudo nano /etc/postgresql/13/main/postgresql.conf listen_addresses = '*' Con esto podr\u00e9 conectarme desde un cliente a un servidor postgres A continuaci\u00f3n a trav\u00e9s del fichero pg_hba.conf podemos decir qu\u00e9 m\u00e1quina va a entrar a nuestro servidor, sirve de filtro de conexiones. Nos vamos a la m\u00e1quina cliente y hacemos lo siguiete: sudo apt update && sudo apt install postgresql-client -y Ahora nos faltar\u00eda saber por qu\u00e9 puerto est\u00e1 escuchando: luego creamos el usuario en el cual pondremos como par\u00e1metro en el cliente: createuser -s antonio -P Con el siguiente comando estamos diciendo que se conecte al siguiente host, con el puerto 5432 con el usuario antonio y la base de datos a la que queremos conectarnos: psql -h 192.168.122.188 -p 5432 -U antonio -d dark-souls","title":"Instalaci\u00f3n de un servidor Postgresql y su posterior acceso"},{"location":"p1-servidores-clientes/ri/alumno4/#instalacion-de-un-servidor-mariadb-y-su-posterior-acceso","text":"Procedemos con la instalaci\u00f3n con el siguiente comando: sudo apt update && sudo apt install mariadb-server -y sudo nano /etc/mysql/mariadb.conf.d/50-server.cnf procedemos a comentar la l\u00ednea que nos bloquea el uso al exterior del loopback. #bind-address = 192.168.122.0 sudo service mariadb restart sudo mysql -u root -p Le otorgamos al siguiente usuario los privilegios sobre la base de datos: create database souls; GRANT ALL PRIVILEGES ON souls.* TO 'antonio'@'192.168.122.146' IDENTIFIED BY 'antonio' WITH GRANT OPTION; use souls; Insertamos las tablas y los insert que se hayan en mi github: https://github.com/Evanticks/BBDD/blob/main/Proyecto_Tercer_Trimestre/Dark_Souls_Mariadb.sql Ahora procedemos a instalar el cliente en nuestra m\u00e1quina: sudo apt install mariadb-client","title":"Instalaci\u00f3n de un servidor Mariadb y su posterior acceso"},{"location":"p1-servidores-clientes/ri/alumno4/#instalacion-de-un-servidor-mongodb-y-su-posterior-acceso","text":"Comenzaremos ejecutando el siguiente comando: sudo apt-get install gnupg -y wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - Estos pasos debemos realizarlo para poder tener en el repositorio la base de datos que se ir\u00e1 actualizando, adem\u00e1s de poder instalar mongo por apt. echo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\" | tee /etc/apt/sources.list.d/mongodb-org.list Tras hacer un update, procedemos a instalarlo: apt-get install mongodb-org -y systemctl start mongod systemctl enable mongod Para entrar en la base de datos de mongo: mongo Accederemos al administrador que tiene los privilegios: use admin db.createUser( ... { ... user: \"AMP\", ... pwd: \"AMP\", ... roles: [ { role: \"userAdminAnyDatabase\", db: \"admin\" }, \"readWriteAnyDatabase\" ] ... } ... ) Ahora vamos a entrar en /etc/mongod.conf y especificaremos lo siguiente: security: authorization: enabled Ahora procedemos a importar nuestra base de datos guardada en JSON, ya que es el sistema de ficheros con el que trabaja Mongo, as\u00ed podremos transformarlo en colecciones dentro de la base de datos SOULS que se especifica en el siguiente comando: usuario@debian:~$ mongoimport --db SOULS --collection SOULSWEAPONS --file DarkSoulsWeapons.json --jsonArray --authenticationDatabase admin -u AMP -p AMP 2022-10-29T15:55:57.757+0200 connected to: mongodb://localhost/ 2022-10-29T15:55:57.813+0200 140 document(s) imported successfully. 0 document(s) failed to import. Creamos la base de datos SOULS, la colecci\u00f3n SOULSWAPONS y dentro los documentos que habr\u00e1 en la colecci\u00f3n. mongo -u AMP -p Accederemos a la base de datos creada anteriormente con el siguiente comando: use SOULS Ahora salimos y volvemos a entrar en el archivo de configuraci\u00f3n de mongo /etc/mongod.conf net: port: 27017 bindIp: 0.0.0.0 systemctl restart mongod Ahora procedemos a instalar mongo en el cliente y una vez hecho ese paso procedemos a conectarnos especificando el usuario y la ip del host: mongo --host 192.168.122.168 -u AMP","title":"Instalaci\u00f3n de un servidor Mongodb y su posterior acceso"},{"location":"p1-servidores-clientes/ri/alumno4/#conexion-de-aplicacion-web-a-traves-de-oracle-pyhton3-y-flask","text":"En los documentos que se hayan en el siguiente repositorio: https://github.com/Evanticks/Oracle_cx Podremos acceder a crear la aplicaci\u00f3n web a trav\u00e9s de python y flask, para realizar esto creamos un entorno de trabajo llamado /env, luego dentro de este podremo instalar con pip los siguientes paquetes: pip install flask pip install cx_Oracle Tras esto podemos aplicar el siguiente c\u00f3digo que realizar\u00e1 lo siguiente: @app.route('/login',methods=[\"GET\",\"POST\"]) def login(): if request.method==\"POST\": texto=request.form.get(\"user\") print ('texto=',texto) texto2=request.form.get(\"pass\") print ('texto2=',texto2) if texto=='antonio' and texto2=='antonio': connection=cx_Oracle.connect( user='antonio', password='antonio', dsn='192.168.122.20:1521/ORCLCDB', encoding='UTF-8') cursor = connection.cursor() cursor.execute(\"select * from personaje\") resultado = cursor.fetchall() cursor.execute(\"select nombre from armas\") resultado2 = cursor.fetchall() cursor.execute(\"select nombre from tesoro\") else: return redirect(url_for('login')) else: return render_template(\"login.html\") Con esto entraremos en la pantalla de login, si ingresamos nuestro usuario y contrase\u00f1a de Oracle el cual ser\u00e1 antonio, accederemos a la base de datos y mostr\u00e1r\u00e1 dos select, uno para listar los datos de la tabla personaje y otro para listar los nombres de las armas, en el html podremos ingresar el resultado generado de la consulta a trav\u00e9s de Jinja2. Ejecutaremos python3 app.py para arrancar el servidor flask que nos dar\u00e1 el acceso a la web IMPORTANTE: Para realizar esto debemos previamente activar el listener y hacer un startup para levantar la base de datos, podemos comprobarlo antes accediendo desde un cliente remoto por consola. Aqu\u00ed podemos ver que al entrar a trav\u00e9s del login, podemos ver las tablas de la base de datos.","title":"Conexi\u00f3n de aplicaci\u00f3n web a trav\u00e9s de Oracle, Pyhton3 y Flask"},{"location":"p4-grupal-plsql/ejercicio1/","text":"Ejercicio 1","title":"Ejercicio 1"},{"location":"p4-grupal-plsql/ejercicio1/#ejercicio-1","text":"","title":"Ejercicio 1"},{"location":"p4-grupal-plsql/ejercicio2/","text":"Ejercicio 2","title":"Ejercicio 2"},{"location":"p4-grupal-plsql/ejercicio2/#ejercicio-2","text":"","title":"Ejercicio 2"},{"location":"p4-grupal-plsql/ejercicio3/","text":"Ejercicio 3","title":"Ejercicio 3"},{"location":"p4-grupal-plsql/ejercicio3/#ejercicio-3","text":"","title":"Ejercicio 3"},{"location":"p4-grupal-plsql/ejercicio4/","text":"Ejercicio 4","title":"Ejercicio 4"},{"location":"p4-grupal-plsql/ejercicio4/#ejercicio-4","text":"","title":"Ejercicio 4"},{"location":"p4-grupal-plsql/ejercicio5/","text":"Ejercicio 5","title":"Ejercicio 5"},{"location":"p4-grupal-plsql/ejercicio5/#ejercicio-5","text":"","title":"Ejercicio 5"},{"location":"p4-grupal-plsql/ejercicio6/","text":"Ejercicio 6","title":"Ejercicio 6"},{"location":"p4-grupal-plsql/ejercicio6/#ejercicio-6","text":"","title":"Ejercicio 6"},{"location":"p4-grupal-plsql/ejercicio7/","text":"Ejercicio 7","title":"Ejercicio 7"},{"location":"p4-grupal-plsql/ejercicio7/#ejercicio-7","text":"","title":"Ejercicio 7"},{"location":"p4-grupal-plsql/ejercicio8/","text":"Ejercicio 8","title":"Ejercicio 8"},{"location":"p4-grupal-plsql/ejercicio8/#ejercicio-8","text":"","title":"Ejercicio 8"},{"location":"p4-grupal-plsql/intro/","text":"Introducci\u00f3n En esta pr\u00e1ctica se instalan y configuran distintos servidores y clientes de bases de datos. Este trabajo ha sido realizado por: Adri\u00e1n Jaramillo Rodr\u00edguez (capit\u00e1n) Jos\u00e9 Juan Herv\u00e1s Carrasco (secretario) Arantxa Fern\u00e1ndez Morat\u00f3 (facilitadora) Antonio March\u00e1n Posada (portavoz) Puedes empezar a navegar por la documentaci\u00f3n utilizando el navbar a tu izquierda. Esperamos que esta documentaci\u00f3n sea clara, y de utilidad.","title":"Introducci\u00f3n"},{"location":"p4-grupal-plsql/intro/#introduccion","text":"En esta pr\u00e1ctica se instalan y configuran distintos servidores y clientes de bases de datos. Este trabajo ha sido realizado por: Adri\u00e1n Jaramillo Rodr\u00edguez (capit\u00e1n) Jos\u00e9 Juan Herv\u00e1s Carrasco (secretario) Arantxa Fern\u00e1ndez Morat\u00f3 (facilitadora) Antonio March\u00e1n Posada (portavoz) Puedes empezar a navegar por la documentaci\u00f3n utilizando el navbar a tu izquierda. Esperamos que esta documentaci\u00f3n sea clara, y de utilidad.","title":"Introducci\u00f3n"}]}